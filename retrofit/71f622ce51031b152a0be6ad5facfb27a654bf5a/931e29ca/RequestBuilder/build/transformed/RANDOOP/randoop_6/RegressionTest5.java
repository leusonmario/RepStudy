import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "";
        java.lang.Object[] objArray11 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(objArray11);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.lang.String str11 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder52.apiUrl("");
        retrofit.RequestBuilder requestBuilder56 = requestBuilder52.apiUrl("hi!");
        java.lang.Object[] objArray57 = requestBuilder52.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request58 = requestBuilder52.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        requestBuilder84.setapiUrl("hi!");
        retrofit.converter.Converter converter88 = requestBuilder84.converter;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder84.apiUrl("");
        retrofit.RequestBuilder requestBuilder92 = requestBuilder84.apiUrl("");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNull(converter88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(requestBuilder92);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.Object[] objArray28 = requestBuilder1.getargs();
        retrofit.converter.Converter converter29 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        java.lang.String str31 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray32 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput35 = requestBuilder34.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder34);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder49 = requestBuilder47.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder51 = requestBuilder47.apiUrl("hi!");
        java.lang.Class<?> wildcardClass52 = requestBuilder51.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(requestBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        retrofit.converter.Converter converter16 = requestBuilder1.converter;
        java.lang.String str17 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray18 = requestBuilder1.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(objArray18);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        java.lang.String str26 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder1.headers;
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.client.Header[] headerArray33 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList34 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList34, headerArray33);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList34, typedOutput36);
        requestBuilder30.setheaders((java.util.List<retrofit.client.Header>) headerList34);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        requestBuilder43.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = null;
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        java.lang.String str53 = request52.getUrl();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder43, request52 };
        requestBuilder30.setargs(objArray54);
        requestBuilder30.apiUrl = "";
        retrofit.RequestBuilder requestBuilder59 = requestBuilder30.apiUrl("hi!");
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        java.util.List<retrofit.client.Header> headerList64 = null;
        retrofit.mime.TypedOutput typedOutput65 = null;
        retrofit.client.Request request66 = new retrofit.client.Request("", "", headerList64, typedOutput65);
        retrofit.mime.TypedOutput typedOutput67 = request66.getBody();
        retrofit.mime.TypedOutput typedOutput68 = request66.getBody();
        java.util.List<retrofit.client.Header> headerList69 = request66.headers;
        requestBuilder61.setheaders(headerList69);
        retrofit.RequestBuilder requestBuilder71 = requestBuilder30.headers(headerList69);
        java.lang.Object[] objArray72 = requestBuilder30.getargs();
        java.lang.String str73 = requestBuilder30.getapiUrl();
        java.util.List<retrofit.client.Header> headerList74 = requestBuilder30.getheaders();
        retrofit.RequestBuilder requestBuilder75 = requestBuilder1.headers(headerList74);
        retrofit.converter.Converter converter76 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        requestBuilder1.apiUrl = "hi!";
        retrofit.converter.Converter converter81 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(headerList27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertNotNull(headerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(requestBuilder59);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNull(typedOutput68);
        org.junit.Assert.assertNotNull(headerList69);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(headerList74);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(converter76);
        org.junit.Assert.assertNull(converter81);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        requestBuilder35.setapiUrl("");
        requestBuilder35.setapiUrl("hi!");
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        requestBuilder45.setheaders((java.util.List<retrofit.client.Header>) headerList49);
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.converter.Converter converter59 = requestBuilder58.getconverter();
        java.util.List<retrofit.client.Header> headerList60 = requestBuilder58.headers;
        requestBuilder58.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList65 = null;
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("", "", headerList65, typedOutput66);
        java.lang.String str68 = request67.getUrl();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder58, request67 };
        requestBuilder45.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder45.apiUrl("");
        java.util.List<retrofit.client.Header> headerList73 = requestBuilder45.headers;
        retrofit.mime.TypedOutput typedOutput74 = null;
        retrofit.client.Request request75 = new retrofit.client.Request("hi!", "", headerList73, typedOutput74);
        java.lang.String str76 = request75.url;
        java.lang.String str77 = request75.method;
        java.lang.String str78 = request75.url;
        java.util.List<retrofit.client.Header> headerList79 = request75.getHeaders();
        requestBuilder35.headers = headerList79;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(headerList60);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(headerList79);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        java.lang.String str13 = request8.getUrl();
        java.lang.String str14 = request8.getMethod();
        java.lang.String str15 = request8.url;
        java.util.List<retrofit.client.Header> headerList16 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", headerList16, typedOutput19);
        java.util.List<retrofit.client.Header> headerList21 = request20.getHeaders();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList21);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder10 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray11 = requestBuilder1.getargs();
        java.lang.String str12 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.getBody();
        retrofit.mime.TypedOutput typedOutput19 = request17.getBody();
        java.lang.String str20 = request17.getMethod();
        java.lang.String str21 = request17.method;
        java.lang.String str22 = request17.method;
        java.util.List<retrofit.client.Header> headerList23 = request17.headers;
        retrofit.mime.TypedOutput typedOutput24 = request17.body;
        java.util.List<retrofit.client.Header> headerList25 = request17.getHeaders();
        requestBuilder1.setheaders(headerList25);
        java.lang.String str27 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNull(objArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNull(typedOutput24);
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder58 = requestBuilder1.apiUrl("");
        java.lang.String str59 = requestBuilder1.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput60 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        requestBuilder7.setheaders(headerList15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList15, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", headerList15, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = request20.body;
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "", headerList22, typedOutput23);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNotNull(headerList22);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.url;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput14);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.lang.String str13 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter18 = requestBuilder1.converter;
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder22 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray23 = requestBuilder22.args;
        requestBuilder22.setapiUrl("hi!");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNotNull(requestBuilder22);
        org.junit.Assert.assertNull(objArray23);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request23.body;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder10, typedOutput25 };
        requestBuilder3.setargs(objArray26);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        requestBuilder44.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        java.lang.Object[] objArray55 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder44, request53 };
        requestBuilder31.setargs(objArray55);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder31.apiUrl("");
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder31.headers;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder3.headers(headerList59);
        java.util.List<retrofit.client.Header> headerList63 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("hi!", "", headerList63, typedOutput64);
        java.util.List<retrofit.client.Header> headerList66 = request65.headers;
        retrofit.mime.TypedOutput typedOutput67 = request65.getBody();
        java.lang.String str68 = request65.getMethod();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(headerList66);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray29 = requestBuilder28.args;
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        java.lang.String str40 = requestBuilder31.getapiUrl();
        retrofit.RequestBuilder requestBuilder42 = requestBuilder31.apiUrl("");
        java.lang.Object[] objArray43 = requestBuilder31.getargs();
        retrofit.converter.Converter converter44 = requestBuilder31.getconverter();
        java.lang.Object[] objArray45 = requestBuilder31.getargs();
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        requestBuilder47.apiUrl = "";
        retrofit.converter.Converter converter75 = null;
        retrofit.RequestBuilder requestBuilder76 = new retrofit.RequestBuilder(converter75);
        java.util.List<retrofit.client.Header> headerList79 = null;
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("", "", headerList79, typedOutput80);
        retrofit.mime.TypedOutput typedOutput82 = request81.getBody();
        retrofit.mime.TypedOutput typedOutput83 = request81.getBody();
        java.util.List<retrofit.client.Header> headerList84 = request81.headers;
        requestBuilder76.setheaders(headerList84);
        requestBuilder47.setheaders(headerList84);
        requestBuilder47.apiUrl = "";
        java.lang.Object[] objArray89 = requestBuilder47.args;
        java.lang.Object[] objArray90 = requestBuilder47.args;
        requestBuilder31.args = objArray90;
        retrofit.RequestBuilder requestBuilder92 = requestBuilder28.args(objArray90);
        java.lang.Object[] objArray93 = requestBuilder92.args;
        java.lang.String str94 = requestBuilder92.getapiUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(objArray43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(objArray45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNotNull(headerList84);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertNotNull(requestBuilder92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        requestBuilder3.setheaders(headerList40);
        requestBuilder3.apiUrl = "";
        java.lang.Object[] objArray45 = requestBuilder3.args;
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "hi!", headerList46, typedOutput47);
        java.lang.String str49 = request48.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        requestBuilder13.apiUrl = "";
        retrofit.RequestBuilder requestBuilder42 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        retrofit.mime.TypedOutput typedOutput51 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder44.setheaders(headerList52);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder13.headers(headerList52);
        requestBuilder1.headers = headerList52;
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        java.lang.String str61 = request60.url;
        java.util.List<retrofit.client.Header> headerList62 = request60.getHeaders();
        requestBuilder1.headers = headerList62;
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder66 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder68 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter69 = requestBuilder68.getconverter();
        retrofit.RequestBuilder requestBuilder71 = requestBuilder68.apiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNotNull(headerList64);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNotNull(requestBuilder68);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNotNull(requestBuilder71);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.method;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.String str35 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray36 = requestBuilder1.getargs();
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.client.Header[] headerArray41 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList42 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList42, headerArray41);
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList42, typedOutput44);
        requestBuilder38.setheaders((java.util.List<retrofit.client.Header>) headerList42);
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        java.util.List<retrofit.client.Header> headerList53 = requestBuilder51.headers;
        requestBuilder51.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        java.lang.String str61 = request60.getUrl();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder51, request60 };
        requestBuilder38.setargs(objArray62);
        requestBuilder38.apiUrl = "";
        retrofit.RequestBuilder requestBuilder67 = requestBuilder38.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder69 = requestBuilder67.apiUrl("");
        java.lang.Object[] objArray70 = requestBuilder69.getargs();
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder69.getheaders();
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.headers(headerList71);
        java.lang.String str73 = requestBuilder72.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(headerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNull(headerList53);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(requestBuilder67);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(headerList71);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.method;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request23.body;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder10, typedOutput25 };
        requestBuilder3.setargs(objArray26);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        requestBuilder44.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        java.lang.Object[] objArray55 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder44, request53 };
        requestBuilder31.setargs(objArray55);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder31.apiUrl("");
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder31.headers;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder3.headers(headerList59);
        java.util.List<retrofit.client.Header> headerList63 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("hi!", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getMethod();
        retrofit.mime.TypedOutput typedOutput67 = request65.getBody();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNull(typedOutput67);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList33, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.body;
        java.util.List<retrofit.client.Header> headerList39 = request37.getHeaders();
        retrofit.mime.TypedOutput typedOutput40 = request37.body;
        java.util.List<retrofit.client.Header> headerList41 = request37.getHeaders();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        retrofit.converter.Converter converter34 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        retrofit.client.Header[] headerArray39 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList40 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList40, headerArray39);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList40, typedOutput42);
        requestBuilder36.setheaders((java.util.List<retrofit.client.Header>) headerList40);
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.converter.Converter converter50 = requestBuilder49.getconverter();
        java.util.List<retrofit.client.Header> headerList51 = requestBuilder49.headers;
        requestBuilder49.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList56 = null;
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("", "", headerList56, typedOutput57);
        java.lang.String str59 = request58.getUrl();
        java.lang.Object[] objArray60 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder49, request58 };
        requestBuilder36.setargs(objArray60);
        requestBuilder36.apiUrl = "";
        retrofit.RequestBuilder requestBuilder65 = requestBuilder36.apiUrl("hi!");
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        java.util.List<retrofit.client.Header> headerList70 = null;
        retrofit.mime.TypedOutput typedOutput71 = null;
        retrofit.client.Request request72 = new retrofit.client.Request("", "", headerList70, typedOutput71);
        retrofit.mime.TypedOutput typedOutput73 = request72.getBody();
        retrofit.mime.TypedOutput typedOutput74 = request72.getBody();
        java.util.List<retrofit.client.Header> headerList75 = request72.headers;
        requestBuilder67.setheaders(headerList75);
        retrofit.RequestBuilder requestBuilder77 = requestBuilder36.headers(headerList75);
        java.lang.Object[] objArray78 = requestBuilder36.getargs();
        java.lang.Object[] objArray79 = requestBuilder36.getargs();
        requestBuilder3.args = objArray79;
        java.util.List<retrofit.client.Header> headerList85 = null;
        retrofit.mime.TypedOutput typedOutput86 = null;
        retrofit.client.Request request87 = new retrofit.client.Request("", "", headerList85, typedOutput86);
        retrofit.mime.TypedOutput typedOutput88 = request87.getBody();
        retrofit.mime.TypedOutput typedOutput89 = request87.getBody();
        java.util.List<retrofit.client.Header> headerList90 = request87.headers;
        java.util.List<retrofit.client.Header> headerList91 = request87.getHeaders();
        retrofit.mime.TypedOutput typedOutput92 = null;
        retrofit.client.Request request93 = new retrofit.client.Request("hi!", "hi!", headerList91, typedOutput92);
        retrofit.RequestBuilder requestBuilder94 = requestBuilder3.headers(headerList91);
        retrofit.mime.TypedOutput typedOutput95 = null;
        retrofit.client.Request request96 = new retrofit.client.Request("", "", headerList91, typedOutput95);
        java.lang.Class<?> wildcardClass97 = request96.getClass();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNotNull(headerArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(headerList51);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertNull(typedOutput73);
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(requestBuilder77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNull(typedOutput88);
        org.junit.Assert.assertNull(typedOutput89);
        org.junit.Assert.assertNotNull(headerList90);
        org.junit.Assert.assertNotNull(headerList91);
        org.junit.Assert.assertNotNull(requestBuilder94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.client.Header[] headerArray41 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList42 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList42, headerArray41);
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList42, typedOutput44);
        requestBuilder38.setheaders((java.util.List<retrofit.client.Header>) headerList42);
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        java.util.List<retrofit.client.Header> headerList53 = requestBuilder51.headers;
        requestBuilder51.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        java.lang.String str61 = request60.getUrl();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder51, request60 };
        requestBuilder38.setargs(objArray62);
        java.lang.String str64 = requestBuilder38.getapiUrl();
        java.lang.Object[] objArray65 = requestBuilder38.args;
        requestBuilder1.args = objArray65;
        java.util.List<retrofit.client.Header> headerList67 = requestBuilder1.headers;
        java.lang.String str68 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder1.headers;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(headerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNull(headerList53);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNull(headerList67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(headerList69);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter40 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "hi!";
        retrofit.converter.Converter converter43 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNull(converter43);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.converter.Converter converter6 = requestBuilder5.getconverter();
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder5.headers;
        requestBuilder5.setapiUrl("hi!");
        retrofit.converter.Converter converter10 = requestBuilder5.converter;
        retrofit.RequestBuilder requestBuilder12 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray13 = requestBuilder5.args;
        java.util.List<retrofit.client.Header> headerList16 = null;
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = request18.getBody();
        java.util.List<retrofit.client.Header> headerList20 = request18.headers;
        java.util.List<retrofit.client.Header> headerList21 = request18.headers;
        requestBuilder5.setheaders(headerList21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput25);
        java.util.List<retrofit.client.Header> headerList27 = request26.headers;
        java.util.List<retrofit.client.Header> headerList28 = request26.headers;
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList27);
        org.junit.Assert.assertNotNull(headerList28);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.url;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.lang.String str13 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request6.headers;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.lang.String str17 = request16.method;
        java.lang.String str18 = request16.url;
        java.lang.String str19 = request16.method;
        retrofit.mime.TypedOutput typedOutput20 = request16.getBody();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(typedOutput20);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        java.lang.String str12 = request4.url;
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.method;
        java.lang.String str36 = request33.url;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList13 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder1.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(headerList13);
        org.junit.Assert.assertNull(headerList14);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.lang.String str10 = request4.method;
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        java.lang.String str10 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.lang.String str13 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput14 = request6.getBody();
        java.lang.String str15 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput16 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.util.List<retrofit.client.Header> headerList85 = requestBuilder84.getheaders();
        java.util.List<retrofit.client.Header> headerList86 = requestBuilder84.headers;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(headerList86);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.getUrl();
        java.lang.String str9 = request6.url;
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(typedOutput10);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList19, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.getHeaders();
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", headerList22, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", headerList22, typedOutput25);
        java.lang.Class<?> wildcardClass27 = headerList22.getClass();
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = requestBuilder37.converter;
        retrofit.converter.Converter converter39 = requestBuilder37.getconverter();
        retrofit.converter.Converter converter40 = requestBuilder37.getconverter();
        java.lang.Object[] objArray41 = requestBuilder37.getargs();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(objArray41);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.method;
        java.lang.String str12 = request6.method;
        java.lang.String str13 = request6.getUrl();
        java.lang.String str14 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request8.body;
        java.lang.String str11 = request8.getUrl();
        java.lang.String str12 = request8.url;
        java.lang.String str13 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request8.headers;
        java.util.List<retrofit.client.Header> headerList15 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = request19.body;
        java.lang.String str21 = request19.getUrl();
        java.lang.String str22 = request19.method;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request14.headers;
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        java.lang.String str41 = request33.method;
        retrofit.mime.TypedOutput typedOutput42 = request33.body;
        retrofit.mime.TypedOutput typedOutput43 = request33.body;
        retrofit.mime.TypedOutput typedOutput44 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        requestBuilder35.setapiUrl("");
        java.lang.String str40 = requestBuilder35.apiUrl;
        retrofit.converter.Converter converter41 = requestBuilder35.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder35.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(headerList42);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        java.lang.String str6 = request4.method;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList11, typedOutput13);
        java.lang.String str15 = request14.method;
        retrofit.mime.TypedOutput typedOutput16 = request14.body;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        java.util.List<retrofit.client.Header> headerList86 = requestBuilder84.headers;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = requestBuilder84.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(headerList86);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder46 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.RequestBuilder requestBuilder48 = requestBuilder46.headers(headerList47);
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder48.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertNull(headerList49);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.Class<?> wildcardClass14 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.headers;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "", headerList19, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.headers;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.headers(headerList22);
        java.util.List<retrofit.client.Header> headerList24 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder26 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter27 = requestBuilder1.converter;
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(requestBuilder26);
        org.junit.Assert.assertNull(converter27);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.Object[] objArray85 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.Object[] objArray28 = requestBuilder1.getargs();
        retrofit.converter.Converter converter29 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        retrofit.converter.Converter converter31 = requestBuilder1.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNull(converter31);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        java.lang.String str82 = request80.method;
        java.lang.String str83 = request80.method;
        java.lang.String str84 = request80.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "", headerList42, typedOutput45);
        java.util.List<retrofit.client.Header> headerList47 = request46.getHeaders();
        java.lang.String str48 = request46.method;
        retrofit.mime.TypedOutput typedOutput49 = request46.body;
        retrofit.mime.TypedOutput typedOutput50 = request46.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNull(typedOutput50);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        java.lang.String str10 = request8.url;
        retrofit.mime.TypedOutput typedOutput11 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput13 = request8.body;
        java.util.List<retrofit.client.Header> headerList14 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList14, typedOutput15);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList33, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.body;
        java.util.List<retrofit.client.Header> headerList39 = request37.getHeaders();
        java.lang.String str40 = request37.url;
        retrofit.mime.TypedOutput typedOutput41 = request37.getBody();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNull(typedOutput41);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.lang.String str14 = requestBuilder5.getapiUrl();
        retrofit.RequestBuilder requestBuilder16 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.url;
        java.util.List<retrofit.client.Header> headerList23 = request21.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request21.getHeaders();
        requestBuilder5.headers = headerList24;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList24, typedOutput26);
        java.lang.String str28 = request27.getMethod();
        retrofit.mime.TypedOutput typedOutput29 = request27.getBody();
        java.util.List<retrofit.client.Header> headerList30 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", headerList30, typedOutput31);
        java.util.List<retrofit.client.Header> headerList33 = request32.getHeaders();
        java.util.List<retrofit.client.Header> headerList34 = request32.getHeaders();
        retrofit.mime.TypedOutput typedOutput35 = request32.body;
        java.lang.String str36 = request32.getMethod();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(typedOutput29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.lang.String str3 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        java.lang.String str38 = request37.url;
        java.lang.String str39 = request37.getMethod();
        java.lang.String str40 = request37.method;
        java.lang.String str41 = request37.method;
        java.util.List<retrofit.client.Header> headerList42 = request37.headers;
        requestBuilder1.headers = headerList42;
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        java.util.List<retrofit.client.Header> headerList51 = request50.getHeaders();
        java.lang.String str52 = request50.url;
        java.lang.String str53 = request50.url;
        java.lang.String str54 = request50.method;
        retrofit.mime.TypedOutput typedOutput55 = request50.getBody();
        java.util.List<retrofit.client.Header> headerList56 = request50.getHeaders();
        retrofit.RequestBuilder requestBuilder57 = requestBuilder1.headers(headerList56);
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        java.lang.String str63 = request62.getUrl();
        retrofit.mime.TypedOutput typedOutput64 = request62.body;
        java.lang.String str65 = request62.getUrl();
        java.lang.String str66 = request62.url;
        java.lang.String str67 = request62.url;
        java.util.List<retrofit.client.Header> headerList68 = request62.headers;
        java.lang.String str69 = request62.getUrl();
        java.util.List<retrofit.client.Header> headerList70 = request62.headers;
        java.util.List<retrofit.client.Header> headerList71 = request62.headers;
        requestBuilder57.headers = headerList71;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = requestBuilder57.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder57);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(typedOutput64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(headerList71);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.lang.String str30 = requestBuilder3.apiUrl;
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        retrofit.mime.TypedOutput typedOutput37 = request35.body;
        java.util.List<retrofit.client.Header> headerList38 = request35.getHeaders();
        requestBuilder3.setheaders(headerList38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList38, typedOutput40);
        java.util.List<retrofit.client.Header> headerList42 = request41.headers;
        java.lang.String str43 = request41.method;
        retrofit.mime.TypedOutput typedOutput44 = request41.body;
        java.lang.String str45 = request41.url;
        java.lang.String str46 = request41.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder72.apiUrl("");
        retrofit.client.Header[] headerArray75 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList76 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList76, headerArray75);
        requestBuilder74.headers = headerList76;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter10 = requestBuilder1.getconverter();
        java.lang.Object[] objArray11 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder1.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(objArray11);
        org.junit.Assert.assertNull(headerList12);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        retrofit.client.Header[] headerArray37 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList38 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList38, headerArray37);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput40);
        requestBuilder34.setheaders((java.util.List<retrofit.client.Header>) headerList38);
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.converter.Converter converter48 = requestBuilder47.getconverter();
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder47.headers;
        requestBuilder47.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "", headerList54, typedOutput55);
        java.lang.String str57 = request56.getUrl();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder47, request56 };
        requestBuilder34.setargs(objArray58);
        java.lang.Object[] objArray60 = requestBuilder34.getargs();
        retrofit.RequestBuilder requestBuilder61 = requestBuilder31.args(objArray60);
        requestBuilder61.setapiUrl("");
        retrofit.converter.Converter converter64 = requestBuilder61.getconverter();
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder61.getheaders();
        java.lang.String str66 = requestBuilder61.apiUrl;
        java.lang.Object[] objArray67 = requestBuilder61.getargs();
        requestBuilder1.setargs(objArray67);
        java.lang.String str69 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(headerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(requestBuilder61);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(headerList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(headerList70);
        org.junit.Assert.assertNull(headerList71);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput37 = request33.getBody();
        java.lang.String str38 = request33.method;
        java.util.List<retrofit.client.Header> headerList39 = request33.headers;
        java.util.List<retrofit.client.Header> headerList40 = request33.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(headerList40);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.String str27 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder29 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray30 = requestBuilder1.args;
        java.lang.String str31 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(requestBuilder29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.lang.String str3 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        java.lang.String str38 = request37.url;
        java.lang.String str39 = request37.getMethod();
        java.lang.String str40 = request37.method;
        java.lang.String str41 = request37.method;
        java.util.List<retrofit.client.Header> headerList42 = request37.headers;
        requestBuilder1.headers = headerList42;
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        java.util.List<retrofit.client.Header> headerList51 = request50.getHeaders();
        java.lang.String str52 = request50.url;
        java.lang.String str53 = request50.url;
        java.lang.String str54 = request50.method;
        retrofit.mime.TypedOutput typedOutput55 = request50.getBody();
        java.util.List<retrofit.client.Header> headerList56 = request50.getHeaders();
        retrofit.RequestBuilder requestBuilder57 = requestBuilder1.headers(headerList56);
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder1.getheaders();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder57);
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertNotNull(headerList59);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.getHeaders();
        java.lang.String str35 = request33.getUrl();
        java.lang.String str36 = request33.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        requestBuilder88.apiUrl = "";
        retrofit.RequestBuilder requestBuilder95 = requestBuilder88.apiUrl("");
        retrofit.RequestBuilder requestBuilder97 = requestBuilder88.apiUrl("hi!");
        java.lang.String str98 = requestBuilder88.apiUrl;
        java.lang.Object[] objArray99 = requestBuilder88.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder95);
        org.junit.Assert.assertNotNull(requestBuilder97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!" + "'", str98, "hi!");
        org.junit.Assert.assertNull(objArray99);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray36 = new java.lang.Object[] {};
        requestBuilder1.setargs(objArray36);
        retrofit.converter.Converter converter38 = requestBuilder1.getconverter();
        java.lang.Object[] objArray39 = requestBuilder1.args;
        java.lang.String str40 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput6 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder49 = requestBuilder47.apiUrl("hi!");
        requestBuilder47.setapiUrl("");
        requestBuilder47.apiUrl = "hi!";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder49);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray15 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList20 = null;
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList20, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = request22.getBody();
        retrofit.mime.TypedOutput typedOutput24 = request22.getBody();
        java.lang.String str25 = request22.getMethod();
        java.lang.String str26 = request22.method;
        java.lang.String str27 = request22.method;
        java.util.List<retrofit.client.Header> headerList28 = request22.headers;
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", headerList28, typedOutput29);
        requestBuilder3.setheaders(headerList28);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "", headerList32, typedOutput33);
        java.lang.String str35 = request34.getUrl();
        retrofit.mime.TypedOutput typedOutput36 = request34.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNull(typedOutput24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(typedOutput36);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder9 = requestBuilder1.apiUrl("");
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder13.headers;
        java.lang.Object[] objArray15 = requestBuilder13.args;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = requestBuilder13.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNotNull(requestBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNull(objArray15);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = requestBuilder1.getconverter();
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        retrofit.mime.TypedOutput typedOutput53 = request52.getBody();
        retrofit.mime.TypedOutput typedOutput54 = request52.getBody();
        retrofit.mime.TypedOutput typedOutput55 = request52.body;
        java.util.List<retrofit.client.Header> headerList56 = request52.getHeaders();
        java.lang.String str57 = request52.getMethod();
        java.util.List<retrofit.client.Header> headerList58 = request52.getHeaders();
        requestBuilder1.setheaders(headerList58);
        java.lang.Class<?> wildcardClass60 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.lang.String str14 = request4.url;
        java.util.List<retrofit.client.Header> headerList15 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNotNull(requestBuilder13);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.body;
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        java.lang.String str18 = request14.url;
        java.lang.String str19 = request14.getUrl();
        java.lang.String str20 = request14.url;
        java.lang.String str21 = request14.getMethod();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request8.body;
        java.lang.String str11 = request8.getMethod();
        java.lang.String str12 = request8.getUrl();
        java.lang.String str13 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "", headerList14, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList14, typedOutput17);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder45.headers;
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        java.lang.Object[] objArray48 = requestBuilder45.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request49 = requestBuilder45.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNotNull(objArray48);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder1.headers;
        java.lang.String str45 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "hi!";
        retrofit.converter.Converter converter48 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "hi!";
        java.lang.Object[] objArray51 = requestBuilder1.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNotNull(objArray51);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        requestBuilder5.setheaders(headerList13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput17);
        java.lang.String str19 = request18.url;
        java.lang.String str20 = request18.method;
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        java.lang.String str10 = request8.url;
        java.lang.String str11 = request8.url;
        java.lang.String str12 = request8.method;
        retrofit.mime.TypedOutput typedOutput13 = request8.getBody();
        java.lang.String str14 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList15 = request8.headers;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.url;
        java.util.List<retrofit.client.Header> headerList19 = request17.headers;
        java.lang.String str20 = request17.getMethod();
        java.lang.String str21 = request17.url;
        java.lang.String str22 = request17.getMethod();
        java.util.List<retrofit.client.Header> headerList23 = request17.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(headerList23);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList39 = request37.headers;
        requestBuilder1.setheaders(headerList39);
        java.lang.Object[] objArray41 = requestBuilder1.getargs();
        java.lang.String str42 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        retrofit.RequestBuilder requestBuilder73 = requestBuilder46.apiUrl("");
        java.util.List<retrofit.client.Header> headerList74 = requestBuilder46.headers;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        requestBuilder1.headers = headerList74;
        requestBuilder1.apiUrl = "";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder73);
        org.junit.Assert.assertNotNull(headerList74);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.lang.String str14 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        java.lang.String str4 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request6 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(headerList5);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.headers;
        java.util.List<retrofit.client.Header> headerList82 = request80.getHeaders();
        java.lang.String str83 = request80.method;
        retrofit.mime.TypedOutput typedOutput84 = request80.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNotNull(headerList82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(typedOutput84);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        retrofit.mime.TypedOutput typedOutput66 = request64.body;
        java.lang.Object[] objArray67 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder51, typedOutput66 };
        requestBuilder44.setargs(objArray67);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder33.args(objArray67);
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder69.headers;
        retrofit.RequestBuilder requestBuilder71 = requestBuilder1.headers(headerList70);
        retrofit.converter.Converter converter72 = requestBuilder71.converter;
        java.lang.Object[] objArray73 = requestBuilder71.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNotNull(objArray73);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray9 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList12 = null;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = request14.getBody();
        java.util.List<retrofit.client.Header> headerList16 = request14.headers;
        java.util.List<retrofit.client.Header> headerList17 = request14.headers;
        requestBuilder1.setheaders(headerList17);
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "hi!", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.util.List<retrofit.client.Header> headerList25 = request23.getHeaders();
        requestBuilder1.headers = headerList25;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(objArray9);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(headerList25);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        java.lang.Object[] objArray31 = requestBuilder5.getargs();
        java.lang.String str32 = requestBuilder5.apiUrl;
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        retrofit.converter.Converter converter51 = null;
        retrofit.RequestBuilder requestBuilder52 = new retrofit.RequestBuilder(converter51);
        retrofit.client.Header[] headerArray55 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList56 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList56, headerArray55);
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList56, typedOutput58);
        requestBuilder52.setheaders((java.util.List<retrofit.client.Header>) headerList56);
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        retrofit.mime.TypedOutput typedOutput67 = request65.body;
        java.lang.Object[] objArray68 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder52, typedOutput67 };
        requestBuilder45.setargs(objArray68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder34.args(objArray68);
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder70.headers;
        requestBuilder5.headers = headerList71;
        retrofit.mime.TypedOutput typedOutput73 = null;
        retrofit.client.Request request74 = new retrofit.client.Request("", "hi!", headerList71, typedOutput73);
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList71, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertNotNull(headerArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(headerList71);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder32 = requestBuilder30.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder32.headers;
        java.util.List<retrofit.client.Header> headerList34 = requestBuilder32.getheaders();
        java.lang.Object[] objArray35 = requestBuilder32.args;
        retrofit.converter.Converter converter36 = requestBuilder32.converter;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNull(converter36);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.util.List<retrofit.client.Header> headerList5 = request4.getHeaders();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.lang.String str14 = request4.url;
        java.lang.String str15 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.lang.String str12 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter13 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter14 = requestBuilder1.converter;
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.client.Header[] headerArray19 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList20 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList20, headerArray19);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList20, typedOutput22);
        requestBuilder16.setheaders((java.util.List<retrofit.client.Header>) headerList20);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.converter.Converter converter30 = requestBuilder29.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder29.headers;
        requestBuilder29.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.lang.String str39 = request38.getUrl();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder29, request38 };
        requestBuilder16.setargs(objArray40);
        requestBuilder16.apiUrl = "";
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        java.util.List<retrofit.client.Header> headerList48 = null;
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("", "", headerList48, typedOutput49);
        retrofit.mime.TypedOutput typedOutput51 = request50.getBody();
        retrofit.mime.TypedOutput typedOutput52 = request50.getBody();
        java.util.List<retrofit.client.Header> headerList53 = request50.headers;
        requestBuilder45.setheaders(headerList53);
        requestBuilder16.setheaders(headerList53);
        retrofit.converter.Converter converter56 = null;
        retrofit.RequestBuilder requestBuilder57 = new retrofit.RequestBuilder(converter56);
        retrofit.client.Header[] headerArray60 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList61 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList61, headerArray60);
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList61, typedOutput63);
        requestBuilder57.setheaders((java.util.List<retrofit.client.Header>) headerList61);
        retrofit.converter.Converter converter69 = null;
        retrofit.RequestBuilder requestBuilder70 = new retrofit.RequestBuilder(converter69);
        retrofit.converter.Converter converter71 = requestBuilder70.getconverter();
        java.util.List<retrofit.client.Header> headerList72 = requestBuilder70.headers;
        requestBuilder70.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList77 = null;
        retrofit.mime.TypedOutput typedOutput78 = null;
        retrofit.client.Request request79 = new retrofit.client.Request("", "", headerList77, typedOutput78);
        java.lang.String str80 = request79.getUrl();
        java.lang.Object[] objArray81 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder70, request79 };
        requestBuilder57.setargs(objArray81);
        java.lang.Object[] objArray83 = requestBuilder57.getargs();
        java.lang.String str84 = requestBuilder57.apiUrl;
        requestBuilder57.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder88 = requestBuilder57.apiUrl("hi!");
        requestBuilder88.setapiUrl("hi!");
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        retrofit.RequestBuilder requestBuilder92 = requestBuilder16.args(objArray91);
        retrofit.RequestBuilder requestBuilder93 = requestBuilder1.args(objArray91);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request94 = requestBuilder93.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(headerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNotNull(headerList53);
        org.junit.Assert.assertNotNull(headerArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(converter71);
        org.junit.Assert.assertNull(headerList72);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder92);
        org.junit.Assert.assertNotNull(requestBuilder93);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "hi!", headerList2, typedOutput3);
        java.lang.String str5 = request4.method;
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.lang.String str11 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        requestBuilder13.setapiUrl("hi!");
        retrofit.converter.Converter converter16 = requestBuilder13.getconverter();
        java.lang.Object[] objArray17 = requestBuilder13.args;
        requestBuilder13.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(objArray17);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        retrofit.client.Header[] headerArray37 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList38 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList38, headerArray37);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput40);
        requestBuilder34.setheaders((java.util.List<retrofit.client.Header>) headerList38);
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.converter.Converter converter48 = requestBuilder47.getconverter();
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder47.headers;
        requestBuilder47.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "", headerList54, typedOutput55);
        java.lang.String str57 = request56.getUrl();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder47, request56 };
        requestBuilder34.setargs(objArray58);
        requestBuilder34.apiUrl = "";
        retrofit.RequestBuilder requestBuilder63 = requestBuilder34.apiUrl("hi!");
        retrofit.converter.Converter converter64 = null;
        retrofit.RequestBuilder requestBuilder65 = new retrofit.RequestBuilder(converter64);
        java.util.List<retrofit.client.Header> headerList68 = null;
        retrofit.mime.TypedOutput typedOutput69 = null;
        retrofit.client.Request request70 = new retrofit.client.Request("", "", headerList68, typedOutput69);
        retrofit.mime.TypedOutput typedOutput71 = request70.getBody();
        retrofit.mime.TypedOutput typedOutput72 = request70.getBody();
        java.util.List<retrofit.client.Header> headerList73 = request70.headers;
        requestBuilder65.setheaders(headerList73);
        retrofit.RequestBuilder requestBuilder75 = requestBuilder34.headers(headerList73);
        java.lang.Object[] objArray76 = requestBuilder34.getargs();
        java.lang.Object[] objArray77 = requestBuilder34.getargs();
        requestBuilder1.args = objArray77;
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        retrofit.mime.TypedOutput typedOutput86 = request85.getBody();
        retrofit.mime.TypedOutput typedOutput87 = request85.getBody();
        java.util.List<retrofit.client.Header> headerList88 = request85.headers;
        java.util.List<retrofit.client.Header> headerList89 = request85.getHeaders();
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("hi!", "hi!", headerList89, typedOutput90);
        retrofit.RequestBuilder requestBuilder92 = requestBuilder1.headers(headerList89);
        retrofit.converter.Converter converter93 = requestBuilder92.converter;
        requestBuilder92.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = requestBuilder92.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(headerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertNull(typedOutput71);
        org.junit.Assert.assertNull(typedOutput72);
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertNotNull(requestBuilder92);
        org.junit.Assert.assertNull(converter93);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        requestBuilder3.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder82 = requestBuilder3.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList85 = null;
        retrofit.mime.TypedOutput typedOutput86 = null;
        retrofit.client.Request request87 = new retrofit.client.Request("", "", headerList85, typedOutput86);
        java.lang.String str88 = request87.getUrl();
        retrofit.mime.TypedOutput typedOutput89 = request87.body;
        java.lang.String str90 = request87.getUrl();
        java.util.List<retrofit.client.Header> headerList91 = request87.headers;
        retrofit.RequestBuilder requestBuilder92 = requestBuilder3.headers(headerList91);
        retrofit.mime.TypedOutput typedOutput93 = null;
        retrofit.client.Request request94 = new retrofit.client.Request("", "hi!", headerList91, typedOutput93);
        retrofit.mime.TypedOutput typedOutput95 = request94.getBody();
        java.util.List<retrofit.client.Header> headerList96 = request94.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(requestBuilder82);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(typedOutput89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertNotNull(headerList91);
        org.junit.Assert.assertNotNull(requestBuilder92);
        org.junit.Assert.assertNull(typedOutput95);
        org.junit.Assert.assertNotNull(headerList96);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        retrofit.converter.Converter converter34 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request39.headers;
        requestBuilder3.setheaders(headerList41);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList41, typedOutput43);
        java.lang.Class<?> wildcardClass45 = headerList41.getClass();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "hi!", headerList42, typedOutput45);
        java.util.List<retrofit.client.Header> headerList47 = request46.getHeaders();
        java.util.List<retrofit.client.Header> headerList48 = request46.headers;
        java.lang.String str49 = request46.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.method;
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request6.body;
        java.lang.String str13 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.lang.String str11 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.lang.String str9 = request6.method;
        java.util.List<retrofit.client.Header> headerList10 = request6.headers;
        java.lang.Class<?> wildcardClass11 = headerList10.getClass();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.lang.String str11 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter18 = requestBuilder1.converter;
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray21 = requestBuilder1.getargs();
        retrofit.converter.Converter converter22 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(objArray21);
        org.junit.Assert.assertNull(converter22);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList87 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder89 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList90 = requestBuilder1.headers;
        java.lang.String str91 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(headerList87);
        org.junit.Assert.assertNotNull(requestBuilder89);
        org.junit.Assert.assertNotNull(headerList90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        java.lang.Object[] objArray10 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder1.getheaders();
        java.lang.String str12 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(objArray10);
        org.junit.Assert.assertNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.url;
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request17.getHeaders();
        requestBuilder1.headers = headerList20;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray24 = requestBuilder23.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNull(objArray24);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        retrofit.mime.TypedOutput typedOutput16 = request12.body;
        java.util.List<retrofit.client.Header> headerList17 = request12.headers;
        retrofit.mime.TypedOutput typedOutput18 = request12.getBody();
        java.lang.String str19 = request12.method;
        java.util.List<retrofit.client.Header> headerList20 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList21 = request12.getHeaders();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        java.lang.String str14 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.method;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.getMethod();
        java.lang.String str13 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList14 = null;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = request16.getBody();
        java.lang.String str18 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        requestBuilder1.setheaders(headerList19);
        requestBuilder1.apiUrl = "";
        java.lang.Object[] objArray23 = requestBuilder1.args;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNull(objArray23);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.lang.String str11 = request8.method;
        java.util.List<retrofit.client.Header> headerList12 = request8.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput16 = request14.body;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.lang.String str30 = requestBuilder3.apiUrl;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.client.Header[] headerArray53 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList54 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList54, headerArray53);
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList54, typedOutput56);
        requestBuilder50.setheaders((java.util.List<retrofit.client.Header>) headerList54);
        java.util.List<retrofit.client.Header> headerList61 = null;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList61, typedOutput62);
        java.lang.String str64 = request63.getUrl();
        retrofit.mime.TypedOutput typedOutput65 = request63.body;
        java.lang.Object[] objArray66 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder50, typedOutput65 };
        requestBuilder43.setargs(objArray66);
        retrofit.RequestBuilder requestBuilder68 = requestBuilder32.args(objArray66);
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder68.headers;
        requestBuilder3.headers = headerList69;
        java.lang.Object[] objArray71 = requestBuilder3.args;
        requestBuilder3.setapiUrl("hi!");
        retrofit.converter.Converter converter74 = requestBuilder3.getconverter();
        requestBuilder3.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList79 = null;
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("", "", headerList79, typedOutput80);
        java.lang.String str82 = request81.url;
        java.util.List<retrofit.client.Header> headerList83 = request81.getHeaders();
        java.util.List<retrofit.client.Header> headerList84 = request81.getHeaders();
        java.util.List<retrofit.client.Header> headerList85 = request81.getHeaders();
        java.lang.String str86 = request81.getMethod();
        retrofit.mime.TypedOutput typedOutput87 = request81.getBody();
        java.util.List<retrofit.client.Header> headerList88 = request81.getHeaders();
        java.util.List<retrofit.client.Header> headerList89 = request81.getHeaders();
        requestBuilder3.headers = headerList89;
        retrofit.mime.TypedOutput typedOutput91 = null;
        retrofit.client.Request request92 = new retrofit.client.Request("", "", headerList89, typedOutput91);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertNotNull(headerArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder68);
        org.junit.Assert.assertNotNull(headerList69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertNotNull(headerList84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNotNull(headerList89);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.getMethod();
        java.lang.String str13 = request4.method;
        java.lang.String str14 = request4.url;
        java.util.List<retrofit.client.Header> headerList15 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.lang.String str14 = requestBuilder5.getapiUrl();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder5.getheaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList15, typedOutput18);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        requestBuilder8.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder8.getheaders();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        retrofit.RequestBuilder requestBuilder40 = requestBuilder13.apiUrl("");
        java.util.List<retrofit.client.Header> headerList41 = requestBuilder13.headers;
        java.lang.Object[] objArray42 = requestBuilder13.args;
        retrofit.RequestBuilder requestBuilder43 = requestBuilder8.args(objArray42);
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder8.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNull(headerList44);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.String str85 = requestBuilder84.getapiUrl();
        java.util.List<retrofit.client.Header> headerList86 = requestBuilder84.getheaders();
        java.lang.String str87 = requestBuilder84.getapiUrl();
        retrofit.converter.Converter converter88 = requestBuilder84.getconverter();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(headerList86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(converter88);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder12.headers;
        requestBuilder1.setheaders(headerList75);
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder1.headers;
        java.lang.String str78 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList79 = requestBuilder1.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(headerList79);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("");
        java.lang.Object[] objArray34 = null;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder31.args(objArray34);
        java.lang.Object[] objArray36 = requestBuilder35.args;
        requestBuilder35.setapiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNull(objArray36);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.Object[] objArray74 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder76 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray77 = requestBuilder1.args;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(objArray77);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        requestBuilder88.apiUrl = "";
        retrofit.RequestBuilder requestBuilder95 = requestBuilder88.apiUrl("");
        retrofit.converter.Converter converter96 = requestBuilder95.converter;
        java.lang.Object[] objArray97 = requestBuilder95.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder95);
        org.junit.Assert.assertNull(converter96);
        org.junit.Assert.assertNull(objArray97);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.method;
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.lang.Class<?> wildcardClass11 = request4.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        java.lang.String str10 = request6.method;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter10 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        retrofit.converter.Converter converter24 = null;
        retrofit.RequestBuilder requestBuilder25 = new retrofit.RequestBuilder(converter24);
        retrofit.converter.Converter converter26 = requestBuilder25.getconverter();
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder25.headers;
        requestBuilder25.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList32 = null;
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", headerList32, typedOutput33);
        java.lang.String str35 = request34.getUrl();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder25, request34 };
        requestBuilder12.setargs(objArray36);
        requestBuilder12.apiUrl = "";
        retrofit.RequestBuilder requestBuilder41 = requestBuilder12.apiUrl("hi!");
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        java.util.List<retrofit.client.Header> headerList46 = null;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = request48.getBody();
        retrofit.mime.TypedOutput typedOutput50 = request48.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request48.headers;
        requestBuilder43.setheaders(headerList51);
        retrofit.RequestBuilder requestBuilder53 = requestBuilder12.headers(headerList51);
        java.lang.Object[] objArray54 = requestBuilder12.getargs();
        java.lang.Object[] objArray55 = requestBuilder12.getargs();
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList62 = request60.headers;
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder12.headers = headerList63;
        requestBuilder12.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList67 = requestBuilder12.getheaders();
        java.lang.Object[] objArray68 = requestBuilder12.args;
        retrofit.RequestBuilder requestBuilder70 = requestBuilder12.apiUrl("hi!");
        java.lang.Object[] objArray71 = requestBuilder70.getargs();
        requestBuilder1.setargs(objArray71);
        java.lang.Object[] objArray73 = requestBuilder1.args;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNull(headerList27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(requestBuilder41);
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(headerList67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(objArray73);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.util.List<retrofit.client.Header> headerList91 = requestBuilder90.getheaders();
        requestBuilder90.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList94 = requestBuilder90.headers;
        retrofit.converter.Converter converter95 = requestBuilder90.converter;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(headerList91);
        org.junit.Assert.assertNotNull(headerList94);
        org.junit.Assert.assertNull(converter95);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request23.body;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder10, typedOutput25 };
        requestBuilder3.setargs(objArray26);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        requestBuilder44.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        java.lang.Object[] objArray55 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder44, request53 };
        requestBuilder31.setargs(objArray55);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder31.apiUrl("");
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder31.headers;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder3.headers(headerList59);
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "hi!", headerList59, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.String str66 = request64.url;
        java.lang.Class<?> wildcardClass67 = request64.getClass();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray15 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList20 = null;
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList20, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = request22.getBody();
        retrofit.mime.TypedOutput typedOutput24 = request22.getBody();
        java.lang.String str25 = request22.getMethod();
        java.lang.String str26 = request22.method;
        java.lang.String str27 = request22.method;
        java.util.List<retrofit.client.Header> headerList28 = request22.headers;
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", headerList28, typedOutput29);
        requestBuilder3.setheaders(headerList28);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", headerList32, typedOutput33);
        java.lang.String str35 = request34.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNull(typedOutput24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getMethod();
        java.lang.String str12 = request4.getUrl();
        java.lang.String str13 = request4.getUrl();
        java.lang.String str14 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "", headerList42, typedOutput45);
        java.util.List<retrofit.client.Header> headerList47 = request46.getHeaders();
        retrofit.mime.TypedOutput typedOutput48 = request46.body;
        retrofit.mime.TypedOutput typedOutput49 = request46.getBody();
        java.util.List<retrofit.client.Header> headerList50 = request46.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNull(typedOutput48);
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNotNull(headerList50);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "hi!", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder42.apiUrl("");
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder42.headers;
        requestBuilder1.setheaders(headerList70);
        java.util.List<retrofit.client.Header> headerList72 = requestBuilder1.headers;
        java.lang.Object[] objArray73 = requestBuilder1.getargs();
        retrofit.converter.Converter converter74 = requestBuilder1.converter;
        requestBuilder1.setapiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(headerList72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNull(converter74);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.lang.String str13 = request6.method;
        java.lang.String str14 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.util.List<retrofit.client.Header> headerList35 = request33.headers;
        java.util.List<retrofit.client.Header> headerList36 = request33.headers;
        retrofit.mime.TypedOutput typedOutput37 = request33.body;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass38 = typedOutput37.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertNull(typedOutput37);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.args;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray8 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("hi!");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(objArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(objArray8);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray36 = new java.lang.Object[] {};
        requestBuilder1.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        java.lang.String str43 = request42.getUrl();
        retrofit.mime.TypedOutput typedOutput44 = request42.body;
        java.util.List<retrofit.client.Header> headerList45 = request42.getHeaders();
        java.util.List<retrofit.client.Header> headerList46 = request42.getHeaders();
        requestBuilder1.setheaders(headerList46);
        java.util.List<retrofit.client.Header> headerList48 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder50 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray51 = null;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder50.args(objArray51);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertNotNull(requestBuilder50);
        org.junit.Assert.assertNotNull(requestBuilder52);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.lang.String str11 = request4.url;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder3.getheaders();
        java.lang.String str13 = requestBuilder3.getapiUrl();
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        requestBuilder15.setheaders((java.util.List<retrofit.client.Header>) headerList19);
        retrofit.converter.Converter converter27 = null;
        retrofit.RequestBuilder requestBuilder28 = new retrofit.RequestBuilder(converter27);
        retrofit.converter.Converter converter29 = requestBuilder28.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder28.headers;
        requestBuilder28.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        java.lang.String str38 = request37.getUrl();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder28, request37 };
        requestBuilder15.setargs(objArray39);
        requestBuilder15.apiUrl = "";
        retrofit.RequestBuilder requestBuilder44 = requestBuilder15.apiUrl("hi!");
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.getBody();
        retrofit.mime.TypedOutput typedOutput53 = request51.getBody();
        java.util.List<retrofit.client.Header> headerList54 = request51.headers;
        requestBuilder46.setheaders(headerList54);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder15.headers(headerList54);
        requestBuilder3.headers = headerList54;
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        java.lang.String str63 = request62.url;
        java.util.List<retrofit.client.Header> headerList64 = request62.getHeaders();
        requestBuilder3.headers = headerList64;
        java.util.List<retrofit.client.Header> headerList66 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(headerList30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(headerList64);
        org.junit.Assert.assertNotNull(headerList66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.url;
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList11, typedOutput13);
        java.lang.String str15 = request14.getUrl();
        java.lang.String str16 = request14.url;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.getMethod();
        java.lang.String str13 = request4.getMethod();
        java.lang.String str14 = request4.url;
        java.lang.String str15 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder9 = requestBuilder5.apiUrl("");
        java.lang.String str10 = requestBuilder5.apiUrl;
        java.lang.Object[] objArray11 = requestBuilder5.getargs();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
        org.junit.Assert.assertNotNull(requestBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(objArray11);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.url;
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request17.getHeaders();
        requestBuilder1.headers = headerList20;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.apiUrl("");
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        retrofit.converter.Converter converter28 = requestBuilder27.getconverter();
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.client.Header[] headerArray33 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList34 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList34, headerArray33);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList34, typedOutput36);
        requestBuilder30.setheaders((java.util.List<retrofit.client.Header>) headerList34);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        requestBuilder43.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = null;
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        java.lang.String str53 = request52.getUrl();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder43, request52 };
        requestBuilder30.setargs(objArray54);
        java.lang.Object[] objArray56 = requestBuilder30.getargs();
        retrofit.RequestBuilder requestBuilder57 = requestBuilder27.args(objArray56);
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder27.getheaders();
        java.util.List<retrofit.client.Header> headerList59 = null;
        retrofit.RequestBuilder requestBuilder60 = requestBuilder27.headers(headerList59);
        java.lang.Object[] objArray61 = requestBuilder27.args;
        requestBuilder1.args = objArray61;
        java.lang.String str63 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNotNull(headerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(requestBuilder57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.lang.String str13 = request6.getMethod();
        java.lang.String str14 = request6.method;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.Object[] objArray2 = requestBuilder1.args;
        requestBuilder1.apiUrl = "hi!";
        java.lang.Object[] objArray5 = requestBuilder1.args;
        org.junit.Assert.assertNull(objArray2);
        org.junit.Assert.assertNull(objArray5);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        retrofit.converter.Converter converter34 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request39.headers;
        requestBuilder3.setheaders(headerList41);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList41, typedOutput43);
        java.util.List<retrofit.client.Header> headerList45 = request44.getHeaders();
        java.lang.String str46 = request44.method;
        retrofit.mime.TypedOutput typedOutput47 = request44.body;
        retrofit.mime.TypedOutput typedOutput48 = request44.getBody();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(typedOutput47);
        org.junit.Assert.assertNull(typedOutput48);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getMethod();
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.lang.Class<?> wildcardClass14 = request4.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request23.body;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder10, typedOutput25 };
        requestBuilder3.setargs(objArray26);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        java.util.List<retrofit.client.Header> headerList32 = null;
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", headerList32, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = request34.getBody();
        retrofit.mime.TypedOutput typedOutput36 = request34.getBody();
        java.util.List<retrofit.client.Header> headerList37 = request34.headers;
        requestBuilder29.setheaders(headerList37);
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder40.headers;
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        java.lang.String str61 = request60.getUrl();
        retrofit.mime.TypedOutput typedOutput62 = request60.body;
        java.lang.Object[] objArray63 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder47, typedOutput62 };
        requestBuilder40.setargs(objArray63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder29.args(objArray63);
        requestBuilder3.setargs(objArray63);
        java.lang.String str67 = requestBuilder3.apiUrl;
        java.util.List<retrofit.client.Header> headerList68 = requestBuilder3.getheaders();
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        java.lang.String str74 = request73.url;
        java.lang.String str75 = request73.url;
        retrofit.mime.TypedOutput typedOutput76 = request73.body;
        java.util.List<retrofit.client.Header> headerList77 = request73.getHeaders();
        java.util.List<retrofit.client.Header> headerList78 = request73.headers;
        requestBuilder3.setheaders(headerList78);
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("hi!", "", headerList78, typedOutput80);
        java.lang.String str82 = request81.method;
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(headerList42);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(headerList68);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(typedOutput76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.lang.String str14 = requestBuilder5.getapiUrl();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder5.getheaders();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder5.headers;
        java.util.List<retrofit.client.Header> headerList17 = requestBuilder5.getheaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "", headerList17, typedOutput20);
        java.lang.String str22 = request21.url;
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.lang.String str14 = requestBuilder5.getapiUrl();
        retrofit.RequestBuilder requestBuilder16 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.url;
        java.util.List<retrofit.client.Header> headerList23 = request21.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request21.getHeaders();
        requestBuilder5.headers = headerList24;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList24, typedOutput26);
        java.lang.String str28 = request27.getMethod();
        retrofit.mime.TypedOutput typedOutput29 = request27.getBody();
        java.util.List<retrofit.client.Header> headerList30 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", headerList30, typedOutput31);
        java.util.List<retrofit.client.Header> headerList33 = request32.getHeaders();
        java.util.List<retrofit.client.Header> headerList34 = request32.getHeaders();
        java.lang.String str35 = request32.getMethod();
        java.lang.String str36 = request32.getMethod();
        java.util.List<retrofit.client.Header> headerList37 = request32.headers;
        retrofit.mime.TypedOutput typedOutput38 = request32.getBody();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(typedOutput29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertNull(typedOutput38);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.client.Header[] headerArray40 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList41 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList41, headerArray40);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList41, typedOutput43);
        requestBuilder37.setheaders((java.util.List<retrofit.client.Header>) headerList41);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.converter.Converter converter51 = requestBuilder50.getconverter();
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder50.headers;
        requestBuilder50.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList57 = null;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        java.lang.String str60 = request59.getUrl();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder50, request59 };
        requestBuilder37.setargs(objArray61);
        requestBuilder37.apiUrl = "";
        retrofit.RequestBuilder requestBuilder66 = requestBuilder37.apiUrl("hi!");
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        retrofit.mime.TypedOutput typedOutput74 = request73.getBody();
        retrofit.mime.TypedOutput typedOutput75 = request73.getBody();
        java.util.List<retrofit.client.Header> headerList76 = request73.headers;
        requestBuilder68.setheaders(headerList76);
        retrofit.RequestBuilder requestBuilder78 = requestBuilder37.headers(headerList76);
        java.lang.Object[] objArray79 = requestBuilder37.getargs();
        retrofit.RequestBuilder requestBuilder80 = requestBuilder34.args(objArray79);
        requestBuilder34.apiUrl = "";
        java.lang.String str83 = requestBuilder34.getapiUrl();
        retrofit.RequestBuilder requestBuilder85 = requestBuilder34.apiUrl("hi!");
        retrofit.converter.Converter converter86 = requestBuilder85.converter;
        java.lang.String str87 = requestBuilder85.getapiUrl();
        java.util.List<retrofit.client.Header> headerList88 = requestBuilder85.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(headerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNull(headerList52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNull(typedOutput75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNull(converter86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertNull(headerList88);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray29 = requestBuilder28.args;
        java.lang.String str30 = requestBuilder28.getapiUrl();
        java.lang.Class<?> wildcardClass31 = requestBuilder28.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray7 = requestBuilder1.getargs();
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray9 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(objArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(objArray9);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "hi!", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request39.headers;
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("", "", headerList41, typedOutput42);
        java.lang.String str44 = request43.getMethod();
        java.lang.String str45 = request43.getMethod();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        java.lang.String str17 = request14.url;
        java.lang.String str18 = request14.url;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        requestBuilder3.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder82 = requestBuilder3.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList85 = null;
        retrofit.mime.TypedOutput typedOutput86 = null;
        retrofit.client.Request request87 = new retrofit.client.Request("", "", headerList85, typedOutput86);
        java.lang.String str88 = request87.getUrl();
        retrofit.mime.TypedOutput typedOutput89 = request87.body;
        java.lang.String str90 = request87.getUrl();
        java.util.List<retrofit.client.Header> headerList91 = request87.headers;
        retrofit.RequestBuilder requestBuilder92 = requestBuilder3.headers(headerList91);
        retrofit.mime.TypedOutput typedOutput93 = null;
        retrofit.client.Request request94 = new retrofit.client.Request("", "hi!", headerList91, typedOutput93);
        retrofit.mime.TypedOutput typedOutput95 = request94.getBody();
        java.lang.String str96 = request94.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(requestBuilder82);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(typedOutput89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertNotNull(headerList91);
        org.junit.Assert.assertNotNull(requestBuilder92);
        org.junit.Assert.assertNull(typedOutput95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request6.getBody();
        java.lang.String str14 = request6.method;
        java.lang.Class<?> wildcardClass15 = request6.getClass();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList9 = requestBuilder8.getheaders();
        requestBuilder8.setapiUrl("");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.client.Header[] headerArray19 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList20 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList20, headerArray19);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList20, typedOutput22);
        requestBuilder16.setheaders((java.util.List<retrofit.client.Header>) headerList20);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.converter.Converter converter30 = requestBuilder29.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder29.headers;
        requestBuilder29.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.lang.String str39 = request38.getUrl();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder29, request38 };
        requestBuilder16.setargs(objArray40);
        java.lang.Object[] objArray42 = requestBuilder16.getargs();
        retrofit.RequestBuilder requestBuilder43 = requestBuilder13.args(objArray42);
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder13.getheaders();
        java.util.List<retrofit.client.Header> headerList45 = null;
        retrofit.RequestBuilder requestBuilder46 = requestBuilder13.headers(headerList45);
        java.lang.Object[] objArray47 = requestBuilder13.getargs();
        requestBuilder8.args = objArray47;
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder8.headers;
        java.lang.Object[] objArray50 = requestBuilder8.args;
        retrofit.converter.Converter converter51 = null;
        retrofit.RequestBuilder requestBuilder52 = new retrofit.RequestBuilder(converter51);
        retrofit.converter.Converter converter53 = requestBuilder52.getconverter();
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.client.Header[] headerArray58 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList59 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList59, headerArray58);
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList59, typedOutput61);
        requestBuilder55.setheaders((java.util.List<retrofit.client.Header>) headerList59);
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        retrofit.converter.Converter converter69 = requestBuilder68.getconverter();
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder68.headers;
        requestBuilder68.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList75 = null;
        retrofit.mime.TypedOutput typedOutput76 = null;
        retrofit.client.Request request77 = new retrofit.client.Request("", "", headerList75, typedOutput76);
        java.lang.String str78 = request77.getUrl();
        java.lang.Object[] objArray79 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder68, request77 };
        requestBuilder55.setargs(objArray79);
        java.lang.Object[] objArray81 = requestBuilder55.getargs();
        retrofit.RequestBuilder requestBuilder82 = requestBuilder52.args(objArray81);
        java.lang.String str83 = requestBuilder82.apiUrl;
        java.lang.Object[] objArray84 = requestBuilder82.getargs();
        retrofit.RequestBuilder requestBuilder85 = requestBuilder8.args(objArray84);
        java.lang.Class<?> wildcardClass86 = objArray84.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList9);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(headerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNotNull(headerArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNull(headerList70);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertNotNull(requestBuilder82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        java.util.List<retrofit.client.Header> headerList38 = request37.getHeaders();
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "hi!", headerList38, typedOutput39);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList38, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.body;
        retrofit.mime.TypedOutput typedOutput44 = request42.body;
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "hi!", headerList42, typedOutput45);
        java.util.List<retrofit.client.Header> headerList47 = request46.getHeaders();
        retrofit.mime.TypedOutput typedOutput48 = request46.body;
        java.lang.String str49 = request46.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNull(typedOutput48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.Object[] objArray85 = requestBuilder84.getargs();
        requestBuilder84.apiUrl = "";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray15 = requestBuilder3.getargs();
        retrofit.converter.Converter converter16 = requestBuilder3.getconverter();
        java.lang.Object[] objArray17 = requestBuilder3.getargs();
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.converter.Converter converter33 = requestBuilder32.getconverter();
        java.util.List<retrofit.client.Header> headerList34 = requestBuilder32.headers;
        requestBuilder32.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        java.lang.String str42 = request41.getUrl();
        java.lang.Object[] objArray43 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder32, request41 };
        requestBuilder19.setargs(objArray43);
        requestBuilder19.apiUrl = "";
        retrofit.RequestBuilder requestBuilder48 = requestBuilder19.apiUrl("hi!");
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        java.util.List<retrofit.client.Header> headerList53 = null;
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "", headerList53, typedOutput54);
        retrofit.mime.TypedOutput typedOutput56 = request55.getBody();
        retrofit.mime.TypedOutput typedOutput57 = request55.getBody();
        java.util.List<retrofit.client.Header> headerList58 = request55.headers;
        requestBuilder50.setheaders(headerList58);
        retrofit.RequestBuilder requestBuilder60 = requestBuilder19.headers(headerList58);
        retrofit.RequestBuilder requestBuilder61 = requestBuilder3.headers(headerList58);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "hi!", headerList58, typedOutput62);
        java.lang.String str64 = request63.url;
        java.lang.String str65 = request63.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(objArray17);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(headerList34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertNull(typedOutput56);
        org.junit.Assert.assertNull(typedOutput57);
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(requestBuilder61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        java.lang.String str17 = request12.method;
        java.lang.String str18 = request12.url;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        java.util.List<retrofit.client.Header> headerList36 = request35.getHeaders();
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "hi!", headerList36, typedOutput37);
        java.util.List<retrofit.client.Header> headerList39 = request38.getHeaders();
        retrofit.mime.TypedOutput typedOutput40 = request38.body;
        retrofit.mime.TypedOutput typedOutput41 = request38.body;
        java.lang.String str42 = request38.url;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(objArray6);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        java.lang.String str10 = request8.getUrl();
        java.lang.String str11 = request8.method;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        java.lang.String str13 = request8.url;
        java.util.List<retrofit.client.Header> headerList14 = request8.headers;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", headerList14, typedOutput15);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        java.util.List<retrofit.client.Header> headerList55 = request54.getHeaders();
        requestBuilder47.setheaders(headerList55);
        java.lang.String str57 = requestBuilder47.apiUrl;
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder47.headers;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("hi!", "hi!", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.body;
        java.lang.String str63 = request60.getUrl();
        java.util.List<retrofit.client.Header> headerList64 = request60.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(headerList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(headerList64);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.lang.String str40 = request33.getUrl();
        java.lang.String str41 = request33.getMethod();
        java.lang.String str42 = request33.url;
        java.lang.String str43 = request33.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.lang.Object[] objArray4 = requestBuilder3.args;
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.converter.Converter converter7 = requestBuilder6.getconverter();
        java.util.List<retrofit.client.Header> headerList8 = requestBuilder6.headers;
        requestBuilder6.setapiUrl("hi!");
        retrofit.converter.Converter converter11 = requestBuilder6.converter;
        retrofit.RequestBuilder requestBuilder13 = requestBuilder6.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder15 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder17.getheaders();
        java.lang.String str27 = requestBuilder17.getapiUrl();
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        requestBuilder29.apiUrl = "";
        retrofit.RequestBuilder requestBuilder58 = requestBuilder29.apiUrl("hi!");
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        retrofit.mime.TypedOutput typedOutput66 = request65.getBody();
        retrofit.mime.TypedOutput typedOutput67 = request65.getBody();
        java.util.List<retrofit.client.Header> headerList68 = request65.headers;
        requestBuilder60.setheaders(headerList68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder29.headers(headerList68);
        requestBuilder17.headers = headerList68;
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.url;
        java.util.List<retrofit.client.Header> headerList78 = request76.getHeaders();
        requestBuilder17.headers = headerList78;
        retrofit.RequestBuilder requestBuilder80 = requestBuilder13.headers(headerList78);
        requestBuilder3.headers = headerList78;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList78, typedOutput82);
        java.lang.String str84 = request83.getUrl();
        java.lang.String str85 = request83.getUrl();
        java.lang.String str86 = request83.getMethod();
        java.lang.String str87 = request83.method;
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(headerList8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNotNull(requestBuilder15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.url;
        java.lang.String str13 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        requestBuilder4.apiUrl = "";
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        requestBuilder4.setheaders(headerList41);
        requestBuilder4.apiUrl = "";
        java.lang.Object[] objArray46 = requestBuilder4.args;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.args(objArray46);
        retrofit.converter.Converter converter48 = requestBuilder1.converter;
        java.lang.Object[] objArray49 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder1.getheaders();
        java.lang.Object[] objArray51 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNull(headerList50);
        org.junit.Assert.assertNotNull(objArray51);
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        java.lang.String str6 = request4.method;
        java.lang.String str7 = request4.method;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder13.headers;
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder20, typedOutput35 };
        requestBuilder13.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.getBody();
        retrofit.mime.TypedOutput typedOutput44 = request42.getBody();
        java.lang.String str45 = request42.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request42.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder13.headers(headerList46);
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.headers(headerList46);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput49 = requestBuilder48.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder48);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.body;
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getMethod();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        requestBuilder1.setapiUrl("hi!");
        java.lang.Object[] objArray87 = requestBuilder1.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput88 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray87);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        java.util.List<retrofit.client.Header> headerList18 = request17.getHeaders();
        java.lang.String str19 = request17.method;
        java.lang.String str20 = request17.getMethod();
        java.lang.String str21 = request17.getMethod();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.lang.String str14 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput15 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList16 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList33, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList39 = request37.headers;
        retrofit.mime.TypedOutput typedOutput40 = request37.getBody();
        java.lang.String str41 = request37.getMethod();
        java.lang.String str42 = request37.getMethod();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.lang.String str3 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        java.lang.String str38 = request37.url;
        java.lang.String str39 = request37.getMethod();
        java.lang.String str40 = request37.method;
        java.lang.String str41 = request37.method;
        java.util.List<retrofit.client.Header> headerList42 = request37.headers;
        requestBuilder1.headers = headerList42;
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        java.util.List<retrofit.client.Header> headerList51 = request50.getHeaders();
        java.lang.String str52 = request50.url;
        java.lang.String str53 = request50.url;
        java.lang.String str54 = request50.method;
        retrofit.mime.TypedOutput typedOutput55 = request50.getBody();
        java.util.List<retrofit.client.Header> headerList56 = request50.getHeaders();
        retrofit.RequestBuilder requestBuilder57 = requestBuilder1.headers(headerList56);
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        retrofit.mime.TypedOutput typedOutput63 = request62.getBody();
        java.lang.String str64 = request62.getMethod();
        java.lang.String str65 = request62.getMethod();
        java.util.List<retrofit.client.Header> headerList66 = request62.getHeaders();
        retrofit.RequestBuilder requestBuilder67 = requestBuilder1.headers(headerList66);
        java.lang.Object[] objArray68 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder57);
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(headerList66);
        org.junit.Assert.assertNotNull(requestBuilder67);
        org.junit.Assert.assertNull(objArray68);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.lang.String str12 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter13 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter14 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(converter14);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder29.apiUrl("");
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder29.headers;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.headers(headerList57);
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder1.headers;
        retrofit.converter.Converter converter63 = null;
        retrofit.RequestBuilder requestBuilder64 = new retrofit.RequestBuilder(converter63);
        retrofit.client.Header[] headerArray67 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList68 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList68, headerArray67);
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList68, typedOutput70);
        requestBuilder64.setheaders((java.util.List<retrofit.client.Header>) headerList68);
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        retrofit.converter.Converter converter78 = requestBuilder77.getconverter();
        java.util.List<retrofit.client.Header> headerList79 = requestBuilder77.headers;
        requestBuilder77.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList84 = null;
        retrofit.mime.TypedOutput typedOutput85 = null;
        retrofit.client.Request request86 = new retrofit.client.Request("", "", headerList84, typedOutput85);
        java.lang.String str87 = request86.getUrl();
        java.lang.Object[] objArray88 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder77, request86 };
        requestBuilder64.setargs(objArray88);
        retrofit.RequestBuilder requestBuilder91 = requestBuilder64.apiUrl("");
        java.lang.Object[] objArray92 = requestBuilder91.getargs();
        retrofit.RequestBuilder requestBuilder93 = requestBuilder1.args(objArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(headerList61);
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNotNull(headerArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNull(headerList79);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertNotNull(requestBuilder91);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertNotNull(requestBuilder93);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.RequestBuilder requestBuilder16 = requestBuilder12.headers(headerList15);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(requestBuilder16);
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "hi!", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = request13.body;
        retrofit.mime.TypedOutput typedOutput15 = request13.getBody();
        java.util.List<retrofit.client.Header> headerList16 = request13.headers;
        java.lang.String str17 = request13.getUrl();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        java.lang.String str16 = requestBuilder7.getapiUrl();
        retrofit.RequestBuilder requestBuilder18 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.url;
        java.util.List<retrofit.client.Header> headerList25 = request23.getHeaders();
        java.util.List<retrofit.client.Header> headerList26 = request23.getHeaders();
        requestBuilder7.headers = headerList26;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList26, typedOutput28);
        java.lang.String str30 = request29.getMethod();
        retrofit.mime.TypedOutput typedOutput31 = request29.getBody();
        java.util.List<retrofit.client.Header> headerList32 = request29.getHeaders();
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", headerList32, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList32, typedOutput35);
        java.lang.String str37 = request36.url;
        java.lang.String str38 = request36.method;
        java.lang.String str39 = request36.getMethod();
        java.lang.String str40 = request36.getMethod();
        java.lang.String str41 = request36.method;
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(requestBuilder18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        java.lang.String str15 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.util.List<retrofit.client.Header> headerList5 = request4.getHeaders();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getUrl();
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("", "hi!", headerList9, typedOutput10);
        java.lang.String str12 = request11.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request11.body;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter35 = requestBuilder1.converter;
        retrofit.converter.Converter converter36 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder1.headers;
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList46 = null;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        java.lang.String str49 = request48.getUrl();
        retrofit.mime.TypedOutput typedOutput50 = request48.body;
        java.lang.String str51 = request48.method;
        retrofit.mime.TypedOutput typedOutput52 = request48.getBody();
        java.lang.String str53 = request48.url;
        java.util.List<retrofit.client.Header> headerList54 = request48.headers;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "", headerList54, typedOutput55);
        retrofit.RequestBuilder requestBuilder57 = requestBuilder1.headers(headerList54);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(requestBuilder57);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.Object[] objArray4 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.converter.Converter converter9 = requestBuilder8.getconverter();
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        requestBuilder11.setheaders((java.util.List<retrofit.client.Header>) headerList15);
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.converter.Converter converter25 = requestBuilder24.getconverter();
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder24.headers;
        requestBuilder24.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder24, request33 };
        requestBuilder11.setargs(objArray35);
        java.lang.Object[] objArray37 = requestBuilder11.getargs();
        retrofit.RequestBuilder requestBuilder38 = requestBuilder8.args(objArray37);
        requestBuilder38.setapiUrl("");
        retrofit.converter.Converter converter41 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder38.getheaders();
        java.lang.String str43 = requestBuilder38.apiUrl;
        java.lang.Object[] objArray44 = requestBuilder38.getargs();
        requestBuilder1.setargs(objArray44);
        retrofit.converter.Converter converter46 = requestBuilder1.getconverter();
        java.lang.String str47 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter48 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter49 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder1.headers;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(headerList26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(headerList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNull(headerList50);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.url;
        java.lang.String str13 = request6.url;
        retrofit.mime.TypedOutput typedOutput14 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder45.headers;
        retrofit.converter.Converter converter47 = requestBuilder45.converter;
        requestBuilder45.setapiUrl("");
        java.lang.String str50 = requestBuilder45.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder10 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray11 = requestBuilder1.getargs();
        java.lang.String str12 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder1.apiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNull(objArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder14);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.lang.String str11 = request10.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.lang.String str15 = request14.method;
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "", headerList17, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList20, typedOutput21);
        java.lang.String str23 = request22.getUrl();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder58 = requestBuilder1.apiUrl("");
        java.lang.String str59 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList60 = requestBuilder1.getheaders();
        java.lang.Object[] objArray61 = requestBuilder1.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(headerList60);
        org.junit.Assert.assertNotNull(objArray61);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.lang.String str13 = request6.getMethod();
        java.lang.Class<?> wildcardClass14 = request6.getClass();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.url;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.getUrl();
        java.lang.String str13 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("");
        requestBuilder1.apiUrl = "";
        java.lang.Object[] objArray22 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList23 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput24 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(objArray22);
        org.junit.Assert.assertNull(headerList23);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.method;
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.headers;
        java.lang.String str82 = request80.getMethod();
        java.lang.String str83 = request80.getUrl();
        java.util.List<retrofit.client.Header> headerList84 = request80.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(headerList84);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.util.List<retrofit.client.Header> headerList91 = requestBuilder90.getheaders();
        retrofit.converter.Converter converter92 = requestBuilder90.getconverter();
        java.lang.Object[] objArray93 = requestBuilder90.args;
        retrofit.converter.Converter converter94 = requestBuilder90.converter;
        retrofit.RequestBuilder requestBuilder96 = requestBuilder90.apiUrl("");
        java.lang.Class<?> wildcardClass97 = requestBuilder90.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(headerList91);
        org.junit.Assert.assertNull(converter92);
        org.junit.Assert.assertNull(objArray93);
        org.junit.Assert.assertNull(converter94);
        org.junit.Assert.assertNotNull(requestBuilder96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.lang.String str3 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        java.lang.String str38 = request37.url;
        java.lang.String str39 = request37.getMethod();
        java.lang.String str40 = request37.method;
        java.lang.String str41 = request37.method;
        java.util.List<retrofit.client.Header> headerList42 = request37.headers;
        requestBuilder1.headers = headerList42;
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        retrofit.mime.TypedOutput typedOutput78 = null;
        retrofit.client.Request request79 = new retrofit.client.Request("", "", headerList77, typedOutput78);
        java.util.List<retrofit.client.Header> headerList80 = request79.headers;
        retrofit.mime.TypedOutput typedOutput81 = request79.getBody();
        java.util.List<retrofit.client.Header> headerList82 = request79.headers;
        retrofit.RequestBuilder requestBuilder83 = requestBuilder45.headers(headerList82);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList80);
        org.junit.Assert.assertNull(typedOutput81);
        org.junit.Assert.assertNotNull(headerList82);
        org.junit.Assert.assertNotNull(requestBuilder83);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        java.lang.String str12 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.RequestBuilder requestBuilder27 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray28 = requestBuilder1.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request29 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(requestBuilder27);
        org.junit.Assert.assertNotNull(objArray28);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.String str74 = requestBuilder1.apiUrl;
        java.lang.String str75 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder77 = requestBuilder1.apiUrl("hi!");
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(requestBuilder77);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        java.lang.String str10 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = request6.getBody();
        java.lang.String str14 = request6.url;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request6.headers;
        retrofit.mime.TypedOutput typedOutput17 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNull(typedOutput17);
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.lang.Object[] objArray31 = requestBuilder1.args;
        java.lang.String str32 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.lang.String str39 = request38.getUrl();
        retrofit.mime.TypedOutput typedOutput40 = request38.body;
        java.util.List<retrofit.client.Header> headerList41 = request38.getHeaders();
        java.util.List<retrofit.client.Header> headerList42 = request38.getHeaders();
        java.lang.String str43 = request38.getUrl();
        java.util.List<retrofit.client.Header> headerList44 = request38.getHeaders();
        java.lang.String str45 = request38.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request38.headers;
        requestBuilder1.headers = headerList46;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request48 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.headers;
        retrofit.mime.TypedOutput typedOutput82 = request80.body;
        retrofit.mime.TypedOutput typedOutput83 = request80.body;
        java.lang.String str84 = request80.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList18 = null;
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = request20.getBody();
        retrofit.mime.TypedOutput typedOutput22 = request20.getBody();
        java.lang.String str23 = request20.getMethod();
        java.lang.String str24 = request20.method;
        java.lang.String str25 = request20.method;
        java.util.List<retrofit.client.Header> headerList26 = request20.headers;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "hi!", headerList26, typedOutput27);
        requestBuilder1.setheaders(headerList26);
        java.lang.String str30 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        java.lang.String str37 = request35.getMethod();
        java.util.List<retrofit.client.Header> headerList38 = request35.getHeaders();
        requestBuilder1.headers = headerList38;
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.RequestBuilder requestBuilder41 = requestBuilder1.headers(headerList40);
        requestBuilder41.apiUrl = "";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(requestBuilder41);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput36 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request33.body;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = requestBuilder3.converter;
        retrofit.RequestBuilder requestBuilder50 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList51 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "", headerList51, typedOutput52);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNotNull(requestBuilder50);
        org.junit.Assert.assertNotNull(headerList51);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        retrofit.converter.Converter converter16 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter17 = requestBuilder1.getconverter();
        java.lang.Class<?> wildcardClass18 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        java.lang.String str16 = requestBuilder7.getapiUrl();
        retrofit.RequestBuilder requestBuilder18 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.url;
        java.util.List<retrofit.client.Header> headerList25 = request23.getHeaders();
        java.util.List<retrofit.client.Header> headerList26 = request23.getHeaders();
        requestBuilder7.headers = headerList26;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList26, typedOutput28);
        java.lang.String str30 = request29.getMethod();
        retrofit.mime.TypedOutput typedOutput31 = request29.getBody();
        java.util.List<retrofit.client.Header> headerList32 = request29.getHeaders();
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", headerList32, typedOutput33);
        java.util.List<retrofit.client.Header> headerList35 = request34.getHeaders();
        java.lang.String str36 = request34.url;
        java.lang.String str37 = request34.url;
        java.util.List<retrofit.client.Header> headerList38 = request34.getHeaders();
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(requestBuilder18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.getHeaders();
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.getUrl();
        java.lang.String str37 = request33.getUrl();
        java.lang.String str38 = request33.method;
        retrofit.mime.TypedOutput typedOutput39 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(typedOutput39);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = null;
        requestBuilder1.headers = headerList3;
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder1.headers;
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.getheaders();
        java.lang.String str8 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder10 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder12 = requestBuilder10.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = requestBuilder12.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNotNull(requestBuilder12);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        retrofit.converter.Converter converter40 = requestBuilder39.getconverter();
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        java.lang.Object[] objArray68 = requestBuilder42.getargs();
        retrofit.RequestBuilder requestBuilder69 = requestBuilder39.args(objArray68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder37.args(objArray68);
        retrofit.converter.Converter converter71 = requestBuilder70.getconverter();
        java.lang.Object[] objArray72 = requestBuilder70.getargs();
        retrofit.RequestBuilder requestBuilder74 = requestBuilder70.apiUrl("hi!");
        requestBuilder70.setapiUrl("");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNull(converter71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(requestBuilder74);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        java.lang.String str6 = request4.method;
        java.lang.String str7 = request4.method;
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.lang.Object[] objArray30 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", headerList9, typedOutput10);
        java.lang.String str12 = request11.url;
        java.lang.String str13 = request11.url;
        java.lang.String str14 = request11.getMethod();
        java.lang.String str15 = request11.getUrl();
        java.lang.Class<?> wildcardClass16 = request11.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList43 = null;
        requestBuilder1.headers = headerList43;
        retrofit.RequestBuilder requestBuilder46 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter47 = requestBuilder46.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request48 = requestBuilder46.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNull(converter47);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        retrofit.mime.TypedOutput typedOutput34 = request33.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNull(typedOutput34);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.body;
        java.lang.String str19 = request17.method;
        java.lang.String str20 = request17.getMethod();
        java.util.List<retrofit.client.Header> headerList21 = request17.getHeaders();
        java.lang.String str22 = request17.url;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder1.headers;
        java.lang.String str41 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(headerList42);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput36 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request33.body;
        retrofit.mime.TypedOutput typedOutput38 = request33.getBody();
        java.lang.String str39 = request33.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.Object[] objArray2 = requestBuilder1.args;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        java.lang.String str13 = requestBuilder4.getapiUrl();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder4.getheaders();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder4.headers;
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder4.getheaders();
        retrofit.RequestBuilder requestBuilder17 = requestBuilder1.headers(headerList16);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.client.Header[] headerArray25 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList26 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList26, headerArray25);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList26, typedOutput28);
        requestBuilder22.setheaders((java.util.List<retrofit.client.Header>) headerList26);
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.converter.Converter converter36 = requestBuilder35.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder35.headers;
        requestBuilder35.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList42, typedOutput43);
        java.lang.String str45 = request44.getUrl();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder35, request44 };
        requestBuilder22.setargs(objArray46);
        java.lang.Object[] objArray48 = requestBuilder22.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder19.args(objArray48);
        java.lang.String str50 = requestBuilder19.getapiUrl();
        java.lang.String str51 = requestBuilder19.apiUrl;
        retrofit.RequestBuilder requestBuilder53 = requestBuilder19.apiUrl("");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.RequestBuilder requestBuilder55 = requestBuilder53.headers(headerList54);
        retrofit.converter.Converter converter56 = null;
        retrofit.RequestBuilder requestBuilder57 = new retrofit.RequestBuilder(converter56);
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        retrofit.mime.TypedOutput typedOutput63 = request62.getBody();
        retrofit.mime.TypedOutput typedOutput64 = request62.getBody();
        java.util.List<retrofit.client.Header> headerList65 = request62.headers;
        requestBuilder57.setheaders(headerList65);
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        retrofit.converter.Converter converter69 = requestBuilder68.getconverter();
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder68.headers;
        retrofit.converter.Converter converter74 = null;
        retrofit.RequestBuilder requestBuilder75 = new retrofit.RequestBuilder(converter74);
        retrofit.client.Header[] headerArray78 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList79 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList79, headerArray78);
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList79, typedOutput81);
        requestBuilder75.setheaders((java.util.List<retrofit.client.Header>) headerList79);
        java.util.List<retrofit.client.Header> headerList86 = null;
        retrofit.mime.TypedOutput typedOutput87 = null;
        retrofit.client.Request request88 = new retrofit.client.Request("", "", headerList86, typedOutput87);
        java.lang.String str89 = request88.getUrl();
        retrofit.mime.TypedOutput typedOutput90 = request88.body;
        java.lang.Object[] objArray91 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder75, typedOutput90 };
        requestBuilder68.setargs(objArray91);
        retrofit.RequestBuilder requestBuilder93 = requestBuilder57.args(objArray91);
        requestBuilder53.setargs(objArray91);
        retrofit.RequestBuilder requestBuilder95 = requestBuilder1.args(objArray91);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput96 = requestBuilder95.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(objArray2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(requestBuilder17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNotNull(headerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNotNull(requestBuilder55);
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertNull(typedOutput64);
        org.junit.Assert.assertNotNull(headerList65);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNull(headerList70);
        org.junit.Assert.assertNotNull(headerArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNull(typedOutput90);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder93);
        org.junit.Assert.assertNotNull(requestBuilder95);
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.getHeaders();
        java.util.List<retrofit.client.Header> headerList35 = request33.headers;
        java.lang.String str36 = request33.url;
        java.lang.String str37 = request33.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.method;
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = null;
        requestBuilder1.headers = headerList3;
        retrofit.RequestBuilder requestBuilder6 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(requestBuilder6);
        org.junit.Assert.assertNotNull(requestBuilder8);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.method;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.client.Header[] headerArray40 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList41 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList41, headerArray40);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList41, typedOutput43);
        requestBuilder37.setheaders((java.util.List<retrofit.client.Header>) headerList41);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.converter.Converter converter51 = requestBuilder50.getconverter();
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder50.headers;
        requestBuilder50.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList57 = null;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        java.lang.String str60 = request59.getUrl();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder50, request59 };
        requestBuilder37.setargs(objArray61);
        requestBuilder37.apiUrl = "";
        retrofit.RequestBuilder requestBuilder66 = requestBuilder37.apiUrl("hi!");
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        retrofit.mime.TypedOutput typedOutput74 = request73.getBody();
        retrofit.mime.TypedOutput typedOutput75 = request73.getBody();
        java.util.List<retrofit.client.Header> headerList76 = request73.headers;
        requestBuilder68.setheaders(headerList76);
        retrofit.RequestBuilder requestBuilder78 = requestBuilder37.headers(headerList76);
        java.lang.Object[] objArray79 = requestBuilder37.getargs();
        retrofit.RequestBuilder requestBuilder80 = requestBuilder34.args(objArray79);
        requestBuilder34.apiUrl = "";
        java.lang.String str83 = requestBuilder34.getapiUrl();
        retrofit.converter.Converter converter84 = requestBuilder34.converter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = requestBuilder34.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(headerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNull(headerList52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNull(typedOutput75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(converter84);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.headers;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.method;
        java.lang.String str19 = request17.getUrl();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        retrofit.converter.Converter converter43 = requestBuilder1.converter;
        retrofit.converter.Converter converter44 = requestBuilder1.converter;
        retrofit.converter.Converter converter45 = requestBuilder1.getconverter();
        java.lang.Object[] objArray46 = requestBuilder1.getargs();
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.converter.Converter converter49 = requestBuilder48.getconverter();
        java.util.List<retrofit.client.Header> headerList50 = null;
        requestBuilder48.headers = headerList50;
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder48.headers;
        retrofit.converter.Converter converter53 = requestBuilder48.converter;
        requestBuilder48.apiUrl = "";
        java.lang.Object[] objArray56 = requestBuilder48.getargs();
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.client.Header[] headerArray61 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList62 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList62, headerArray61);
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList62, typedOutput64);
        requestBuilder58.setheaders((java.util.List<retrofit.client.Header>) headerList62);
        retrofit.converter.Converter converter70 = null;
        retrofit.RequestBuilder requestBuilder71 = new retrofit.RequestBuilder(converter70);
        retrofit.converter.Converter converter72 = requestBuilder71.getconverter();
        java.util.List<retrofit.client.Header> headerList73 = requestBuilder71.headers;
        requestBuilder71.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList78 = null;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "", headerList78, typedOutput79);
        java.lang.String str81 = request80.getUrl();
        java.lang.Object[] objArray82 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder71, request80 };
        requestBuilder58.setargs(objArray82);
        java.lang.Object[] objArray84 = requestBuilder58.getargs();
        java.lang.Object[] objArray85 = requestBuilder58.getargs();
        requestBuilder48.args = objArray85;
        retrofit.RequestBuilder requestBuilder87 = requestBuilder1.args(objArray85);
        retrofit.converter.Converter converter88 = requestBuilder1.converter;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNull(headerList52);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(objArray56);
        org.junit.Assert.assertNotNull(headerArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNull(headerList73);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(converter88);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        java.lang.String str82 = request80.url;
        java.lang.String str83 = request80.method;
        retrofit.mime.TypedOutput typedOutput84 = request80.body;
        java.lang.String str85 = request80.getMethod();
        java.lang.Class<?> wildcardClass86 = request80.getClass();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.method;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList12, typedOutput13);
        java.lang.String str15 = request14.getUrl();
        java.lang.String str16 = request14.method;
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        java.lang.String str34 = requestBuilder3.getapiUrl();
        java.lang.String str35 = requestBuilder3.apiUrl;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray38 = new java.lang.Object[] {};
        requestBuilder3.setargs(objArray38);
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList42, typedOutput43);
        java.lang.String str45 = request44.getUrl();
        retrofit.mime.TypedOutput typedOutput46 = request44.body;
        java.util.List<retrofit.client.Header> headerList47 = request44.getHeaders();
        java.util.List<retrofit.client.Header> headerList48 = request44.getHeaders();
        requestBuilder3.setheaders(headerList48);
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        retrofit.mime.TypedOutput typedOutput53 = request52.body;
        java.lang.Class<?> wildcardClass54 = request52.getClass();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(typedOutput46);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertNotNull(headerList50);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray15 = requestBuilder3.getargs();
        retrofit.converter.Converter converter16 = requestBuilder3.getconverter();
        java.lang.Object[] objArray17 = requestBuilder3.getargs();
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.converter.Converter converter33 = requestBuilder32.getconverter();
        java.util.List<retrofit.client.Header> headerList34 = requestBuilder32.headers;
        requestBuilder32.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        java.lang.String str42 = request41.getUrl();
        java.lang.Object[] objArray43 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder32, request41 };
        requestBuilder19.setargs(objArray43);
        requestBuilder19.apiUrl = "";
        retrofit.RequestBuilder requestBuilder48 = requestBuilder19.apiUrl("hi!");
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        java.util.List<retrofit.client.Header> headerList53 = null;
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "", headerList53, typedOutput54);
        retrofit.mime.TypedOutput typedOutput56 = request55.getBody();
        retrofit.mime.TypedOutput typedOutput57 = request55.getBody();
        java.util.List<retrofit.client.Header> headerList58 = request55.headers;
        requestBuilder50.setheaders(headerList58);
        retrofit.RequestBuilder requestBuilder60 = requestBuilder19.headers(headerList58);
        retrofit.RequestBuilder requestBuilder61 = requestBuilder3.headers(headerList58);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "hi!", headerList58, typedOutput62);
        java.lang.String str64 = request63.getMethod();
        retrofit.mime.TypedOutput typedOutput65 = request63.body;
        java.lang.String str66 = request63.method;
        java.lang.String str67 = request63.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(objArray17);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(headerList34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertNull(typedOutput56);
        org.junit.Assert.assertNull(typedOutput57);
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(requestBuilder61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        retrofit.converter.Converter converter16 = requestBuilder1.getconverter();
        java.lang.Object[] objArray17 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput18 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(objArray17);
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.Object[] objArray28 = requestBuilder1.getargs();
        retrofit.converter.Converter converter29 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        java.lang.Class<?> wildcardClass31 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.getHeaders();
        retrofit.mime.TypedOutput typedOutput35 = request33.getBody();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass36 = typedOutput35.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNull(typedOutput35);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        java.lang.String str6 = requestBuilder5.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request7 = requestBuilder5.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder32 = requestBuilder30.apiUrl("");
        java.lang.Object[] objArray33 = requestBuilder32.getargs();
        java.util.List<retrofit.client.Header> headerList34 = null;
        requestBuilder32.headers = headerList34;
        java.lang.Object[] objArray36 = requestBuilder32.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(objArray36);
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList43 = null;
        requestBuilder1.headers = headerList43;
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.lang.String str51 = request49.getMethod();
        retrofit.mime.TypedOutput typedOutput52 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList53 = request49.getHeaders();
        requestBuilder1.headers = headerList53;
        java.lang.Object[] objArray55 = requestBuilder1.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNotNull(headerList53);
        org.junit.Assert.assertNotNull(objArray55);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder5.getheaders();
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "hi!", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("hi!", "", headerList47, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.body;
        java.util.List<retrofit.client.Header> headerList53 = request51.getHeaders();
        retrofit.mime.TypedOutput typedOutput54 = request51.getBody();
        retrofit.mime.TypedOutput typedOutput55 = request51.body;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNotNull(headerList53);
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertNull(typedOutput55);
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.lang.String str40 = request33.url;
        java.util.List<retrofit.client.Header> headerList41 = request33.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.Class<?> wildcardClass8 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        requestBuilder5.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = requestBuilder5.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        retrofit.converter.Converter converter16 = requestBuilder1.getconverter();
        java.lang.Object[] objArray17 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder1.headers;
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(objArray17);
        org.junit.Assert.assertNotNull(headerList18);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.method;
        java.lang.String str12 = request6.getUrl();
        java.lang.String str13 = request6.getUrl();
        java.lang.String str14 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        requestBuilder1.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder41 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.RequestBuilder requestBuilder43 = requestBuilder41.headers(headerList42);
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder41.getheaders();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(requestBuilder41);
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNull(headerList44);
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.lang.String str10 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        requestBuilder4.apiUrl = "";
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        requestBuilder4.setheaders(headerList41);
        requestBuilder4.apiUrl = "";
        java.lang.Object[] objArray46 = requestBuilder4.args;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.args(objArray46);
        requestBuilder47.apiUrl = "hi!";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        java.lang.String str10 = request8.url;
        java.lang.String str11 = request8.url;
        java.lang.String str12 = request8.method;
        retrofit.mime.TypedOutput typedOutput13 = request8.getBody();
        java.lang.String str14 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList15 = request8.headers;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.url;
        java.util.List<retrofit.client.Header> headerList19 = request17.headers;
        retrofit.mime.TypedOutput typedOutput20 = request17.body;
        retrofit.mime.TypedOutput typedOutput21 = request17.getBody();
        java.lang.String str22 = request17.getUrl();
        java.lang.String str23 = request17.getUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.String str30 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList32);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput40);
        java.lang.String str42 = request41.method;
        java.lang.String str43 = request41.getUrl();
        retrofit.mime.TypedOutput typedOutput44 = request41.body;
        java.util.List<retrofit.client.Header> headerList45 = request41.getHeaders();
        java.util.List<retrofit.client.Header> headerList46 = request41.headers;
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(headerList46);
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput31 = requestBuilder30.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        java.lang.String str16 = requestBuilder7.getapiUrl();
        retrofit.RequestBuilder requestBuilder18 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.url;
        java.util.List<retrofit.client.Header> headerList25 = request23.getHeaders();
        java.util.List<retrofit.client.Header> headerList26 = request23.getHeaders();
        requestBuilder7.headers = headerList26;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList26, typedOutput28);
        java.lang.String str30 = request29.getMethod();
        retrofit.mime.TypedOutput typedOutput31 = request29.getBody();
        java.util.List<retrofit.client.Header> headerList32 = request29.getHeaders();
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", headerList32, typedOutput33);
        java.util.List<retrofit.client.Header> headerList35 = request34.getHeaders();
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "", headerList35, typedOutput36);
        java.util.List<retrofit.client.Header> headerList38 = request37.headers;
        java.util.List<retrofit.client.Header> headerList39 = request37.headers;
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(requestBuilder18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerList39);
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.util.List<retrofit.client.Header> headerList14 = request4.getHeaders();
        java.lang.Class<?> wildcardClass15 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.method;
        java.util.List<retrofit.client.Header> headerList10 = request6.headers;
        java.lang.String str11 = request6.method;
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.lang.String str13 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.body;
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        java.lang.String str18 = request14.url;
        java.util.List<retrofit.client.Header> headerList19 = request14.headers;
        java.lang.String str20 = request14.url;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request8.body;
        java.lang.String str11 = request8.getUrl();
        java.lang.String str12 = request8.url;
        java.lang.String str13 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request8.headers;
        java.util.List<retrofit.client.Header> headerList15 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "", headerList15, typedOutput18);
        java.lang.String str20 = request19.getUrl();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray36 = new java.lang.Object[] {};
        requestBuilder1.setargs(objArray36);
        retrofit.converter.Converter converter38 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter39 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList42, typedOutput43);
        retrofit.mime.TypedOutput typedOutput45 = request44.getBody();
        retrofit.mime.TypedOutput typedOutput46 = request44.getBody();
        java.lang.String str47 = request44.getMethod();
        java.lang.String str48 = request44.method;
        java.lang.String str49 = request44.method;
        java.util.List<retrofit.client.Header> headerList50 = request44.headers;
        requestBuilder1.headers = headerList50;
        retrofit.converter.Converter converter52 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter53 = requestBuilder1.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(typedOutput45);
        org.junit.Assert.assertNull(typedOutput46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(headerList50);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNull(converter53);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        java.lang.Object[] objArray46 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.getBody();
        java.util.List<retrofit.client.Header> headerList53 = request51.headers;
        java.util.List<retrofit.client.Header> headerList54 = request51.headers;
        requestBuilder3.headers = headerList54;
        requestBuilder3.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder3.getheaders();
        retrofit.RequestBuilder requestBuilder60 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder60.headers;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "hi!", headerList61, typedOutput62);
        retrofit.mime.TypedOutput typedOutput64 = request63.getBody();
        java.lang.String str65 = request63.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNotNull(headerList53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(headerList61);
        org.junit.Assert.assertNull(typedOutput64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = requestBuilder37.converter;
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder37.headers;
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        java.lang.Object[] objArray68 = requestBuilder42.getargs();
        java.lang.String str69 = requestBuilder42.apiUrl;
        retrofit.converter.Converter converter70 = requestBuilder42.converter;
        retrofit.RequestBuilder requestBuilder72 = requestBuilder42.apiUrl("");
        java.lang.Object[] objArray73 = requestBuilder72.getargs();
        retrofit.RequestBuilder requestBuilder74 = requestBuilder37.args(objArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = requestBuilder37.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder74);
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        requestBuilder84.apiUrl = "";
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        retrofit.converter.Converter converter8 = null;
        retrofit.RequestBuilder requestBuilder9 = new retrofit.RequestBuilder(converter8);
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        requestBuilder9.setheaders((java.util.List<retrofit.client.Header>) headerList13);
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.converter.Converter converter23 = requestBuilder22.getconverter();
        java.util.List<retrofit.client.Header> headerList24 = requestBuilder22.headers;
        requestBuilder22.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList29 = null;
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "", headerList29, typedOutput30);
        java.lang.String str32 = request31.getUrl();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder22, request31 };
        requestBuilder9.setargs(objArray33);
        retrofit.RequestBuilder requestBuilder36 = requestBuilder9.apiUrl("");
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder9.headers;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "hi!", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "hi!", headerList37, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("", "", headerList37, typedOutput42);
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("hi!", "", headerList37, typedOutput44);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(headerList24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder36);
        org.junit.Assert.assertNotNull(headerList37);
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.Object[] objArray85 = requestBuilder1.getargs();
        java.lang.String str86 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter87 = requestBuilder1.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertNull(converter87);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder1.getheaders();
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList36 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter37 = requestBuilder1.converter;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertNull(headerList36);
        org.junit.Assert.assertNull(converter37);
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray36 = new java.lang.Object[] {};
        requestBuilder1.setargs(objArray36);
        requestBuilder1.setapiUrl("");
        java.lang.String str40 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "hi!", headerList42, typedOutput45);
        java.lang.String str47 = request46.method;
        java.lang.String str48 = request46.getUrl();
        java.lang.String str49 = request46.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.url;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.lang.String str42 = requestBuilder37.apiUrl;
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder37.headers;
        java.lang.String str44 = requestBuilder37.getapiUrl();
        java.lang.String str45 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        java.lang.String str73 = requestBuilder47.getapiUrl();
        retrofit.client.Header[] headerArray76 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList77 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList77, headerArray76);
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        requestBuilder47.setheaders(headerList81);
        java.lang.Object[] objArray83 = requestBuilder47.getargs();
        retrofit.RequestBuilder requestBuilder84 = requestBuilder37.args(objArray83);
        requestBuilder1.setargs(objArray83);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter88 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(headerArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(converter88);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.String str36 = request33.url;
        retrofit.mime.TypedOutput typedOutput37 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput38 = request33.body;
        retrofit.mime.TypedOutput typedOutput39 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        retrofit.mime.TypedOutput typedOutput41 = request33.getBody();
        java.lang.String str42 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList14 = request6.getHeaders();
        java.lang.String str15 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        requestBuilder84.setapiUrl("hi!");
        retrofit.converter.Converter converter88 = requestBuilder84.converter;
        requestBuilder84.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder92 = requestBuilder84.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request93 = requestBuilder84.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNull(converter88);
        org.junit.Assert.assertNotNull(requestBuilder92);
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        java.lang.String str12 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("");
        retrofit.converter.Converter converter34 = requestBuilder31.getconverter();
        retrofit.converter.Converter converter35 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.url;
        java.lang.String str42 = request40.url;
        java.lang.String str43 = request40.getUrl();
        retrofit.mime.TypedOutput typedOutput44 = request40.body;
        java.util.List<retrofit.client.Header> headerList45 = request40.headers;
        requestBuilder31.headers = headerList45;
        requestBuilder31.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder31.headers;
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        retrofit.mime.TypedOutput typedOutput56 = request54.body;
        java.util.List<retrofit.client.Header> headerList57 = request54.getHeaders();
        java.util.List<retrofit.client.Header> headerList58 = request54.getHeaders();
        java.lang.String str59 = request54.getUrl();
        java.lang.String str60 = request54.getMethod();
        java.lang.String str61 = request54.method;
        java.util.List<retrofit.client.Header> headerList62 = request54.getHeaders();
        java.util.List<retrofit.client.Header> headerList63 = request54.getHeaders();
        requestBuilder31.headers = headerList63;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(headerList49);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(typedOutput56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNotNull(headerList63);
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        requestBuilder4.apiUrl = "";
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        requestBuilder4.setheaders(headerList41);
        requestBuilder4.apiUrl = "";
        java.lang.Object[] objArray46 = requestBuilder4.args;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.args(objArray46);
        retrofit.converter.Converter converter48 = requestBuilder1.converter;
        java.lang.Object[] objArray49 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter52 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request53 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNull(converter52);
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.Object[] objArray28 = null;
        requestBuilder1.args = objArray28;
        java.util.List<retrofit.client.Header> headerList34 = null;
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList34, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = request36.getBody();
        retrofit.mime.TypedOutput typedOutput38 = request36.getBody();
        java.util.List<retrofit.client.Header> headerList39 = request36.headers;
        java.util.List<retrofit.client.Header> headerList40 = request36.getHeaders();
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", headerList40, typedOutput41);
        requestBuilder1.headers = headerList40;
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        retrofit.converter.Converter converter50 = requestBuilder45.converter;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder45.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList53 = requestBuilder52.getheaders();
        requestBuilder52.setapiUrl("");
        retrofit.converter.Converter converter56 = null;
        retrofit.RequestBuilder requestBuilder57 = new retrofit.RequestBuilder(converter56);
        retrofit.converter.Converter converter58 = requestBuilder57.getconverter();
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.client.Header[] headerArray63 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList64 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList64, headerArray63);
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList64, typedOutput66);
        requestBuilder60.setheaders((java.util.List<retrofit.client.Header>) headerList64);
        retrofit.converter.Converter converter72 = null;
        retrofit.RequestBuilder requestBuilder73 = new retrofit.RequestBuilder(converter72);
        retrofit.converter.Converter converter74 = requestBuilder73.getconverter();
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder73.headers;
        requestBuilder73.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        java.lang.String str83 = request82.getUrl();
        java.lang.Object[] objArray84 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder73, request82 };
        requestBuilder60.setargs(objArray84);
        java.lang.Object[] objArray86 = requestBuilder60.getargs();
        retrofit.RequestBuilder requestBuilder87 = requestBuilder57.args(objArray86);
        java.util.List<retrofit.client.Header> headerList88 = requestBuilder57.getheaders();
        java.util.List<retrofit.client.Header> headerList89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder57.headers(headerList89);
        java.lang.Object[] objArray91 = requestBuilder57.getargs();
        requestBuilder52.args = objArray91;
        retrofit.RequestBuilder requestBuilder93 = requestBuilder1.args(objArray91);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNull(headerList53);
        org.junit.Assert.assertNull(converter58);
        org.junit.Assert.assertNotNull(headerArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(headerList75);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(headerList88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder93);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.Object[] objArray32 = requestBuilder31.getargs();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(objArray32);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        retrofit.converter.Converter converter20 = null;
        retrofit.RequestBuilder requestBuilder21 = new retrofit.RequestBuilder(converter20);
        retrofit.client.Header[] headerArray24 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList25 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList25, headerArray24);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList25, typedOutput27);
        requestBuilder21.setheaders((java.util.List<retrofit.client.Header>) headerList25);
        java.util.List<retrofit.client.Header> headerList32 = null;
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", headerList32, typedOutput33);
        java.lang.String str35 = request34.getUrl();
        retrofit.mime.TypedOutput typedOutput36 = request34.body;
        java.lang.Object[] objArray37 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder21, typedOutput36 };
        requestBuilder14.setargs(objArray37);
        retrofit.RequestBuilder requestBuilder39 = requestBuilder3.args(objArray37);
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder39.headers;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "", headerList40, typedOutput41);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertNotNull(headerArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder39);
        org.junit.Assert.assertNotNull(headerList40);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.url;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.lang.Class<?> wildcardClass14 = headerList13.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = null;
        requestBuilder1.headers = headerList3;
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder1.headers;
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.getheaders();
        java.lang.String str8 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder10 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder12 = requestBuilder10.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput13 = requestBuilder12.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNotNull(requestBuilder12);
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder52.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput55 = requestBuilder54.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(requestBuilder54);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request58 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        java.lang.String str58 = requestBuilder32.getapiUrl();
        java.lang.Object[] objArray59 = requestBuilder32.args;
        retrofit.RequestBuilder requestBuilder60 = requestBuilder30.args(objArray59);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder30.apiUrl("hi!");
        java.lang.String str63 = requestBuilder30.apiUrl;
        requestBuilder30.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.lang.String str11 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.getUrl();
        java.lang.String str13 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        java.lang.String str26 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder1.headers;
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.client.Header[] headerArray33 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList34 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList34, headerArray33);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList34, typedOutput36);
        requestBuilder30.setheaders((java.util.List<retrofit.client.Header>) headerList34);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        requestBuilder43.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = null;
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        java.lang.String str53 = request52.getUrl();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder43, request52 };
        requestBuilder30.setargs(objArray54);
        requestBuilder30.apiUrl = "";
        retrofit.RequestBuilder requestBuilder59 = requestBuilder30.apiUrl("hi!");
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        java.util.List<retrofit.client.Header> headerList64 = null;
        retrofit.mime.TypedOutput typedOutput65 = null;
        retrofit.client.Request request66 = new retrofit.client.Request("", "", headerList64, typedOutput65);
        retrofit.mime.TypedOutput typedOutput67 = request66.getBody();
        retrofit.mime.TypedOutput typedOutput68 = request66.getBody();
        java.util.List<retrofit.client.Header> headerList69 = request66.headers;
        requestBuilder61.setheaders(headerList69);
        retrofit.RequestBuilder requestBuilder71 = requestBuilder30.headers(headerList69);
        java.lang.Object[] objArray72 = requestBuilder30.getargs();
        java.lang.String str73 = requestBuilder30.getapiUrl();
        java.util.List<retrofit.client.Header> headerList74 = requestBuilder30.getheaders();
        retrofit.RequestBuilder requestBuilder75 = requestBuilder1.headers(headerList74);
        java.util.List<retrofit.client.Header> headerList76 = requestBuilder75.getheaders();
        retrofit.converter.Converter converter77 = requestBuilder75.getconverter();
        java.util.List<retrofit.client.Header> headerList78 = requestBuilder75.getheaders();
        java.util.List<retrofit.client.Header> headerList85 = null;
        retrofit.mime.TypedOutput typedOutput86 = null;
        retrofit.client.Request request87 = new retrofit.client.Request("", "", headerList85, typedOutput86);
        java.lang.String str88 = request87.getUrl();
        java.util.List<retrofit.client.Header> headerList89 = request87.getHeaders();
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("", "", headerList89, typedOutput90);
        retrofit.mime.TypedOutput typedOutput92 = null;
        retrofit.client.Request request93 = new retrofit.client.Request("hi!", "", headerList89, typedOutput92);
        retrofit.RequestBuilder requestBuilder94 = requestBuilder75.headers(headerList89);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(headerList27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertNotNull(headerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(requestBuilder59);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNull(typedOutput68);
        org.junit.Assert.assertNotNull(headerList69);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(headerList74);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertNotNull(requestBuilder94);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        java.lang.Object[] objArray10 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput11 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(objArray10);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList17 = null;
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList17, typedOutput18);
        java.lang.String str20 = request19.url;
        java.util.List<retrofit.client.Header> headerList21 = request19.getHeaders();
        java.util.List<retrofit.client.Header> headerList22 = request19.getHeaders();
        requestBuilder3.headers = headerList22;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList22, typedOutput24);
        java.lang.String str26 = request25.getMethod();
        retrofit.mime.TypedOutput typedOutput27 = request25.body;
        retrofit.mime.TypedOutput typedOutput28 = request25.body;
        java.lang.String str29 = request25.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(typedOutput27);
        org.junit.Assert.assertNull(typedOutput28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.method;
        java.lang.String str35 = request33.url;
        java.lang.String str36 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder14 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder16 = requestBuilder14.apiUrl("");
        java.util.List<retrofit.client.Header> headerList17 = requestBuilder16.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput18 = requestBuilder16.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.method;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        requestBuilder3.setheaders(headerList40);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.client.Header[] headerArray47 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList48 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList48, headerArray47);
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList48, typedOutput50);
        requestBuilder44.setheaders((java.util.List<retrofit.client.Header>) headerList48);
        retrofit.converter.Converter converter56 = null;
        retrofit.RequestBuilder requestBuilder57 = new retrofit.RequestBuilder(converter56);
        retrofit.converter.Converter converter58 = requestBuilder57.getconverter();
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder57.headers;
        requestBuilder57.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList64 = null;
        retrofit.mime.TypedOutput typedOutput65 = null;
        retrofit.client.Request request66 = new retrofit.client.Request("", "", headerList64, typedOutput65);
        java.lang.String str67 = request66.getUrl();
        java.lang.Object[] objArray68 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder57, request66 };
        requestBuilder44.setargs(objArray68);
        java.lang.Object[] objArray70 = requestBuilder44.getargs();
        java.lang.String str71 = requestBuilder44.apiUrl;
        requestBuilder44.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder75 = requestBuilder44.apiUrl("hi!");
        requestBuilder75.setapiUrl("hi!");
        java.lang.Object[] objArray78 = requestBuilder75.getargs();
        retrofit.RequestBuilder requestBuilder79 = requestBuilder3.args(objArray78);
        java.util.List<retrofit.client.Header> headerList80 = requestBuilder79.getheaders();
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("hi!", "", headerList80, typedOutput81);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(headerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(converter58);
        org.junit.Assert.assertNull(headerList59);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(requestBuilder79);
        org.junit.Assert.assertNotNull(headerList80);
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput36 = request33.getBody();
        java.lang.String str37 = request33.getMethod();
        java.lang.String str38 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput39 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(typedOutput39);
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getUrl();
        java.lang.String str13 = request4.url;
        java.lang.String str14 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        retrofit.client.Header[] headerArray42 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList43 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList43, headerArray42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList43, typedOutput45);
        requestBuilder39.setheaders((java.util.List<retrofit.client.Header>) headerList43);
        retrofit.converter.Converter converter51 = null;
        retrofit.RequestBuilder requestBuilder52 = new retrofit.RequestBuilder(converter51);
        retrofit.converter.Converter converter53 = requestBuilder52.getconverter();
        java.util.List<retrofit.client.Header> headerList54 = requestBuilder52.headers;
        requestBuilder52.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList59 = null;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        java.lang.String str62 = request61.getUrl();
        java.lang.Object[] objArray63 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder52, request61 };
        requestBuilder39.setargs(objArray63);
        requestBuilder39.apiUrl = "";
        retrofit.RequestBuilder requestBuilder68 = requestBuilder39.apiUrl("hi!");
        retrofit.converter.Converter converter69 = null;
        retrofit.RequestBuilder requestBuilder70 = new retrofit.RequestBuilder(converter69);
        java.util.List<retrofit.client.Header> headerList73 = null;
        retrofit.mime.TypedOutput typedOutput74 = null;
        retrofit.client.Request request75 = new retrofit.client.Request("", "", headerList73, typedOutput74);
        retrofit.mime.TypedOutput typedOutput76 = request75.getBody();
        retrofit.mime.TypedOutput typedOutput77 = request75.getBody();
        java.util.List<retrofit.client.Header> headerList78 = request75.headers;
        requestBuilder70.setheaders(headerList78);
        retrofit.RequestBuilder requestBuilder80 = requestBuilder39.headers(headerList78);
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("hi!", "", headerList78, typedOutput81);
        requestBuilder1.headers = headerList78;
        java.lang.String str84 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray85 = requestBuilder1.args;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(headerList54);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(requestBuilder68);
        org.junit.Assert.assertNull(typedOutput76);
        org.junit.Assert.assertNull(typedOutput77);
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(objArray85);
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.converter.Converter converter6 = requestBuilder5.getconverter();
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder5.headers;
        requestBuilder5.setapiUrl("hi!");
        retrofit.converter.Converter converter10 = requestBuilder5.converter;
        retrofit.RequestBuilder requestBuilder12 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray13 = requestBuilder5.args;
        java.util.List<retrofit.client.Header> headerList16 = null;
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = request18.getBody();
        java.util.List<retrofit.client.Header> headerList20 = request18.headers;
        java.util.List<retrofit.client.Header> headerList21 = request18.headers;
        requestBuilder5.setheaders(headerList21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput25);
        java.util.List<retrofit.client.Header> headerList27 = request26.headers;
        java.lang.String str28 = request26.getMethod();
        java.lang.String str29 = request26.method;
        java.lang.String str30 = request26.getUrl();
        retrofit.mime.TypedOutput typedOutput31 = request26.body;
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(typedOutput31);
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.lang.String str13 = request4.url;
        java.lang.String str14 = request4.method;
        retrofit.mime.TypedOutput typedOutput15 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.headers;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "", headerList19, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.headers;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.headers(headerList22);
        java.util.List<retrofit.client.Header> headerList24 = requestBuilder1.headers;
        java.lang.String str25 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.converter.Converter converter33 = requestBuilder32.getconverter();
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.client.Header[] headerArray38 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList39 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList39, headerArray38);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList39, typedOutput41);
        requestBuilder35.setheaders((java.util.List<retrofit.client.Header>) headerList39);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.converter.Converter converter49 = requestBuilder48.getconverter();
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder48.headers;
        requestBuilder48.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList55 = null;
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("", "", headerList55, typedOutput56);
        java.lang.String str58 = request57.getUrl();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder48, request57 };
        requestBuilder35.setargs(objArray59);
        java.lang.Object[] objArray61 = requestBuilder35.getargs();
        retrofit.RequestBuilder requestBuilder62 = requestBuilder32.args(objArray61);
        java.lang.String str63 = requestBuilder32.getapiUrl();
        java.lang.String str64 = requestBuilder32.apiUrl;
        retrofit.RequestBuilder requestBuilder66 = requestBuilder32.apiUrl("");
        java.lang.Object[] objArray67 = new java.lang.Object[] {};
        requestBuilder32.setargs(objArray67);
        requestBuilder1.setargs(objArray67);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNotNull(headerArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNull(headerList50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        java.lang.Object[] objArray39 = requestBuilder13.args;
        requestBuilder11.args = objArray39;
        requestBuilder11.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder11.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNull(headerList43);
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.lang.String str13 = request6.url;
        java.lang.String str14 = request6.url;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        java.lang.String str16 = request6.getMethod();
        java.lang.String str17 = request6.method;
        retrofit.mime.TypedOutput typedOutput18 = request6.body;
        retrofit.mime.TypedOutput typedOutput19 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNull(typedOutput19);
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        retrofit.RequestBuilder requestBuilder59 = requestBuilder32.apiUrl("");
        java.lang.Object[] objArray60 = requestBuilder59.getargs();
        requestBuilder30.args = objArray60;
        retrofit.converter.Converter converter62 = requestBuilder30.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(requestBuilder59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNull(converter62);
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        retrofit.converter.Converter converter16 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("");
        requestBuilder1.apiUrl = "";
        java.lang.Object[] objArray22 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList23 = requestBuilder1.headers;
        retrofit.converter.Converter converter24 = requestBuilder1.converter;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(objArray22);
        org.junit.Assert.assertNull(headerList23);
        org.junit.Assert.assertNull(converter24);
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        requestBuilder13.apiUrl = "";
        retrofit.RequestBuilder requestBuilder42 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        retrofit.mime.TypedOutput typedOutput51 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder44.setheaders(headerList52);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder13.headers(headerList52);
        requestBuilder1.headers = headerList52;
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        java.lang.String str61 = request60.url;
        java.util.List<retrofit.client.Header> headerList62 = request60.getHeaders();
        requestBuilder1.headers = headerList62;
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder66 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder68 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter69 = requestBuilder68.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request70 = requestBuilder68.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNotNull(headerList64);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNotNull(requestBuilder68);
        org.junit.Assert.assertNull(converter69);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        java.lang.String str17 = request12.method;
        java.util.List<retrofit.client.Header> headerList18 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = request12.getBody();
        java.lang.String str20 = request12.url;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.lang.String str33 = requestBuilder1.getapiUrl();
        retrofit.client.Header[] headerArray36 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList37 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList37, headerArray36);
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList37, typedOutput39);
        retrofit.mime.TypedOutput typedOutput41 = request40.getBody();
        java.lang.String str42 = request40.url;
        retrofit.mime.TypedOutput typedOutput43 = request40.getBody();
        java.lang.String str44 = request40.getUrl();
        retrofit.mime.TypedOutput typedOutput45 = request40.getBody();
        java.util.List<retrofit.client.Header> headerList46 = request40.getHeaders();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.headers(headerList46);
        java.lang.Class<?> wildcardClass48 = headerList46.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(headerArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(typedOutput45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder42.apiUrl("");
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder42.headers;
        requestBuilder1.setheaders(headerList70);
        java.lang.String str72 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray73 = requestBuilder1.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.method;
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        requestBuilder1.apiUrl = "";
        java.lang.Object[] objArray43 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(headerList44);
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = requestBuilder12.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput15 = requestBuilder12.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(converter14);
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        java.lang.String str58 = requestBuilder32.getapiUrl();
        java.lang.Object[] objArray59 = requestBuilder32.args;
        retrofit.RequestBuilder requestBuilder60 = requestBuilder30.args(objArray59);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder30.apiUrl("hi!");
        java.lang.Object[] objArray63 = requestBuilder30.args;
        java.lang.Object[] objArray64 = requestBuilder30.args;
        java.lang.Object[] objArray65 = requestBuilder30.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(objArray65);
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "", headerList44, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "", headerList44, typedOutput49);
        java.util.List<retrofit.client.Header> headerList51 = request50.getHeaders();
        java.lang.String str52 = request50.method;
        java.lang.String str53 = request50.method;
        retrofit.mime.TypedOutput typedOutput54 = request50.body;
        retrofit.mime.TypedOutput typedOutput55 = request50.body;
        retrofit.mime.TypedOutput typedOutput56 = request50.getBody();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNull(typedOutput56);
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.util.List<retrofit.client.Header> headerList36 = request33.getHeaders();
        java.util.List<retrofit.client.Header> headerList37 = request33.getHeaders();
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.lang.String str11 = request4.getMethod();
        java.lang.String str12 = request4.url;
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList18 = null;
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = request20.getBody();
        retrofit.mime.TypedOutput typedOutput22 = request20.getBody();
        java.lang.String str23 = request20.getMethod();
        java.lang.String str24 = request20.method;
        java.lang.String str25 = request20.method;
        java.util.List<retrofit.client.Header> headerList26 = request20.headers;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "hi!", headerList26, typedOutput27);
        requestBuilder1.setheaders(headerList26);
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter32 = requestBuilder1.converter;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(converter32);
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.lang.String str16 = request14.url;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.Object[] objArray74 = requestBuilder1.getargs();
        java.lang.String str75 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList78 = requestBuilder1.headers;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(headerList78);
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        requestBuilder8.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder8.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request12 = requestBuilder8.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList11);
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "", headerList8, typedOutput9);
        java.lang.Class<?> wildcardClass11 = request10.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        java.lang.String str12 = requestBuilder1.apiUrl;
        java.lang.String str13 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder1.headers;
        requestBuilder1.apiUrl = "";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.util.List<retrofit.client.Header> headerList5 = request4.getHeaders();
        java.lang.String str6 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(headerList7);
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.String str27 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray28 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objArray28);
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        retrofit.converter.Converter converter31 = requestBuilder1.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request32 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNull(converter31);
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "", headerList42, typedOutput45);
        java.util.List<retrofit.client.Header> headerList47 = request46.getHeaders();
        java.lang.String str48 = request46.method;
        java.util.List<retrofit.client.Header> headerList49 = request46.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(headerList49);
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        requestBuilder17.apiUrl = "";
        retrofit.RequestBuilder requestBuilder46 = requestBuilder17.apiUrl("hi!");
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        retrofit.mime.TypedOutput typedOutput54 = request53.getBody();
        retrofit.mime.TypedOutput typedOutput55 = request53.getBody();
        java.util.List<retrofit.client.Header> headerList56 = request53.headers;
        requestBuilder48.setheaders(headerList56);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder17.headers(headerList56);
        retrofit.RequestBuilder requestBuilder59 = requestBuilder1.headers(headerList56);
        java.lang.Object[] objArray60 = requestBuilder1.getargs();
        java.lang.Object[] objArray61 = null;
        requestBuilder1.args = objArray61;
        retrofit.converter.Converter converter63 = requestBuilder1.converter;
        java.lang.String str64 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder67 = requestBuilder1.apiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNotNull(requestBuilder59);
        org.junit.Assert.assertNull(objArray60);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(headerList65);
        org.junit.Assert.assertNotNull(requestBuilder67);
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        java.lang.String str26 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder1.headers;
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.client.Header[] headerArray33 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList34 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList34, headerArray33);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList34, typedOutput36);
        requestBuilder30.setheaders((java.util.List<retrofit.client.Header>) headerList34);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        requestBuilder43.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = null;
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        java.lang.String str53 = request52.getUrl();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder43, request52 };
        requestBuilder30.setargs(objArray54);
        requestBuilder30.apiUrl = "";
        retrofit.RequestBuilder requestBuilder59 = requestBuilder30.apiUrl("hi!");
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        java.util.List<retrofit.client.Header> headerList64 = null;
        retrofit.mime.TypedOutput typedOutput65 = null;
        retrofit.client.Request request66 = new retrofit.client.Request("", "", headerList64, typedOutput65);
        retrofit.mime.TypedOutput typedOutput67 = request66.getBody();
        retrofit.mime.TypedOutput typedOutput68 = request66.getBody();
        java.util.List<retrofit.client.Header> headerList69 = request66.headers;
        requestBuilder61.setheaders(headerList69);
        retrofit.RequestBuilder requestBuilder71 = requestBuilder30.headers(headerList69);
        java.lang.Object[] objArray72 = requestBuilder30.getargs();
        java.lang.String str73 = requestBuilder30.getapiUrl();
        java.util.List<retrofit.client.Header> headerList74 = requestBuilder30.getheaders();
        retrofit.RequestBuilder requestBuilder75 = requestBuilder1.headers(headerList74);
        java.lang.Object[] objArray76 = requestBuilder1.getargs();
        java.lang.String str77 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray78 = requestBuilder1.args;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(headerList27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertNotNull(headerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(requestBuilder59);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNull(typedOutput68);
        org.junit.Assert.assertNotNull(headerList69);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(headerList74);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(objArray78);
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.method;
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.util.List<retrofit.client.Header> headerList36 = request33.getHeaders();
        java.lang.String str37 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        java.util.List<retrofit.client.Header> headerList73 = requestBuilder72.headers;
        retrofit.RequestBuilder requestBuilder75 = requestBuilder72.apiUrl("");
        requestBuilder72.apiUrl = "hi!";
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(headerList73);
        org.junit.Assert.assertNotNull(requestBuilder75);
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.headers;
        retrofit.mime.TypedOutput typedOutput82 = request80.body;
        java.lang.String str83 = request80.url;
        retrofit.mime.TypedOutput typedOutput84 = request80.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request80.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        java.lang.String str37 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        java.lang.String str40 = requestBuilder39.apiUrl;
        java.util.List<retrofit.client.Header> headerList41 = requestBuilder39.headers;
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        requestBuilder43.apiUrl = "";
        retrofit.RequestBuilder requestBuilder72 = requestBuilder43.apiUrl("hi!");
        retrofit.converter.Converter converter73 = null;
        retrofit.RequestBuilder requestBuilder74 = new retrofit.RequestBuilder(converter73);
        java.util.List<retrofit.client.Header> headerList77 = null;
        retrofit.mime.TypedOutput typedOutput78 = null;
        retrofit.client.Request request79 = new retrofit.client.Request("", "", headerList77, typedOutput78);
        retrofit.mime.TypedOutput typedOutput80 = request79.getBody();
        retrofit.mime.TypedOutput typedOutput81 = request79.getBody();
        java.util.List<retrofit.client.Header> headerList82 = request79.headers;
        requestBuilder74.setheaders(headerList82);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder43.headers(headerList82);
        java.lang.Object[] objArray85 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder87 = requestBuilder43.apiUrl("hi!");
        java.lang.Object[] objArray88 = new java.lang.Object[] {};
        requestBuilder43.args = objArray88;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder39.args(objArray88);
        requestBuilder1.setargs(objArray88);
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(headerList41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(typedOutput80);
        org.junit.Assert.assertNull(typedOutput81);
        org.junit.Assert.assertNotNull(headerList82);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(requestBuilder90);
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter11 = requestBuilder1.converter;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        requestBuilder15.setheaders((java.util.List<retrofit.client.Header>) headerList19);
        java.lang.String str24 = requestBuilder15.getapiUrl();
        java.util.List<retrofit.client.Header> headerList25 = requestBuilder15.getheaders();
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder15.headers;
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder15.getheaders();
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "hi!", headerList27, typedOutput28);
        java.util.List<retrofit.client.Header> headerList30 = request29.headers;
        requestBuilder1.setheaders(headerList30);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNotNull(headerList27);
        org.junit.Assert.assertNotNull(headerList30);
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.method;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        requestBuilder13.apiUrl = "";
        retrofit.RequestBuilder requestBuilder42 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        retrofit.mime.TypedOutput typedOutput51 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder44.setheaders(headerList52);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder13.headers(headerList52);
        requestBuilder1.headers = headerList52;
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        java.lang.String str61 = request60.url;
        java.util.List<retrofit.client.Header> headerList62 = request60.getHeaders();
        requestBuilder1.headers = headerList62;
        retrofit.converter.Converter converter64 = requestBuilder1.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNull(converter64);
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray15 = requestBuilder3.getargs();
        retrofit.converter.Converter converter16 = requestBuilder3.getconverter();
        java.lang.Object[] objArray17 = requestBuilder3.getargs();
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.converter.Converter converter33 = requestBuilder32.getconverter();
        java.util.List<retrofit.client.Header> headerList34 = requestBuilder32.headers;
        requestBuilder32.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        java.lang.String str42 = request41.getUrl();
        java.lang.Object[] objArray43 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder32, request41 };
        requestBuilder19.setargs(objArray43);
        requestBuilder19.apiUrl = "";
        retrofit.RequestBuilder requestBuilder48 = requestBuilder19.apiUrl("hi!");
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        java.util.List<retrofit.client.Header> headerList53 = null;
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "", headerList53, typedOutput54);
        retrofit.mime.TypedOutput typedOutput56 = request55.getBody();
        retrofit.mime.TypedOutput typedOutput57 = request55.getBody();
        java.util.List<retrofit.client.Header> headerList58 = request55.headers;
        requestBuilder50.setheaders(headerList58);
        retrofit.RequestBuilder requestBuilder60 = requestBuilder19.headers(headerList58);
        retrofit.RequestBuilder requestBuilder61 = requestBuilder3.headers(headerList58);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList58, typedOutput62);
        java.lang.String str64 = request63.getUrl();
        retrofit.mime.TypedOutput typedOutput65 = request63.getBody();
        java.lang.String str66 = request63.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(objArray17);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(headerList34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertNull(typedOutput56);
        org.junit.Assert.assertNull(typedOutput57);
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(requestBuilder61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        retrofit.mime.TypedOutput typedOutput14 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request4.headers;
        java.lang.String str16 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        java.lang.Class<?> wildcardClass14 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList42, typedOutput43);
        retrofit.mime.TypedOutput typedOutput45 = request44.getBody();
        retrofit.mime.TypedOutput typedOutput46 = request44.getBody();
        java.util.List<retrofit.client.Header> headerList47 = request44.headers;
        requestBuilder39.setheaders(headerList47);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.converter.Converter converter51 = requestBuilder50.getconverter();
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder50.headers;
        retrofit.converter.Converter converter56 = null;
        retrofit.RequestBuilder requestBuilder57 = new retrofit.RequestBuilder(converter56);
        retrofit.client.Header[] headerArray60 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList61 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList61, headerArray60);
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList61, typedOutput63);
        requestBuilder57.setheaders((java.util.List<retrofit.client.Header>) headerList61);
        java.util.List<retrofit.client.Header> headerList68 = null;
        retrofit.mime.TypedOutput typedOutput69 = null;
        retrofit.client.Request request70 = new retrofit.client.Request("", "", headerList68, typedOutput69);
        java.lang.String str71 = request70.getUrl();
        retrofit.mime.TypedOutput typedOutput72 = request70.body;
        java.lang.Object[] objArray73 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder57, typedOutput72 };
        requestBuilder50.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder75 = requestBuilder39.args(objArray73);
        requestBuilder35.setargs(objArray73);
        retrofit.converter.Converter converter77 = requestBuilder35.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(typedOutput45);
        org.junit.Assert.assertNull(typedOutput46);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNull(headerList52);
        org.junit.Assert.assertNotNull(headerArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNull(typedOutput72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(converter77);
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        java.lang.String str13 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("", "", headerList9, typedOutput10);
        java.lang.String str12 = request11.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request11.getBody();
        java.lang.String str14 = request11.getMethod();
        java.util.List<retrofit.client.Header> headerList15 = request11.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = request11.body;
        java.util.List<retrofit.client.Header> headerList17 = request11.headers;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        retrofit.client.Header[] headerArray36 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList37 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList37, headerArray36);
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList37, typedOutput39);
        requestBuilder33.setheaders((java.util.List<retrofit.client.Header>) headerList37);
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.converter.Converter converter47 = requestBuilder46.getconverter();
        java.util.List<retrofit.client.Header> headerList48 = requestBuilder46.headers;
        requestBuilder46.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList53 = null;
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "", headerList53, typedOutput54);
        java.lang.String str56 = request55.getUrl();
        java.lang.Object[] objArray57 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder46, request55 };
        requestBuilder33.setargs(objArray57);
        requestBuilder33.apiUrl = "";
        retrofit.RequestBuilder requestBuilder62 = requestBuilder33.apiUrl("hi!");
        retrofit.converter.Converter converter63 = null;
        retrofit.RequestBuilder requestBuilder64 = new retrofit.RequestBuilder(converter63);
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        retrofit.mime.TypedOutput typedOutput70 = request69.getBody();
        retrofit.mime.TypedOutput typedOutput71 = request69.getBody();
        java.util.List<retrofit.client.Header> headerList72 = request69.headers;
        requestBuilder64.setheaders(headerList72);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder33.headers(headerList72);
        java.lang.Object[] objArray75 = requestBuilder33.getargs();
        java.util.List<retrofit.client.Header> headerList76 = requestBuilder33.headers;
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder33.getheaders();
        retrofit.RequestBuilder requestBuilder78 = requestBuilder31.headers(headerList77);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(headerArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertNull(headerList48);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNull(typedOutput70);
        org.junit.Assert.assertNull(typedOutput71);
        org.junit.Assert.assertNotNull(headerList72);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(requestBuilder78);
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        java.util.List<retrofit.client.Header> headerList36 = request35.getHeaders();
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "hi!", headerList36, typedOutput37);
        java.util.List<retrofit.client.Header> headerList39 = request38.getHeaders();
        java.lang.String str40 = request38.method;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput46 = requestBuilder45.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(requestBuilder45);
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        requestBuilder13.apiUrl = "";
        retrofit.RequestBuilder requestBuilder42 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        retrofit.mime.TypedOutput typedOutput51 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder44.setheaders(headerList52);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder13.headers(headerList52);
        requestBuilder1.headers = headerList52;
        retrofit.converter.Converter converter56 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(headerList58);
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder29.apiUrl("");
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder29.headers;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.headers(headerList57);
        java.lang.String str61 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder1.headers;
        retrofit.converter.Converter converter63 = requestBuilder1.converter;
        retrofit.converter.Converter converter64 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.util.List<retrofit.client.Header> headerList70 = request69.getHeaders();
        java.lang.String str71 = request69.getMethod();
        java.lang.String str72 = request69.url;
        java.util.List<retrofit.client.Header> headerList73 = request69.getHeaders();
        retrofit.RequestBuilder requestBuilder74 = requestBuilder1.headers(headerList73);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(requestBuilder74);
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.method;
        java.util.List<retrofit.client.Header> headerList12 = request10.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "", headerList12, typedOutput15);
        java.lang.String str17 = request16.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "", headerList42, typedOutput45);
        java.lang.String str47 = request46.method;
        java.lang.String str48 = request46.url;
        retrofit.mime.TypedOutput typedOutput49 = request46.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(typedOutput49);
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        requestBuilder35.setapiUrl("");
        requestBuilder35.setapiUrl("hi!");
        java.lang.Object[] objArray42 = new java.lang.Object[] {};
        retrofit.RequestBuilder requestBuilder43 = requestBuilder35.args(objArray42);
        retrofit.RequestBuilder requestBuilder45 = requestBuilder43.apiUrl("hi!");
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        requestBuilder47.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder47.headers;
        java.util.List<retrofit.client.Header> headerList76 = requestBuilder47.headers;
        retrofit.converter.Converter converter77 = requestBuilder47.getconverter();
        retrofit.RequestBuilder requestBuilder79 = requestBuilder47.apiUrl("hi!");
        requestBuilder79.setapiUrl("hi!");
        java.lang.Object[] objArray82 = requestBuilder79.getargs();
        requestBuilder45.args = objArray82;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNotNull(requestBuilder79);
        org.junit.Assert.assertNotNull(objArray82);
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        java.lang.String str4 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "hi!", headerList33, typedOutput34);
        java.util.List<retrofit.client.Header> headerList36 = request35.getHeaders();
        java.lang.String str37 = request35.getMethod();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        java.util.List<retrofit.client.Header> headerList39 = request35.getHeaders();
        java.util.List<retrofit.client.Header> headerList40 = request35.getHeaders();
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", headerList40, typedOutput41);
        java.lang.String str43 = request42.getUrl();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.lang.String str30 = requestBuilder3.apiUrl;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.client.Header[] headerArray53 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList54 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList54, headerArray53);
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList54, typedOutput56);
        requestBuilder50.setheaders((java.util.List<retrofit.client.Header>) headerList54);
        java.util.List<retrofit.client.Header> headerList61 = null;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList61, typedOutput62);
        java.lang.String str64 = request63.getUrl();
        retrofit.mime.TypedOutput typedOutput65 = request63.body;
        java.lang.Object[] objArray66 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder50, typedOutput65 };
        requestBuilder43.setargs(objArray66);
        retrofit.RequestBuilder requestBuilder68 = requestBuilder32.args(objArray66);
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder68.headers;
        requestBuilder3.headers = headerList69;
        retrofit.mime.TypedOutput typedOutput71 = null;
        retrofit.client.Request request72 = new retrofit.client.Request("hi!", "", headerList69, typedOutput71);
        java.lang.String str73 = request72.url;
        java.util.List<retrofit.client.Header> headerList74 = request72.getHeaders();
        java.lang.String str75 = request72.method;
        java.lang.String str76 = request72.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertNotNull(headerArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder68);
        org.junit.Assert.assertNotNull(headerList69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(headerList74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder37.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(headerList38);
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.method;
        java.lang.String str12 = request6.method;
        java.lang.String str13 = request6.method;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        java.lang.String str8 = requestBuilder7.apiUrl;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.converter.Converter converter11 = requestBuilder10.getconverter();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        java.lang.Object[] objArray39 = requestBuilder13.getargs();
        retrofit.RequestBuilder requestBuilder40 = requestBuilder10.args(objArray39);
        requestBuilder7.setargs(objArray39);
        requestBuilder1.setargs(objArray39);
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request44 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNull(headerList43);
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = request6.body;
        java.lang.String str14 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput15 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(typedOutput15);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.url;
        java.lang.String str12 = request6.getMethod();
        java.lang.String str13 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", headerList14, typedOutput15);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", headerList33, typedOutput36);
        java.lang.String str38 = request37.getMethod();
        java.lang.String str39 = request37.method;
        retrofit.mime.TypedOutput typedOutput40 = request37.getBody();
        java.lang.String str41 = request37.getMethod();
        java.lang.String str42 = request37.method;
        java.lang.String str43 = request37.url;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        requestBuilder3.apiUrl = "";
        java.lang.String str6 = requestBuilder3.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput7 = requestBuilder3.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        java.lang.String str8 = requestBuilder7.apiUrl;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.converter.Converter converter11 = requestBuilder10.getconverter();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        java.lang.Object[] objArray39 = requestBuilder13.getargs();
        retrofit.RequestBuilder requestBuilder40 = requestBuilder10.args(objArray39);
        requestBuilder7.setargs(objArray39);
        requestBuilder1.setargs(objArray39);
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder1.getheaders();
        java.lang.Class<?> wildcardClass44 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.Object[] objArray4 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.converter.Converter converter9 = requestBuilder8.getconverter();
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        requestBuilder11.setheaders((java.util.List<retrofit.client.Header>) headerList15);
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.converter.Converter converter25 = requestBuilder24.getconverter();
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder24.headers;
        requestBuilder24.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder24, request33 };
        requestBuilder11.setargs(objArray35);
        java.lang.Object[] objArray37 = requestBuilder11.getargs();
        retrofit.RequestBuilder requestBuilder38 = requestBuilder8.args(objArray37);
        requestBuilder38.setapiUrl("");
        retrofit.converter.Converter converter41 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder38.getheaders();
        java.lang.String str43 = requestBuilder38.apiUrl;
        java.lang.Object[] objArray44 = requestBuilder38.getargs();
        requestBuilder1.setargs(objArray44);
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = null;
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        java.lang.String str53 = request52.url;
        java.lang.String str54 = request52.url;
        java.util.List<retrofit.client.Header> headerList55 = request52.headers;
        requestBuilder1.setheaders(headerList55);
        java.lang.String str57 = requestBuilder1.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request58 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(headerList26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(headerList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(headerList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray46 = new java.lang.Object[] {};
        requestBuilder1.args = objArray46;
        java.lang.Object[] objArray48 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "hi!";
        retrofit.converter.Converter converter51 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder1.getheaders();
        requestBuilder1.apiUrl = "";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNotNull(headerList52);
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder3.getheaders();
        java.lang.String str13 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder15 = requestBuilder3.apiUrl("");
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.url;
        java.lang.String str23 = request21.url;
        java.lang.String str24 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request21.body;
        java.util.List<retrofit.client.Header> headerList26 = request21.headers;
        retrofit.RequestBuilder requestBuilder27 = requestBuilder15.headers(headerList26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "", headerList26, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Class<?> wildcardClass31 = request29.getClass();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(requestBuilder15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNotNull(requestBuilder27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        requestBuilder37.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder41 = requestBuilder37.apiUrl("");
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        java.lang.Object[] objArray72 = requestBuilder46.getargs();
        retrofit.RequestBuilder requestBuilder73 = requestBuilder43.args(objArray72);
        java.lang.String str74 = requestBuilder43.getapiUrl();
        java.lang.String str75 = requestBuilder43.apiUrl;
        retrofit.RequestBuilder requestBuilder77 = requestBuilder43.apiUrl("");
        java.lang.Object[] objArray78 = new java.lang.Object[] {};
        requestBuilder43.setargs(objArray78);
        java.util.List<retrofit.client.Header> headerList82 = null;
        retrofit.mime.TypedOutput typedOutput83 = null;
        retrofit.client.Request request84 = new retrofit.client.Request("", "", headerList82, typedOutput83);
        java.lang.String str85 = request84.getUrl();
        retrofit.mime.TypedOutput typedOutput86 = request84.body;
        java.util.List<retrofit.client.Header> headerList87 = request84.getHeaders();
        java.util.List<retrofit.client.Header> headerList88 = request84.getHeaders();
        requestBuilder43.setheaders(headerList88);
        java.util.List<retrofit.client.Header> headerList90 = requestBuilder43.getheaders();
        java.lang.Object[] objArray91 = requestBuilder43.getargs();
        java.lang.Object[] objArray92 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder93 = requestBuilder41.args(objArray92);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(requestBuilder41);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(requestBuilder73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(requestBuilder77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertNotNull(headerList87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNotNull(headerList90);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(requestBuilder93);
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = requestBuilder1.converter;
        retrofit.converter.Converter converter33 = requestBuilder1.converter;
        requestBuilder1.setapiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(converter33);
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList13 = null;
        requestBuilder1.headers = headerList13;
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        requestBuilder17.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder17.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder17.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        java.lang.String str78 = requestBuilder49.getapiUrl();
        java.lang.Object[] objArray79 = requestBuilder49.getargs();
        requestBuilder47.args = objArray79;
        requestBuilder1.setargs(objArray79);
        java.util.List<retrofit.client.Header> headerList82 = requestBuilder1.headers;
        java.lang.String str83 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList84 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNull(headerList82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(headerList84);
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput40);
        java.lang.String str42 = request41.method;
        java.lang.String str43 = request41.getUrl();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        java.lang.String str45 = request41.url;
        retrofit.mime.TypedOutput typedOutput46 = request41.body;
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(typedOutput46);
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.RequestBuilder requestBuilder37 = requestBuilder34.apiUrl("");
        requestBuilder34.setapiUrl("");
        requestBuilder34.setapiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput42 = requestBuilder34.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(requestBuilder37);
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.lang.String str13 = request4.url;
        java.lang.String str14 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        retrofit.converter.Converter converter43 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList48 = null;
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("", "", headerList48, typedOutput49);
        java.lang.String str51 = request50.url;
        java.util.List<retrofit.client.Header> headerList52 = request50.getHeaders();
        requestBuilder1.headers = headerList52;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(headerList52);
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.method;
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        java.lang.String str11 = request6.url;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = request14.body;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput15);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.lang.String str12 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter13 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter14 = requestBuilder1.converter;
        java.lang.String str15 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.url;
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.method;
        java.lang.Class<?> wildcardClass11 = request4.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request6.body;
        java.lang.String str13 = request6.url;
        java.util.List<retrofit.client.Header> headerList14 = request6.headers;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        java.util.List<retrofit.client.Header> headerList14 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList17, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.headers;
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", headerList20, typedOutput21);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList20);
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.headers;
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "", headerList11, typedOutput12);
        java.util.List<retrofit.client.Header> headerList14 = request13.headers;
        java.util.List<retrofit.client.Header> headerList15 = request13.headers;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.method;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.lang.String str11 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.lang.String str13 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.getMethod();
        java.lang.String str38 = request33.method;
        java.lang.String str39 = request33.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.lang.String str13 = request12.url;
        java.util.List<retrofit.client.Header> headerList14 = request12.headers;
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.lang.Object[] objArray4 = requestBuilder3.args;
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.converter.Converter converter7 = requestBuilder6.getconverter();
        java.util.List<retrofit.client.Header> headerList8 = requestBuilder6.headers;
        requestBuilder6.setapiUrl("hi!");
        retrofit.converter.Converter converter11 = requestBuilder6.converter;
        retrofit.RequestBuilder requestBuilder13 = requestBuilder6.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder15 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder17.getheaders();
        java.lang.String str27 = requestBuilder17.getapiUrl();
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        requestBuilder29.apiUrl = "";
        retrofit.RequestBuilder requestBuilder58 = requestBuilder29.apiUrl("hi!");
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        retrofit.mime.TypedOutput typedOutput66 = request65.getBody();
        retrofit.mime.TypedOutput typedOutput67 = request65.getBody();
        java.util.List<retrofit.client.Header> headerList68 = request65.headers;
        requestBuilder60.setheaders(headerList68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder29.headers(headerList68);
        requestBuilder17.headers = headerList68;
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.url;
        java.util.List<retrofit.client.Header> headerList78 = request76.getHeaders();
        requestBuilder17.headers = headerList78;
        retrofit.RequestBuilder requestBuilder80 = requestBuilder13.headers(headerList78);
        requestBuilder3.headers = headerList78;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList78, typedOutput82);
        java.lang.String str84 = request83.getUrl();
        java.lang.String str85 = request83.method;
        java.lang.String str86 = request83.getUrl();
        java.lang.String str87 = request83.getMethod();
        java.util.List<retrofit.client.Header> headerList88 = request83.headers;
        java.lang.String str89 = request83.getMethod();
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(headerList8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNotNull(requestBuilder15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        retrofit.converter.Converter converter12 = requestBuilder11.getconverter();
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.client.Header[] headerArray17 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList18 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList18, headerArray17);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList18, typedOutput20);
        requestBuilder14.setheaders((java.util.List<retrofit.client.Header>) headerList18);
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        retrofit.converter.Converter converter28 = requestBuilder27.getconverter();
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder27.headers;
        requestBuilder27.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList34 = null;
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList34, typedOutput35);
        java.lang.String str37 = request36.getUrl();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder27, request36 };
        requestBuilder14.setargs(objArray38);
        java.lang.Object[] objArray40 = requestBuilder14.getargs();
        retrofit.RequestBuilder requestBuilder41 = requestBuilder11.args(objArray40);
        requestBuilder41.setapiUrl("");
        java.lang.Object[] objArray44 = null;
        retrofit.RequestBuilder requestBuilder45 = requestBuilder41.args(objArray44);
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.converter.Converter converter48 = requestBuilder47.getconverter();
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.client.Header[] headerArray53 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList54 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList54, headerArray53);
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList54, typedOutput56);
        requestBuilder50.setheaders((java.util.List<retrofit.client.Header>) headerList54);
        retrofit.converter.Converter converter62 = null;
        retrofit.RequestBuilder requestBuilder63 = new retrofit.RequestBuilder(converter62);
        retrofit.converter.Converter converter64 = requestBuilder63.getconverter();
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder63.headers;
        requestBuilder63.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList70 = null;
        retrofit.mime.TypedOutput typedOutput71 = null;
        retrofit.client.Request request72 = new retrofit.client.Request("", "", headerList70, typedOutput71);
        java.lang.String str73 = request72.getUrl();
        java.lang.Object[] objArray74 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder63, request72 };
        requestBuilder50.setargs(objArray74);
        java.lang.Object[] objArray76 = requestBuilder50.getargs();
        retrofit.RequestBuilder requestBuilder77 = requestBuilder47.args(objArray76);
        java.lang.String str78 = requestBuilder47.getapiUrl();
        java.lang.String str79 = requestBuilder47.apiUrl;
        retrofit.RequestBuilder requestBuilder81 = requestBuilder47.apiUrl("");
        java.lang.Object[] objArray82 = new java.lang.Object[] {};
        requestBuilder47.setargs(objArray82);
        java.util.List<retrofit.client.Header> headerList86 = null;
        retrofit.mime.TypedOutput typedOutput87 = null;
        retrofit.client.Request request88 = new retrofit.client.Request("", "", headerList86, typedOutput87);
        java.lang.String str89 = request88.getUrl();
        retrofit.mime.TypedOutput typedOutput90 = request88.body;
        java.util.List<retrofit.client.Header> headerList91 = request88.getHeaders();
        java.util.List<retrofit.client.Header> headerList92 = request88.getHeaders();
        requestBuilder47.setheaders(headerList92);
        java.util.List<retrofit.client.Header> headerList94 = requestBuilder47.getheaders();
        java.lang.Object[] objArray95 = requestBuilder47.getargs();
        java.lang.Object[] objArray96 = requestBuilder47.getargs();
        requestBuilder41.args = objArray96;
        requestBuilder1.setargs(objArray96);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request99 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNotNull(headerArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNull(headerList29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(requestBuilder41);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNotNull(headerArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(headerList65);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(requestBuilder77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNull(typedOutput90);
        org.junit.Assert.assertNotNull(headerList91);
        org.junit.Assert.assertNotNull(headerList92);
        org.junit.Assert.assertNotNull(headerList94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        requestBuilder35.setapiUrl("");
        java.lang.String str40 = requestBuilder35.apiUrl;
        retrofit.RequestBuilder requestBuilder42 = requestBuilder35.apiUrl("hi!");
        java.lang.String str43 = requestBuilder42.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        requestBuilder13.setapiUrl("hi!");
        retrofit.converter.Converter converter16 = requestBuilder13.getconverter();
        java.lang.Object[] objArray17 = requestBuilder13.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request18 = requestBuilder13.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(objArray17);
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.method;
        java.lang.Class<?> wildcardClass10 = request6.getClass();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        java.lang.String str82 = request80.getUrl();
        java.util.List<retrofit.client.Header> headerList83 = request80.getHeaders();
        java.util.List<retrofit.client.Header> headerList84 = request80.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertNotNull(headerList84);
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder29.apiUrl("");
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder29.headers;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.headers(headerList57);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput62 = requestBuilder60.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNull(converter61);
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = request6.body;
        java.lang.String str14 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList15 = request6.headers;
        java.lang.String str16 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder1.apiUrl("");
        requestBuilder86.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder90 = requestBuilder86.apiUrl("hi!");
        requestBuilder90.apiUrl = "";
        java.lang.Object[] objArray93 = requestBuilder90.getargs();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput94 = requestBuilder90.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(objArray93);
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "hi!", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = request13.body;
        retrofit.mime.TypedOutput typedOutput15 = request13.getBody();
        java.lang.String str16 = request13.url;
        java.lang.String str17 = request13.getUrl();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.lang.Object[] objArray4 = requestBuilder3.args;
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.converter.Converter converter7 = requestBuilder6.getconverter();
        java.util.List<retrofit.client.Header> headerList8 = requestBuilder6.headers;
        requestBuilder6.setapiUrl("hi!");
        retrofit.converter.Converter converter11 = requestBuilder6.converter;
        retrofit.RequestBuilder requestBuilder13 = requestBuilder6.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder15 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder17.getheaders();
        java.lang.String str27 = requestBuilder17.getapiUrl();
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        requestBuilder29.apiUrl = "";
        retrofit.RequestBuilder requestBuilder58 = requestBuilder29.apiUrl("hi!");
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        retrofit.mime.TypedOutput typedOutput66 = request65.getBody();
        retrofit.mime.TypedOutput typedOutput67 = request65.getBody();
        java.util.List<retrofit.client.Header> headerList68 = request65.headers;
        requestBuilder60.setheaders(headerList68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder29.headers(headerList68);
        requestBuilder17.headers = headerList68;
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.url;
        java.util.List<retrofit.client.Header> headerList78 = request76.getHeaders();
        requestBuilder17.headers = headerList78;
        retrofit.RequestBuilder requestBuilder80 = requestBuilder13.headers(headerList78);
        requestBuilder3.headers = headerList78;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList78, typedOutput82);
        java.lang.String str84 = request83.getUrl();
        java.util.List<retrofit.client.Header> headerList85 = request83.headers;
        java.util.List<retrofit.client.Header> headerList86 = request83.getHeaders();
        java.lang.String str87 = request83.url;
        retrofit.mime.TypedOutput typedOutput88 = request83.body;
        retrofit.mime.TypedOutput typedOutput89 = request83.body;
        java.lang.String str90 = request83.url;
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(headerList8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNotNull(requestBuilder15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(headerList86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(typedOutput88);
        org.junit.Assert.assertNull(typedOutput89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        java.lang.String str41 = request33.url;
        java.util.List<retrofit.client.Header> headerList42 = request33.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(headerList42);
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.lang.String str11 = request10.url;
        java.lang.String str12 = request10.url;
        java.util.List<retrofit.client.Header> headerList13 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "hi!", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList13, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList13, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = request19.getBody();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput20);
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.Object[] objArray28 = null;
        requestBuilder1.args = objArray28;
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        requestBuilder1.apiUrl = "";
        java.lang.Class<?> wildcardClass33 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray32 = requestBuilder1.args;
        java.lang.String str33 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.apiUrl("");
        requestBuilder37.apiUrl = "hi!";
        java.lang.String str40 = requestBuilder37.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.url;
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("hi!");
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        retrofit.RequestBuilder requestBuilder75 = requestBuilder8.headers(headerList73);
        java.lang.Object[] objArray76 = requestBuilder8.args;
        retrofit.converter.Converter converter79 = null;
        retrofit.RequestBuilder requestBuilder80 = new retrofit.RequestBuilder(converter79);
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        retrofit.mime.TypedOutput typedOutput86 = request85.getBody();
        retrofit.mime.TypedOutput typedOutput87 = request85.getBody();
        java.util.List<retrofit.client.Header> headerList88 = request85.headers;
        requestBuilder80.setheaders(headerList88);
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("hi!", "hi!", headerList88, typedOutput90);
        java.lang.String str92 = request91.url;
        java.util.List<retrofit.client.Header> headerList93 = request91.headers;
        java.util.List<retrofit.client.Header> headerList94 = request91.headers;
        retrofit.RequestBuilder requestBuilder95 = requestBuilder8.headers(headerList94);
        retrofit.converter.Converter converter96 = requestBuilder95.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(objArray76);
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNotNull(headerList93);
        org.junit.Assert.assertNotNull(headerList94);
        org.junit.Assert.assertNotNull(requestBuilder95);
        org.junit.Assert.assertNull(converter96);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request23.body;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder10, typedOutput25 };
        requestBuilder3.setargs(objArray26);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        requestBuilder44.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        java.lang.Object[] objArray55 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder44, request53 };
        requestBuilder31.setargs(objArray55);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder31.apiUrl("");
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder31.headers;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder3.headers(headerList59);
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "hi!", headerList59, typedOutput63);
        java.lang.String str65 = request64.getMethod();
        java.util.List<retrofit.client.Header> headerList66 = request64.headers;
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(headerList66);
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("hi!");
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        retrofit.RequestBuilder requestBuilder75 = requestBuilder8.headers(headerList73);
        java.lang.Object[] objArray76 = requestBuilder8.args;
        retrofit.converter.Converter converter79 = null;
        retrofit.RequestBuilder requestBuilder80 = new retrofit.RequestBuilder(converter79);
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        retrofit.mime.TypedOutput typedOutput86 = request85.getBody();
        retrofit.mime.TypedOutput typedOutput87 = request85.getBody();
        java.util.List<retrofit.client.Header> headerList88 = request85.headers;
        requestBuilder80.setheaders(headerList88);
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("hi!", "hi!", headerList88, typedOutput90);
        java.lang.String str92 = request91.url;
        java.util.List<retrofit.client.Header> headerList93 = request91.headers;
        java.util.List<retrofit.client.Header> headerList94 = request91.headers;
        retrofit.RequestBuilder requestBuilder95 = requestBuilder8.headers(headerList94);
        requestBuilder95.setapiUrl("hi!");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(objArray76);
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNotNull(headerList93);
        org.junit.Assert.assertNotNull(headerList94);
        org.junit.Assert.assertNotNull(requestBuilder95);
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.lang.String str10 = request6.getMethod();
        java.lang.String str11 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.lang.String str13 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.String str36 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter14 = requestBuilder1.converter;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(converter14);
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.lang.String str42 = requestBuilder37.apiUrl;
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder37.headers;
        java.lang.String str44 = requestBuilder37.getapiUrl();
        java.lang.String str45 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        java.lang.String str73 = requestBuilder47.getapiUrl();
        retrofit.client.Header[] headerArray76 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList77 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList77, headerArray76);
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        requestBuilder47.setheaders(headerList81);
        java.lang.Object[] objArray83 = requestBuilder47.getargs();
        retrofit.RequestBuilder requestBuilder84 = requestBuilder37.args(objArray83);
        requestBuilder1.setargs(objArray83);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(headerArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(requestBuilder87);
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.headers;
        retrofit.mime.TypedOutput typedOutput35 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList36 = request33.headers;
        java.lang.String str37 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.Object[] objArray30 = requestBuilder1.args;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        requestBuilder1.setargs(objArray56);
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList65 = null;
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("", "", headerList65, typedOutput66);
        retrofit.mime.TypedOutput typedOutput68 = request67.getBody();
        retrofit.mime.TypedOutput typedOutput69 = request67.getBody();
        java.util.List<retrofit.client.Header> headerList70 = request67.headers;
        java.util.List<retrofit.client.Header> headerList71 = request67.getHeaders();
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("hi!", "hi!", headerList71, typedOutput72);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder1.headers(headerList71);
        java.util.List<retrofit.client.Header> headerList77 = null;
        retrofit.mime.TypedOutput typedOutput78 = null;
        retrofit.client.Request request79 = new retrofit.client.Request("", "", headerList77, typedOutput78);
        retrofit.mime.TypedOutput typedOutput80 = request79.getBody();
        java.lang.String str81 = request79.url;
        java.lang.String str82 = request79.url;
        java.lang.String str83 = request79.url;
        java.lang.String str84 = request79.method;
        java.util.List<retrofit.client.Header> headerList85 = request79.headers;
        retrofit.RequestBuilder requestBuilder86 = requestBuilder74.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder74.apiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNull(typedOutput68);
        org.junit.Assert.assertNull(typedOutput69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(headerList71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNull(typedOutput80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(requestBuilder88);
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        requestBuilder1.apiUrl = "hi!";
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.lang.String str39 = request38.url;
        java.lang.String str40 = request38.url;
        java.lang.String str41 = request38.method;
        java.util.List<retrofit.client.Header> headerList42 = request38.headers;
        retrofit.RequestBuilder requestBuilder43 = requestBuilder1.headers(headerList42);
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList48 = null;
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("", "", headerList48, typedOutput49);
        retrofit.mime.TypedOutput typedOutput51 = request50.getBody();
        java.lang.String str52 = request50.getMethod();
        java.lang.String str53 = request50.getMethod();
        java.util.List<retrofit.client.Header> headerList54 = request50.getHeaders();
        requestBuilder45.headers = headerList54;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(headerList54);
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        java.lang.String str35 = requestBuilder34.getapiUrl();
        retrofit.converter.Converter converter36 = requestBuilder34.converter;
        retrofit.RequestBuilder requestBuilder38 = requestBuilder34.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder40 = requestBuilder34.apiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNotNull(requestBuilder38);
        org.junit.Assert.assertNotNull(requestBuilder40);
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput36 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList37 = request33.headers;
        java.util.List<retrofit.client.Header> headerList38 = request33.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.apiUrl("");
        java.lang.String str61 = requestBuilder60.apiUrl;
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = requestBuilder60.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(headerList62);
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.method;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        retrofit.converter.Converter converter43 = requestBuilder1.converter;
        retrofit.converter.Converter converter44 = requestBuilder1.converter;
        java.lang.Object[] objArray45 = null;
        retrofit.RequestBuilder requestBuilder46 = requestBuilder1.args(objArray45);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNotNull(requestBuilder46);
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.method;
        java.lang.String str8 = request6.method;
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.method;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        java.util.List<retrofit.client.Header> headerList82 = request80.getHeaders();
        java.util.List<retrofit.client.Header> headerList83 = request80.headers;
        java.lang.Class<?> wildcardClass84 = request80.getClass();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNotNull(headerList82);
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("");
        retrofit.converter.Converter converter34 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder31.getheaders();
        retrofit.RequestBuilder requestBuilder37 = requestBuilder31.apiUrl("");
        java.lang.Object[] objArray38 = requestBuilder37.getargs();
        retrofit.RequestBuilder requestBuilder40 = requestBuilder37.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request41 = requestBuilder40.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(requestBuilder40);
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("hi!");
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        retrofit.RequestBuilder requestBuilder75 = requestBuilder8.headers(headerList73);
        java.lang.String str76 = requestBuilder8.getapiUrl();
        java.lang.Object[] objArray77 = requestBuilder8.getargs();
        java.util.List<retrofit.client.Header> headerList78 = requestBuilder8.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNull(objArray77);
        org.junit.Assert.assertNotNull(headerList78);
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.headers;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        java.util.List<retrofit.client.Header> headerList18 = request17.getHeaders();
        java.lang.String str19 = request17.method;
        java.lang.String str20 = request17.method;
        retrofit.mime.TypedOutput typedOutput21 = request17.getBody();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNull(typedOutput21);
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList33, typedOutput36);
        java.lang.String str38 = request37.method;
        java.lang.String str39 = request37.url;
        java.lang.String str40 = request37.getUrl();
        java.lang.String str41 = request37.method;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder52.apiUrl("");
        java.lang.String str55 = requestBuilder54.getapiUrl();
        java.lang.Object[] objArray56 = requestBuilder54.args;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.body;
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        retrofit.converter.Converter converter38 = requestBuilder35.converter;
        retrofit.RequestBuilder requestBuilder40 = requestBuilder35.apiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(requestBuilder40);
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder1.headers;
        retrofit.converter.Converter converter45 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder49 = requestBuilder1.apiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(requestBuilder49);
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getUrl();
        java.lang.Class<?> wildcardClass13 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request7 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(objArray6);
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.util.List<retrofit.client.Header> headerList36 = request33.getHeaders();
        java.lang.String str37 = request33.getUrl();
        java.util.List<retrofit.client.Header> headerList38 = request33.getHeaders();
        retrofit.mime.TypedOutput typedOutput39 = request33.getBody();
        java.lang.String str40 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        java.lang.String str17 = request12.getUrl();
        retrofit.mime.TypedOutput typedOutput18 = request12.getBody();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(typedOutput18);
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.lang.String str14 = request4.getUrl();
        java.lang.String str15 = request4.url;
        retrofit.mime.TypedOutput typedOutput16 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        java.lang.String str18 = request14.method;
        retrofit.mime.TypedOutput typedOutput19 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput20 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput21 = request14.body;
        retrofit.mime.TypedOutput typedOutput22 = request14.body;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request43 = requestBuilder42.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.getheaders();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(objArray6);
        org.junit.Assert.assertNull(headerList7);
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder58 = requestBuilder1.apiUrl("");
        java.lang.String str59 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder61 = requestBuilder1.apiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(requestBuilder61);
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.url;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.lang.String str13 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request6.headers;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.lang.String str18 = request16.method;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.getUrl();
        java.lang.String str9 = request6.method;
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "", headerList11, typedOutput12);
        java.util.List<retrofit.client.Header> headerList14 = request13.headers;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.getHeaders();
        java.lang.String str35 = request33.getMethod();
        java.util.List<retrofit.client.Header> headerList36 = request33.headers;
        java.lang.String str37 = request33.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.headers;
        retrofit.mime.TypedOutput typedOutput82 = request80.body;
        java.lang.String str83 = request80.url;
        retrofit.mime.TypedOutput typedOutput84 = request80.getBody();
        retrofit.mime.TypedOutput typedOutput85 = request80.body;
        java.lang.String str86 = request80.method;
        java.util.List<retrofit.client.Header> headerList87 = request80.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNull(typedOutput85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(headerList87);
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = null;
        requestBuilder1.headers = headerList3;
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder1.headers;
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNull(converter6);
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        java.lang.String str15 = request4.method;
        java.lang.String str16 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList17 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        java.lang.String str82 = request80.url;
        java.util.List<retrofit.client.Header> headerList83 = request80.getHeaders();
        java.util.List<retrofit.client.Header> headerList84 = request80.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertNotNull(headerList84);
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        java.lang.Object[] objArray48 = new java.lang.Object[] {};
        requestBuilder3.args = objArray48;
        java.lang.Object[] objArray50 = requestBuilder3.getargs();
        requestBuilder3.apiUrl = "hi!";
        retrofit.converter.Converter converter53 = requestBuilder3.converter;
        java.util.List<retrofit.client.Header> headerList54 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "hi!", headerList54, typedOutput55);
        java.lang.String str57 = request56.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder3.getheaders();
        java.lang.String str13 = requestBuilder3.getapiUrl();
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        requestBuilder15.setheaders((java.util.List<retrofit.client.Header>) headerList19);
        retrofit.converter.Converter converter27 = null;
        retrofit.RequestBuilder requestBuilder28 = new retrofit.RequestBuilder(converter27);
        retrofit.converter.Converter converter29 = requestBuilder28.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder28.headers;
        requestBuilder28.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        java.lang.String str38 = request37.getUrl();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder28, request37 };
        requestBuilder15.setargs(objArray39);
        requestBuilder15.apiUrl = "";
        retrofit.RequestBuilder requestBuilder44 = requestBuilder15.apiUrl("hi!");
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.getBody();
        retrofit.mime.TypedOutput typedOutput53 = request51.getBody();
        java.util.List<retrofit.client.Header> headerList54 = request51.headers;
        requestBuilder46.setheaders(headerList54);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder15.headers(headerList54);
        requestBuilder3.headers = headerList54;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList54, typedOutput58);
        java.lang.String str60 = request59.url;
        java.lang.String str61 = request59.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(headerList30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.method;
        java.lang.String str8 = request6.method;
        java.lang.String str9 = request6.method;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.args;
        java.lang.String str7 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
        org.junit.Assert.assertNull(objArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder62 = requestBuilder60.apiUrl("");
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNull(converter63);
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.method;
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.method;
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        retrofit.mime.TypedOutput typedOutput66 = request64.body;
        java.lang.Object[] objArray67 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder51, typedOutput66 };
        requestBuilder44.setargs(objArray67);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder33.args(objArray67);
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder69.headers;
        retrofit.RequestBuilder requestBuilder71 = requestBuilder1.headers(headerList70);
        retrofit.converter.Converter converter72 = requestBuilder71.converter;
        retrofit.RequestBuilder requestBuilder74 = requestBuilder71.apiUrl("");
        java.lang.Object[] objArray75 = requestBuilder74.getargs();
        java.util.List<retrofit.client.Header> headerList76 = requestBuilder74.headers;
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder74.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(headerList77);
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        retrofit.RequestBuilder requestBuilder16 = requestBuilder13.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder18 = requestBuilder13.apiUrl("hi!");
        java.lang.Object[] objArray19 = requestBuilder18.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertNotNull(requestBuilder18);
        org.junit.Assert.assertNull(objArray19);
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.client.Header[] headerArray59 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList60 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList60, headerArray59);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList60, typedOutput62);
        requestBuilder56.setheaders((java.util.List<retrofit.client.Header>) headerList60);
        java.lang.String str65 = requestBuilder56.getapiUrl();
        retrofit.RequestBuilder requestBuilder67 = requestBuilder56.apiUrl("");
        java.util.List<retrofit.client.Header> headerList70 = null;
        retrofit.mime.TypedOutput typedOutput71 = null;
        retrofit.client.Request request72 = new retrofit.client.Request("", "", headerList70, typedOutput71);
        java.lang.String str73 = request72.url;
        java.util.List<retrofit.client.Header> headerList74 = request72.getHeaders();
        java.util.List<retrofit.client.Header> headerList75 = request72.getHeaders();
        requestBuilder56.headers = headerList75;
        retrofit.mime.TypedOutput typedOutput77 = null;
        retrofit.client.Request request78 = new retrofit.client.Request("", "", headerList75, typedOutput77);
        java.lang.String str79 = request78.getMethod();
        retrofit.mime.TypedOutput typedOutput80 = request78.getBody();
        java.lang.String str81 = request78.url;
        retrofit.mime.TypedOutput typedOutput82 = request78.getBody();
        java.util.List<retrofit.client.Header> headerList83 = request78.getHeaders();
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.headers(headerList83);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(headerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(requestBuilder67);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(headerList74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNull(typedOutput80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertNotNull(requestBuilder84);
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.headers;
        java.lang.String str11 = request6.method;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }
}

