/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 08 23:42:32 GMT 2021
 */

package retrofit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonNull;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import retrofit.RequestBuilder;
import retrofit.RestMethodInfo;
import retrofit.SerializedObjectSupporter;
import retrofit.client.Header;
import retrofit.client.Request;
import retrofit.converter.Converter;
import retrofit.converter.GsonConverter;
import retrofit.mime.FormUrlEncodedTypedOutput;
import retrofit.mime.TypedOutput;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RequestBuilder_ESTest extends RequestBuilder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      requestBuilder0.setmethodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      
      String string0 = "Body must not e nul.";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertEquals("Body must not e nul.", requestBuilder0.getapiUrl());
      assertEquals("Body must not e nul.", requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      Object[] objectArray0 = requestBuilder0.getargs();
      assertEquals("Body must not e nul.", requestBuilder0.getapiUrl());
      assertNull(objectArray0);
      assertSame(requestBuilder0, requestBuilder1);
      
      // Undeclared exception!
      try { 
        requestBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter1();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = requestBuilder0.getapiUrl();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(string0);
      
      requestBuilder0.setargs(requestBuilder0.args);
      assertNull(requestBuilder0.getapiUrl());
      
      requestBuilder0.setapiUrl(requestBuilder0.apiUrl);
      assertNull(requestBuilder0.getapiUrl());
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      Gson gson0 = null;
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "KK~1CqT+p?FoC\"@fg/";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertEquals("KK~1CqT+p?FoC\"@fg/", requestBuilder0.getapiUrl());
      assertEquals("KK~1CqT+p?FoC\"@fg/", requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter6();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      Converter converter0 = requestBuilder0.getconverter();
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(converter0);
      assertSame(gsonConverter0, converter0);
      assertSame(converter0, gsonConverter0);
      
      List<Header> list0 = requestBuilder0.getheaders();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(list0);
      assertSame(gsonConverter0, converter0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.args(requestBuilder0.args);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(gsonConverter0, converter0);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      requestBuilder0.setheaders(requestBuilder0.headers);
      assertNull(requestBuilder0.getapiUrl());
      assertSame(gsonConverter0, converter0);
      assertSame(requestBuilder0, requestBuilder1);
      
      RestMethodInfo restMethodInfo0 = requestBuilder0.getmethodInfo();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(restMethodInfo0);
      assertSame(gsonConverter0, converter0);
      assertSame(requestBuilder0, requestBuilder1);
      
      RequestBuilder requestBuilder2 = requestBuilder1.headers(requestBuilder0.headers);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(gsonConverter0, converter0);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter2();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.methodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder1.buildBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.methodInfo(requestBuilder0.methodInfo);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder1.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      Converter converter1 = requestBuilder2.getconverter();
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder1.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertNull(converter1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter3();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      Object[] objectArray0 = null;
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.apiUrl(requestBuilder0.apiUrl);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      // Undeclared exception!
      try { 
        requestBuilder2.buildBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter1();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = ".";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertEquals(".", requestBuilder0.getapiUrl());
      assertEquals(".", requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.headers(requestBuilder0.headers);
      assertEquals(".", requestBuilder0.getapiUrl());
      assertEquals(".", requestBuilder1.getapiUrl());
      assertEquals(".", requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      RequestBuilder requestBuilder3 = requestBuilder2.headers(requestBuilder0.headers);
      assertEquals(".", requestBuilder0.getapiUrl());
      assertEquals(".", requestBuilder1.getapiUrl());
      assertEquals(".", requestBuilder2.getapiUrl());
      assertEquals(".", requestBuilder3.getapiUrl());
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder1);
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      JsonNull jsonNull0 = JsonNull.INSTANCE;
      assertTrue(jsonNull0.isJsonNull());
      assertFalse(jsonNull0.isJsonPrimitive());
      assertFalse(jsonNull0.isJsonArray());
      assertFalse(jsonNull0.isJsonObject());
      assertNotNull(jsonNull0);
      
      Class<String> class0 = String.class;
      String string0 = gson0.fromJson((JsonElement) jsonNull0, class0);
      assertTrue(jsonNull0.isJsonNull());
      assertFalse(jsonNull0.isJsonPrimitive());
      assertFalse(jsonNull0.isJsonArray());
      assertFalse(jsonNull0.isJsonObject());
      assertNull(string0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder0.buildRelativeUrl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "{";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertEquals("{", requestBuilder0.getapiUrl());
      assertEquals("{", requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.headers(requestBuilder0.headers);
      assertEquals("{", requestBuilder0.getapiUrl());
      assertEquals("{", requestBuilder1.getapiUrl());
      assertEquals("{", requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      RequestBuilder requestBuilder3 = requestBuilder2.args(requestBuilder0.args);
      assertEquals("{", requestBuilder0.getapiUrl());
      assertEquals("{", requestBuilder1.getapiUrl());
      assertEquals("{", requestBuilder2.getapiUrl());
      assertEquals("{", requestBuilder3.getapiUrl());
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder1);
      
      RestMethodInfo restMethodInfo0 = requestBuilder3.getmethodInfo();
      assertEquals("{", requestBuilder0.getapiUrl());
      assertEquals("{", requestBuilder1.getapiUrl());
      assertEquals("{", requestBuilder2.getapiUrl());
      assertEquals("{", requestBuilder3.getapiUrl());
      assertNull(restMethodInfo0);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder1);
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter6();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      Object[] objectArray0 = requestBuilder0.getargs();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(objectArray0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter3();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "' is not supported : ";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertEquals("' is not supported : ", requestBuilder0.getapiUrl());
      assertEquals("' is not supported : ", requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.headers(requestBuilder0.headers);
      assertEquals("' is not supported : ", requestBuilder0.getapiUrl());
      assertEquals("' is not supported : ", requestBuilder1.getapiUrl());
      assertEquals("' is not supported : ", requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      requestBuilder2.setheaders(requestBuilder0.headers);
      assertEquals("' is not supported : ", requestBuilder0.getapiUrl());
      assertEquals("' is not supported : ", requestBuilder1.getapiUrl());
      assertEquals("' is not supported : ", requestBuilder2.getapiUrl());
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      RestMethodInfo restMethodInfo0 = requestBuilder0.getmethodInfo();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(restMethodInfo0);
      
      Object[] objectArray0 = new Object[0];
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      requestBuilder1.args = objectArray0;
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      
      Object[] objectArray1 = requestBuilder1.getargs();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertEquals(0, objectArray1.length);
      assertNotNull(objectArray1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(objectArray0, objectArray1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(objectArray1, objectArray0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.headers(requestBuilder0.headers);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(objectArray0, objectArray1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      RequestBuilder requestBuilder3 = requestBuilder1.headers(requestBuilder2.headers);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(objectArray0, objectArray1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder2);
      
      // Undeclared exception!
      try { 
        requestBuilder1.buildRelativeUrl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.args(requestBuilder0.args);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder0.buildBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter2();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      List<Header> list0 = requestBuilder0.getheaders();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(list0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(list0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.args(requestBuilder0.args);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      requestBuilder2.setmethodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter3();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "QhE@kS@GPz_";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertEquals("QhE@kS@GPz_", requestBuilder0.getapiUrl());
      assertEquals("QhE@kS@GPz_", requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      String string1 = requestBuilder1.getapiUrl();
      assertEquals("QhE@kS@GPz_", string1);
      assertEquals("QhE@kS@GPz_", requestBuilder0.getapiUrl());
      assertEquals("QhE@kS@GPz_", requestBuilder1.getapiUrl());
      assertNotNull(string1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(string0, string1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(string1, string0);
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      Gson gson0 = null;
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.args(requestBuilder0.args);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      RequestBuilder requestBuilder3 = requestBuilder2.methodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      
      RequestBuilder requestBuilder4 = requestBuilder3.apiUrl(requestBuilder0.apiUrl);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertNotNull(requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder4.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "lvq;ZPHpCdKdj'_vX";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertEquals("lvq;ZPHpCdKdj'_vX", requestBuilder0.getapiUrl());
      assertEquals("lvq;ZPHpCdKdj'_vX", requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      requestBuilder1.setargs(requestBuilder0.args);
      assertEquals("lvq;ZPHpCdKdj'_vX", requestBuilder0.getapiUrl());
      assertEquals("lvq;ZPHpCdKdj'_vX", requestBuilder1.getapiUrl());
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter4();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[0] = object0;
      requestBuilder0.setargs(objectArray0);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.methodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      String string0 = "iCIu>lS[DaaOrM;D<q";
      RequestBuilder requestBuilder3 = requestBuilder2.apiUrl(string0);
      assertEquals("iCIu>lS[DaaOrM;D<q", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("iCIu>lS[DaaOrM;D<q", requestBuilder1.getapiUrl());
      assertEquals("iCIu>lS[DaaOrM;D<q", requestBuilder2.getapiUrl());
      assertEquals("iCIu>lS[DaaOrM;D<q", requestBuilder3.getapiUrl());
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      
      // Undeclared exception!
      try { 
        requestBuilder3.buildBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter4();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "5J";
      requestBuilder0.setapiUrl(string0);
      assertEquals("5J", requestBuilder0.getapiUrl());
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "k";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertEquals("k", requestBuilder0.getapiUrl());
      assertEquals("k", requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.args(requestBuilder0.args);
      assertEquals("k", requestBuilder0.getapiUrl());
      assertEquals("k", requestBuilder1.getapiUrl());
      assertEquals("k", requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      RequestBuilder requestBuilder3 = requestBuilder2.methodInfo(requestBuilder0.methodInfo);
      assertEquals("k", requestBuilder0.getapiUrl());
      assertEquals("k", requestBuilder1.getapiUrl());
      assertEquals("k", requestBuilder2.getapiUrl());
      assertEquals("k", requestBuilder3.getapiUrl());
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      
      RequestBuilder requestBuilder4 = requestBuilder2.headers(requestBuilder1.headers);
      assertEquals("k", requestBuilder0.getapiUrl());
      assertEquals("k", requestBuilder1.getapiUrl());
      assertEquals("k", requestBuilder2.getapiUrl());
      assertEquals("k", requestBuilder4.getapiUrl());
      assertNotNull(requestBuilder4);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder0);
      
      RequestBuilder requestBuilder5 = requestBuilder3.headers(requestBuilder0.headers);
      assertEquals("k", requestBuilder0.getapiUrl());
      assertEquals("k", requestBuilder1.getapiUrl());
      assertEquals("k", requestBuilder2.getapiUrl());
      assertEquals("k", requestBuilder3.getapiUrl());
      assertEquals("k", requestBuilder5.getapiUrl());
      assertNotNull(requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder2);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder3);
      
      // Undeclared exception!
      try { 
        requestBuilder5.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) gson0;
      objectArray0[1] = (Object) gsonConverter0;
      objectArray0[2] = (Object) requestBuilder0;
      objectArray0[3] = (Object) requestBuilder0;
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[4] = object0;
      objectArray0[5] = (Object) gson0;
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertEquals(6, objectArray0.length);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.methodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertEquals(6, objectArray0.length);
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      RequestBuilder requestBuilder3 = requestBuilder2.apiUrl(requestBuilder0.apiUrl);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertEquals(6, objectArray0.length);
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      
      Converter converter0 = requestBuilder3.getconverter();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertEquals(6, objectArray0.length);
      assertNotNull(converter0);
      assertSame(gsonConverter0, converter0);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(converter0, gsonConverter0);
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "com.google.gson.TypeAdapter";
      requestBuilder0.setapiUrl(string0);
      assertEquals("com.google.gson.TypeAdapter", requestBuilder0.getapiUrl());
      
      String string1 = null;
      String string2 = "b, 0%Uj!h,80T1t";
      requestBuilder0.setapiUrl(string2);
      assertEquals("b, 0%Uj!h,80T1t", requestBuilder0.getapiUrl());
      assertFalse(string2.equals((Object)string0));
      assertNotSame(string2, string0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string1);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder0.methodInfo(requestBuilder1.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      Converter converter1 = requestBuilder1.getconverter();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(converter1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder3 = requestBuilder0.args(requestBuilder1.args);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      
      Object[] objectArray0 = requestBuilder3.getargs();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNull(objectArray0);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      
      RequestBuilder requestBuilder4 = requestBuilder2.apiUrl(string0);
      assertEquals("com.google.gson.TypeAdapter", requestBuilder0.getapiUrl());
      assertEquals("com.google.gson.TypeAdapter", requestBuilder1.getapiUrl());
      assertEquals("com.google.gson.TypeAdapter", requestBuilder2.getapiUrl());
      assertEquals("com.google.gson.TypeAdapter", requestBuilder4.getapiUrl());
      assertFalse(string0.equals((Object)string2));
      assertNotNull(requestBuilder4);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertNotSame(string0, string2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      
      // Undeclared exception!
      try { 
        requestBuilder4.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      requestBuilder1.setargs(requestBuilder0.args);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.methodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      RequestBuilder requestBuilder3 = requestBuilder1.methodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder2);
      
      RequestBuilder requestBuilder4 = requestBuilder2.args(requestBuilder0.args);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertNotNull(requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      
      requestBuilder0.methodInfo = requestBuilder3.methodInfo;
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      
      String string0 = "k;I|*<9~^&Zn/\"";
      requestBuilder4.setmethodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      
      requestBuilder4.setapiUrl(requestBuilder0.apiUrl);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      
      RequestBuilder requestBuilder5 = requestBuilder0.methodInfo(requestBuilder4.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertNull(requestBuilder5.getapiUrl());
      assertNotNull(requestBuilder5);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder2);
      
      requestBuilder2.apiUrl = string0;
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder2.getapiUrl());
      
      RequestBuilder requestBuilder6 = requestBuilder4.apiUrl(requestBuilder2.apiUrl);
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder2.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder4.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder6.getapiUrl());
      assertNotNull(requestBuilder6);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder6);
      assertSame(requestBuilder6, requestBuilder3);
      assertSame(requestBuilder6, requestBuilder5);
      assertSame(requestBuilder6, requestBuilder2);
      assertSame(requestBuilder6, requestBuilder4);
      assertSame(requestBuilder6, requestBuilder0);
      assertSame(requestBuilder6, requestBuilder1);
      
      TypedOutput typedOutput0 = gsonConverter0.toBody(requestBuilder1.apiUrl);
      assertEquals(28L, typedOutput0.length());
      assertNull(typedOutput0.fileName());
      assertEquals("application/json; charset=UTF-8", typedOutput0.mimeType());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertNotNull(typedOutput0);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder3);
      
      Object[] objectArray0 = requestBuilder6.getargs();
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder2.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder4.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder6.getapiUrl());
      assertNull(objectArray0);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder6);
      assertSame(requestBuilder6, requestBuilder3);
      assertSame(requestBuilder6, requestBuilder5);
      assertSame(requestBuilder6, requestBuilder2);
      assertSame(requestBuilder6, requestBuilder4);
      assertSame(requestBuilder6, requestBuilder0);
      assertSame(requestBuilder6, requestBuilder1);
      
      RequestBuilder requestBuilder7 = requestBuilder5.args(requestBuilder1.args);
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder7.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder2.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder4.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder5.getapiUrl());
      assertNotNull(requestBuilder7);
      assertSame(requestBuilder7, requestBuilder3);
      assertSame(requestBuilder7, requestBuilder1);
      assertSame(requestBuilder7, requestBuilder0);
      assertSame(requestBuilder7, requestBuilder2);
      assertSame(requestBuilder7, requestBuilder5);
      assertSame(requestBuilder7, requestBuilder6);
      assertSame(requestBuilder7, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder7);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder7);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder7);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder6);
      assertSame(requestBuilder4, requestBuilder7);
      assertSame(requestBuilder5, requestBuilder6);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder7);
      assertSame(requestBuilder5, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder2);
      
      requestBuilder5.apiUrl = requestBuilder6.apiUrl;
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder2.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder4.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder5.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder6.getapiUrl());
      
      Object[] objectArray1 = requestBuilder1.getargs();
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertNull(objectArray1);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder7);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder7);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder3);
      
      String string1 = requestBuilder2.getapiUrl();
      assertEquals("k;I|*<9~^&Zn/\"", string1);
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder2.getapiUrl());
      assertNotNull(string1);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder7);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder7);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(string1, string0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder7);
      assertSame(requestBuilder2, requestBuilder4);
      
      String string2 = requestBuilder4.getapiUrl();
      assertEquals("k;I|*<9~^&Zn/\"", string2);
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder2.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder4.getapiUrl());
      assertNotNull(string2);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder7);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder7);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(string2, string1);
      assertSame(string2, string0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder7);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder6);
      assertSame(requestBuilder4, requestBuilder7);
      
      RestMethodInfo restMethodInfo0 = requestBuilder5.getmethodInfo();
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder1.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder2.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder4.getapiUrl());
      assertEquals("k;I|*<9~^&Zn/\"", requestBuilder5.getapiUrl());
      assertNull(restMethodInfo0);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder7);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder7);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder7);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder6);
      assertSame(requestBuilder4, requestBuilder7);
      assertSame(requestBuilder5, requestBuilder6);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder7);
      assertSame(requestBuilder5, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder2);
      
      // Undeclared exception!
      try { 
        requestBuilder0.buildRelativeUrl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter4();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      List<Header> list0 = requestBuilder0.getheaders();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(list0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(list0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      String string0 = "Ps";
      requestBuilder1.setapiUrl(string0);
      assertEquals("Ps", requestBuilder0.getapiUrl());
      assertEquals("Ps", requestBuilder1.getapiUrl());
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter6();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = "Expected a name but was ";
      requestBuilder0.setapiUrl(string0);
      assertEquals("Expected a name but was ", requestBuilder0.getapiUrl());
      
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) gsonConverter0;
      String string1 = "";
      GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter4();
      assertNull(gsonConverter1);
      
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string1);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder1.getapiUrl());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertNotSame(string1, string0);
      assertSame(requestBuilder1, requestBuilder0);
      
      GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
      assertFalse(gsonConverter2.equals((Object)gsonConverter0));
      assertNotNull(gsonConverter2);
      assertNotSame(gsonConverter2, gsonConverter0);
      
      RequestBuilder requestBuilder2 = requestBuilder0.args(objectArray0);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals(1, objectArray0.length);
      assertFalse(gsonConverter0.equals((Object)gsonConverter2));
      assertNotNull(requestBuilder2);
      assertNotSame(gsonConverter0, gsonConverter2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      RequestBuilder requestBuilder3 = requestBuilder2.apiUrl(requestBuilder0.apiUrl);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals("", requestBuilder3.getapiUrl());
      assertEquals(1, objectArray0.length);
      assertFalse(gsonConverter0.equals((Object)gsonConverter2));
      assertNotNull(requestBuilder3);
      assertNotSame(gsonConverter0, gsonConverter2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      
      RequestBuilder requestBuilder4 = requestBuilder0.apiUrl(requestBuilder3.apiUrl);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals("", requestBuilder3.getapiUrl());
      assertEquals("", requestBuilder4.getapiUrl());
      assertEquals(1, objectArray0.length);
      assertFalse(gsonConverter0.equals((Object)gsonConverter2));
      assertNotNull(requestBuilder4);
      assertNotSame(gsonConverter0, gsonConverter2);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder1);
      
      String string2 = requestBuilder3.getapiUrl();
      assertEquals("", string2);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals("", requestBuilder3.getapiUrl());
      assertEquals(1, objectArray0.length);
      assertFalse(gsonConverter0.equals((Object)gsonConverter2));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertNotSame(gsonConverter0, gsonConverter2);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(string2, string1);
      assertNotSame(string2, string0);
      
      RequestBuilder requestBuilder5 = requestBuilder3.headers(requestBuilder2.headers);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals("", requestBuilder3.getapiUrl());
      assertEquals("", requestBuilder5.getapiUrl());
      assertEquals(1, objectArray0.length);
      assertFalse(gsonConverter0.equals((Object)gsonConverter2));
      assertNotNull(requestBuilder5);
      assertNotSame(gsonConverter0, gsonConverter2);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder2);
      
      requestBuilder3.setmethodInfo(requestBuilder0.methodInfo);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals("", requestBuilder3.getapiUrl());
      assertEquals(1, objectArray0.length);
      assertFalse(gsonConverter0.equals((Object)gsonConverter2));
      assertNotSame(gsonConverter0, gsonConverter2);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      
      String string3 = "";
      requestBuilder4.setapiUrl(string3);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals("", requestBuilder3.getapiUrl());
      assertEquals("", requestBuilder4.getapiUrl());
      assertEquals(1, objectArray0.length);
      assertFalse(string3.equals((Object)string0));
      assertFalse(gsonConverter0.equals((Object)gsonConverter2));
      assertNotSame(string3, string0);
      assertSame(string3, string2);
      assertSame(string3, string1);
      assertNotSame(gsonConverter0, gsonConverter2);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder1);
      
      // Undeclared exception!
      try { 
        requestBuilder4.buildRelativeUrl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      GsonConverter gsonConverter0 = serializedObjectSupporter0.deserializeObjectConverter2();
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = null;
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      requestBuilder1.methodInfo = requestBuilder0.methodInfo;
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      
      RequestBuilder requestBuilder2 = requestBuilder1.headers(requestBuilder0.headers);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      requestBuilder2.setheaders(linkedList0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      List<Header> list0 = requestBuilder2.getheaders();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotNull(list0);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      TypedOutput typedOutput0 = gsonConverter0.toBody(gson0);
      assertEquals("application/json; charset=UTF-8", typedOutput0.mimeType());
      assertEquals(3075L, typedOutput0.length());
      assertNull(typedOutput0.fileName());
      assertNotNull(typedOutput0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) gson0;
      objectArray0[1] = (Object) gsonConverter0;
      objectArray0[2] = (Object) requestBuilder0;
      objectArray0[3] = (Object) gsonConverter0;
      objectArray0[4] = (Object) requestBuilder0;
      objectArray0[5] = (Object) gson0;
      objectArray0[6] = (Object) gson0;
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertEquals(7, objectArray0.length);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      String string0 = "";
      RequestBuilder requestBuilder2 = requestBuilder1.apiUrl(string0);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder1.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals(7, objectArray0.length);
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      RequestBuilder requestBuilder3 = requestBuilder2.methodInfo(requestBuilder1.methodInfo);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder1.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals("", requestBuilder3.getapiUrl());
      assertEquals(7, objectArray0.length);
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder1);
      
      Object[] objectArray1 = requestBuilder3.getargs();
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder1.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals("", requestBuilder3.getapiUrl());
      assertEquals(7, objectArray1.length);
      assertEquals(7, objectArray0.length);
      assertNotNull(objectArray1);
      assertSame(objectArray1, objectArray0);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(objectArray0, objectArray1);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder1);
      
      requestBuilder3.setapiUrl(requestBuilder1.apiUrl);
      assertEquals("", requestBuilder0.getapiUrl());
      assertEquals("", requestBuilder1.getapiUrl());
      assertEquals("", requestBuilder2.getapiUrl());
      assertEquals("", requestBuilder3.getapiUrl());
      assertEquals(7, objectArray0.length);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(objectArray0, objectArray1);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder1);
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      String string0 = requestBuilder0.getapiUrl();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        requestBuilder0.buildRelativeUrl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      String string0 = "{";
      RequestBuilder requestBuilder2 = requestBuilder0.methodInfo(requestBuilder1.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      requestBuilder2.methodInfo = requestBuilder1.methodInfo;
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      
      Header header0 = new Header(string0, requestBuilder0.apiUrl);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals("{", header0.getName());
      assertNull(header0.getValue());
      assertNotNull(header0);
      
      String string1 = header0.toString();
      assertEquals("{: ", string1);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals("{", header0.getName());
      assertNull(header0.getValue());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      boolean boolean0 = linkedList0.add(header0);
      assertTrue(boolean0);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(1, linkedList0.size());
      assertEquals("{", header0.getName());
      assertNull(header0.getValue());
      assertTrue(linkedList0.contains(header0));
      assertFalse(string0.equals((Object)string1));
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertNotSame(string0, string1);
      
      RequestBuilder requestBuilder3 = requestBuilder1.headers(linkedList0);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(1, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertTrue(linkedList0.contains(header0));
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder2);
      
      RequestBuilder requestBuilder4 = requestBuilder1.methodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(1, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertTrue(linkedList0.contains(header0));
      assertNotNull(requestBuilder4);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder3);
      
      RequestBuilder requestBuilder5 = requestBuilder4.args(requestBuilder1.args);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(1, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertNull(requestBuilder5.getapiUrl());
      assertTrue(linkedList0.contains(header0));
      assertNotNull(requestBuilder5);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder2);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder1);
      
      String string2 = null;
      requestBuilder5.setapiUrl(string2);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(1, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertNull(requestBuilder5.getapiUrl());
      assertTrue(linkedList0.contains(header0));
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder2);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder1);
      
      RequestBuilder requestBuilder6 = requestBuilder0.headers(requestBuilder4.headers);
      assertNull(requestBuilder6.getapiUrl());
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(1, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertTrue(linkedList0.contains(header0));
      assertNotNull(requestBuilder6);
      assertSame(requestBuilder6, requestBuilder5);
      assertSame(requestBuilder6, requestBuilder0);
      assertSame(requestBuilder6, requestBuilder3);
      assertSame(requestBuilder6, requestBuilder4);
      assertSame(requestBuilder6, requestBuilder1);
      assertSame(requestBuilder6, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder6);
      
      List<Header> list0 = requestBuilder4.getheaders();
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(1, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertTrue(list0.contains(header0));
      assertTrue(linkedList0.contains(header0));
      assertNotNull(list0);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder6);
      
      String string3 = "OTd`{{kF\\0P8|gtY)\\j";
      String string4 = "{";
      requestBuilder2.setargs(requestBuilder3.args);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(1, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertTrue(linkedList0.contains(header0));
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder6);
      assertSame(requestBuilder3, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder4);
      
      requestBuilder3.apiUrl = string4;
      assertEquals("{", requestBuilder0.getapiUrl());
      assertEquals(1, linkedList0.size());
      assertEquals("{", requestBuilder1.getapiUrl());
      assertEquals("{", requestBuilder3.getapiUrl());
      
      String string5 = gson0.toString();
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      
      // Undeclared exception!
      try { 
        requestBuilder3.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      Gson gson0 = null;
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      requestBuilder0.apiUrl = requestBuilder1.apiUrl;
      assertNull(requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder1.getapiUrl());
      
      String string0 = "KK~1CqT+p?FoC\"@fg/";
      RequestBuilder requestBuilder2 = requestBuilder1.apiUrl(string0);
      assertEquals("KK~1CqT+p?FoC\"@fg/", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("KK~1CqT+p?FoC\"@fg/", requestBuilder1.getapiUrl());
      assertEquals("KK~1CqT+p?FoC\"@fg/", requestBuilder2.getapiUrl());
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      requestBuilder2.methodInfo = requestBuilder0.methodInfo;
      assertEquals("KK~1CqT+p?FoC\"@fg/", requestBuilder0.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertEquals("KK~1CqT+p?FoC\"@fg/", requestBuilder1.getapiUrl());
      assertEquals("KK~1CqT+p?FoC\"@fg/", requestBuilder2.getapiUrl());
      
      // Undeclared exception!
      try { 
        requestBuilder1.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      assertNull(requestBuilder0.getapiUrl());
      assertNotNull(requestBuilder0);
      
      Object[] objectArray0 = new Object[0];
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RequestBuilder requestBuilder2 = requestBuilder1.methodInfo(requestBuilder0.methodInfo);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      requestBuilder2.setargs(requestBuilder1.args);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      RequestBuilder requestBuilder3 = requestBuilder2.headers(requestBuilder0.headers);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder1);
      
      RequestBuilder requestBuilder4 = requestBuilder3.apiUrl(requestBuilder0.apiUrl);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder4);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder1);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      RequestBuilder requestBuilder5 = requestBuilder4.headers(linkedList0);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder5.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder5);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder2);
      
      RequestBuilder requestBuilder6 = requestBuilder1.args(requestBuilder2.args);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder6.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder6);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder6, requestBuilder4);
      assertSame(requestBuilder6, requestBuilder2);
      assertSame(requestBuilder6, requestBuilder3);
      assertSame(requestBuilder6, requestBuilder0);
      assertSame(requestBuilder6, requestBuilder5);
      assertSame(requestBuilder6, requestBuilder1);
      
      requestBuilder4.args = objectArray0;
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      
      requestBuilder4.setheaders(requestBuilder1.headers);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder6);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder6);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder1);
      
      RestMethodInfo restMethodInfo0 = requestBuilder4.getmethodInfo();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNull(restMethodInfo0);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder6);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder6);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder1);
      
      requestBuilder5.setapiUrl(requestBuilder4.apiUrl);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder2.getapiUrl());
      assertNull(requestBuilder3.getapiUrl());
      assertNull(requestBuilder4.getapiUrl());
      assertEquals(0, linkedList0.size());
      assertNull(requestBuilder5.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder6);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder5);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder6);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder5);
      assertSame(requestBuilder4, requestBuilder6);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder6);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder1);
      assertSame(requestBuilder5, requestBuilder2);
      
      RequestBuilder requestBuilder7 = requestBuilder1.args(requestBuilder0.args);
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertNull(requestBuilder7.getapiUrl());
      assertEquals(0, objectArray0.length);
      assertNotNull(requestBuilder7);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder7);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder7);
      assertSame(requestBuilder1, requestBuilder6);
      assertSame(requestBuilder7, requestBuilder6);
      assertSame(requestBuilder7, requestBuilder0);
      assertSame(requestBuilder7, requestBuilder1);
      assertSame(requestBuilder7, requestBuilder5);
      assertSame(requestBuilder7, requestBuilder2);
      assertSame(requestBuilder7, requestBuilder4);
      assertSame(requestBuilder7, requestBuilder3);
      
      FormUrlEncodedTypedOutput formUrlEncodedTypedOutput0 = new FormUrlEncodedTypedOutput();
      assertEquals(0L, formUrlEncodedTypedOutput0.length());
      assertEquals("application/x-www-form-urlencoded; charset=UTF-8", formUrlEncodedTypedOutput0.mimeType());
      assertNull(formUrlEncodedTypedOutput0.fileName());
      assertNotNull(formUrlEncodedTypedOutput0);
      
      Object[] objectArray1 = requestBuilder1.getargs();
      assertNull(requestBuilder0.getapiUrl());
      assertNull(requestBuilder1.getapiUrl());
      assertEquals(0, objectArray1.length);
      assertEquals(0, objectArray0.length);
      assertNotNull(objectArray1);
      assertSame(objectArray1, objectArray0);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder0, requestBuilder6);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder7);
      assertSame(objectArray0, objectArray1);
      assertSame(requestBuilder1, requestBuilder5);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder7);
      assertSame(requestBuilder1, requestBuilder6);
      
      // Undeclared exception!
      try { 
        requestBuilder4.buildRelativeUrl();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }
}
