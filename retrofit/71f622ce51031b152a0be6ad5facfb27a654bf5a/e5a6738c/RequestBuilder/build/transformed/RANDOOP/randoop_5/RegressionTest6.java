import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test3001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3001");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.util.List<retrofit.client.Header> headerList36 = request33.getHeaders();
        java.lang.String str37 = request33.getUrl();
        java.util.List<retrofit.client.Header> headerList38 = request33.getHeaders();
        retrofit.mime.TypedOutput typedOutput39 = request33.getBody();
        java.lang.String str40 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test3002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3002");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        java.lang.String str17 = request12.getUrl();
        retrofit.mime.TypedOutput typedOutput18 = request12.getBody();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(typedOutput18);
    }

    @Test
    public void test3003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3003");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.lang.String str14 = request4.getUrl();
        java.lang.String str15 = request4.url;
        retrofit.mime.TypedOutput typedOutput16 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test3004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3004");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        java.lang.String str18 = request14.method;
        retrofit.mime.TypedOutput typedOutput19 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput20 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput21 = request14.body;
        retrofit.mime.TypedOutput typedOutput22 = request14.body;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
    }

    @Test
    public void test3005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3005");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request43 = requestBuilder42.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
    }

    @Test
    public void test3006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3006");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.getheaders();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(objArray6);
        org.junit.Assert.assertNull(headerList7);
    }

    @Test
    public void test3007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3007");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder58 = requestBuilder1.apiUrl("");
        java.lang.String str59 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder61 = requestBuilder1.apiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(requestBuilder61);
    }

    @Test
    public void test3008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3008");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3009");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3010");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.url;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.lang.String str13 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request6.headers;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.lang.String str18 = request16.method;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test3011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3011");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test3012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3012");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.getUrl();
        java.lang.String str9 = request6.method;
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "", headerList11, typedOutput12);
        java.util.List<retrofit.client.Header> headerList14 = request13.headers;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test3013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3013");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.getHeaders();
        java.lang.String str35 = request33.getMethod();
        java.util.List<retrofit.client.Header> headerList36 = request33.headers;
        java.lang.String str37 = request33.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test3014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3014");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.headers;
        retrofit.mime.TypedOutput typedOutput82 = request80.body;
        java.lang.String str83 = request80.url;
        retrofit.mime.TypedOutput typedOutput84 = request80.getBody();
        retrofit.mime.TypedOutput typedOutput85 = request80.body;
        java.lang.String str86 = request80.method;
        java.util.List<retrofit.client.Header> headerList87 = request80.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNull(typedOutput85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(headerList87);
    }

    @Test
    public void test3015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3015");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test3016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3016");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = null;
        requestBuilder1.headers = headerList3;
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder1.headers;
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNull(converter6);
    }

    @Test
    public void test3017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3017");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        java.lang.String str15 = request4.method;
        java.lang.String str16 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList17 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test3018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3018");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        java.lang.String str82 = request80.url;
        java.util.List<retrofit.client.Header> headerList83 = request80.getHeaders();
        java.util.List<retrofit.client.Header> headerList84 = request80.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertNotNull(headerList84);
    }

    @Test
    public void test3019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3019");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        java.lang.Object[] objArray48 = new java.lang.Object[] {};
        requestBuilder3.args = objArray48;
        java.lang.Object[] objArray50 = requestBuilder3.getargs();
        requestBuilder3.apiUrl = "hi!";
        retrofit.converter.Converter converter53 = requestBuilder3.converter;
        java.util.List<retrofit.client.Header> headerList54 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "hi!", headerList54, typedOutput55);
        java.lang.String str57 = request56.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test3020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3020");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder3.getheaders();
        java.lang.String str13 = requestBuilder3.getapiUrl();
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        requestBuilder15.setheaders((java.util.List<retrofit.client.Header>) headerList19);
        retrofit.converter.Converter converter27 = null;
        retrofit.RequestBuilder requestBuilder28 = new retrofit.RequestBuilder(converter27);
        retrofit.converter.Converter converter29 = requestBuilder28.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder28.headers;
        requestBuilder28.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        java.lang.String str38 = request37.getUrl();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder28, request37 };
        requestBuilder15.setargs(objArray39);
        requestBuilder15.apiUrl = "";
        retrofit.RequestBuilder requestBuilder44 = requestBuilder15.apiUrl("hi!");
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.getBody();
        retrofit.mime.TypedOutput typedOutput53 = request51.getBody();
        java.util.List<retrofit.client.Header> headerList54 = request51.headers;
        requestBuilder46.setheaders(headerList54);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder15.headers(headerList54);
        requestBuilder3.headers = headerList54;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList54, typedOutput58);
        java.lang.String str60 = request59.url;
        java.lang.String str61 = request59.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(headerList30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test3021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3021");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.method;
        java.lang.String str8 = request6.method;
        java.lang.String str9 = request6.method;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test3022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3022");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.args;
        java.lang.String str7 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
        org.junit.Assert.assertNull(objArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test3023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3023");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder62 = requestBuilder60.apiUrl("");
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNull(converter63);
    }

    @Test
    public void test3024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3024");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
    }

    @Test
    public void test3025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3025");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.method;
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.method;
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test3026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3026");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        retrofit.mime.TypedOutput typedOutput66 = request64.body;
        java.lang.Object[] objArray67 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder51, typedOutput66 };
        requestBuilder44.setargs(objArray67);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder33.args(objArray67);
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder69.headers;
        retrofit.RequestBuilder requestBuilder71 = requestBuilder1.headers(headerList70);
        retrofit.converter.Converter converter72 = requestBuilder71.converter;
        retrofit.RequestBuilder requestBuilder74 = requestBuilder71.apiUrl("");
        java.lang.Object[] objArray75 = requestBuilder74.getargs();
        java.util.List<retrofit.client.Header> headerList76 = requestBuilder74.headers;
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder74.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(headerList77);
    }

    @Test
    public void test3027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3027");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        retrofit.RequestBuilder requestBuilder16 = requestBuilder13.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder18 = requestBuilder13.apiUrl("hi!");
        java.lang.Object[] objArray19 = requestBuilder18.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertNotNull(requestBuilder18);
        org.junit.Assert.assertNull(objArray19);
    }

    @Test
    public void test3028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3028");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.client.Header[] headerArray59 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList60 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList60, headerArray59);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList60, typedOutput62);
        requestBuilder56.setheaders((java.util.List<retrofit.client.Header>) headerList60);
        java.lang.String str65 = requestBuilder56.getapiUrl();
        retrofit.RequestBuilder requestBuilder67 = requestBuilder56.apiUrl("");
        java.util.List<retrofit.client.Header> headerList70 = null;
        retrofit.mime.TypedOutput typedOutput71 = null;
        retrofit.client.Request request72 = new retrofit.client.Request("", "", headerList70, typedOutput71);
        java.lang.String str73 = request72.url;
        java.util.List<retrofit.client.Header> headerList74 = request72.getHeaders();
        java.util.List<retrofit.client.Header> headerList75 = request72.getHeaders();
        requestBuilder56.headers = headerList75;
        retrofit.mime.TypedOutput typedOutput77 = null;
        retrofit.client.Request request78 = new retrofit.client.Request("", "", headerList75, typedOutput77);
        java.lang.String str79 = request78.getMethod();
        retrofit.mime.TypedOutput typedOutput80 = request78.getBody();
        java.lang.String str81 = request78.url;
        retrofit.mime.TypedOutput typedOutput82 = request78.getBody();
        java.util.List<retrofit.client.Header> headerList83 = request78.getHeaders();
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.headers(headerList83);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(headerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(requestBuilder67);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(headerList74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNull(typedOutput80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertNotNull(requestBuilder84);
    }

    @Test
    public void test3029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3029");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.headers;
        java.lang.String str11 = request6.method;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test3030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3030");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test3031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3031");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.url;
        java.lang.String str13 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3032");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.url;
        java.lang.String str10 = request8.url;
        retrofit.mime.TypedOutput typedOutput11 = request8.body;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput15);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test3033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3033");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        java.util.List<retrofit.client.Header> headerList36 = request35.getHeaders();
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "hi!", headerList36, typedOutput37);
        java.util.List<retrofit.client.Header> headerList39 = request38.getHeaders();
        java.lang.String str40 = request38.getUrl();
        java.lang.String str41 = request38.method;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test3034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3034");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.RequestBuilder requestBuilder39 = requestBuilder37.apiUrl("");
        java.lang.Object[] objArray40 = null;
        requestBuilder37.setargs(objArray40);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(requestBuilder39);
    }

    @Test
    public void test3035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3035");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        requestBuilder5.setheaders(headerList42);
        requestBuilder5.apiUrl = "";
        java.lang.Object[] objArray47 = requestBuilder5.args;
        java.util.List<retrofit.client.Header> headerList48 = requestBuilder5.getheaders();
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("", "", headerList48, typedOutput49);
        java.util.List<retrofit.client.Header> headerList51 = request50.headers;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "hi!", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    public void test3036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3036");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.url;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.getUrl();
        java.lang.String str14 = request4.getUrl();
        java.lang.String str15 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test3037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3037");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        requestBuilder13.setapiUrl("hi!");
        java.lang.String str16 = requestBuilder13.getapiUrl();
        java.lang.String str17 = requestBuilder13.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test3038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3038");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("hi!");
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        retrofit.mime.TypedOutput typedOutput41 = request40.getBody();
        java.lang.String str42 = request40.getMethod();
        java.lang.String str43 = request40.getUrl();
        retrofit.mime.TypedOutput typedOutput44 = request40.body;
        java.lang.String str45 = request40.method;
        java.util.List<retrofit.client.Header> headerList46 = request40.getHeaders();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder31.headers(headerList46);
        requestBuilder47.apiUrl = "";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
    }

    @Test
    public void test3039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3039");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter35 = requestBuilder1.converter;
        retrofit.converter.Converter converter36 = requestBuilder1.converter;
        requestBuilder1.setapiUrl("");
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(converter36);
    }

    @Test
    public void test3040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3040");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "";
        java.lang.String str14 = requestBuilder1.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request15 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3041");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        java.lang.String str16 = requestBuilder7.getapiUrl();
        retrofit.RequestBuilder requestBuilder18 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.url;
        java.util.List<retrofit.client.Header> headerList25 = request23.getHeaders();
        java.util.List<retrofit.client.Header> headerList26 = request23.getHeaders();
        requestBuilder7.headers = headerList26;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList26, typedOutput28);
        java.lang.String str30 = request29.getMethod();
        retrofit.mime.TypedOutput typedOutput31 = request29.getBody();
        java.util.List<retrofit.client.Header> headerList32 = request29.getHeaders();
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", headerList32, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList32, typedOutput35);
        java.lang.String str37 = request36.url;
        java.lang.String str38 = request36.method;
        java.lang.String str39 = request36.getMethod();
        retrofit.mime.TypedOutput typedOutput40 = request36.getBody();
        java.lang.String str41 = request36.getMethod();
        retrofit.mime.TypedOutput typedOutput42 = request36.getBody();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(requestBuilder18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(typedOutput42);
    }

    @Test
    public void test3042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3042");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3043");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.body;
        retrofit.mime.TypedOutput typedOutput19 = request17.getBody();
        java.lang.String str20 = request17.url;
        java.util.List<retrofit.client.Header> headerList21 = request17.headers;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(headerList21);
    }

    @Test
    public void test3044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3044");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput12);
        java.util.List<retrofit.client.Header> headerList14 = request13.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request13.headers;
        java.lang.String str16 = request13.getUrl();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test3045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3045");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder49 = requestBuilder47.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder47.headers;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder47.apiUrl("hi!");
        retrofit.converter.Converter converter53 = requestBuilder52.converter;
        java.lang.Object[] objArray54 = requestBuilder52.getargs();
        java.util.List<retrofit.client.Header> headerList55 = requestBuilder52.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(headerList50);
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(headerList55);
    }

    @Test
    public void test3046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3046");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        requestBuilder35.setapiUrl("");
        requestBuilder35.setapiUrl("hi!");
        java.lang.Object[] objArray42 = new java.lang.Object[] {};
        retrofit.RequestBuilder requestBuilder43 = requestBuilder35.args(objArray42);
        retrofit.RequestBuilder requestBuilder45 = requestBuilder43.apiUrl("hi!");
        java.lang.Object[] objArray46 = null;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder43.args(objArray46);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
    }

    @Test
    public void test3047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3047");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        java.lang.String str17 = request12.getUrl();
        java.lang.String str18 = request12.method;
        java.lang.String str19 = request12.url;
        retrofit.mime.TypedOutput typedOutput20 = request12.getBody();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(typedOutput20);
    }

    @Test
    public void test3048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3048");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.Object[] objArray30 = requestBuilder1.args;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        requestBuilder1.setargs(objArray56);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter61 = requestBuilder1.getconverter();
        retrofit.RequestBuilder requestBuilder63 = requestBuilder1.apiUrl("");
        java.lang.String str64 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test3049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3049");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.lang.String str13 = request6.url;
        java.lang.String str14 = request6.url;
        retrofit.mime.TypedOutput typedOutput15 = request6.body;
        retrofit.mime.TypedOutput typedOutput16 = request6.getBody();
        java.lang.String str17 = request6.method;
        java.lang.String str18 = request6.getMethod();
        java.lang.String str19 = request6.method;
        java.lang.String str20 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test3050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3050");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.url;
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.lang.String str14 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3051");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.method;
        java.lang.String str12 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3052");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.url;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.lang.String str14 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3053");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        java.lang.String str41 = request33.method;
        retrofit.mime.TypedOutput typedOutput42 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList43 = request33.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNotNull(headerList43);
    }

    @Test
    public void test3054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3054");
        retrofit.converter.Converter converter8 = null;
        retrofit.RequestBuilder requestBuilder9 = new retrofit.RequestBuilder(converter8);
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        requestBuilder9.setheaders((java.util.List<retrofit.client.Header>) headerList13);
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.converter.Converter converter23 = requestBuilder22.getconverter();
        java.util.List<retrofit.client.Header> headerList24 = requestBuilder22.headers;
        requestBuilder22.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList29 = null;
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "", headerList29, typedOutput30);
        java.lang.String str32 = request31.getUrl();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder22, request31 };
        requestBuilder9.setargs(objArray33);
        retrofit.RequestBuilder requestBuilder36 = requestBuilder9.apiUrl("");
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder9.headers;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "hi!", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList37, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("hi!", "hi!", headerList37, typedOutput42);
        java.lang.String str44 = request43.method;
        java.lang.String str45 = request43.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request43.headers;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "hi!", headerList46, typedOutput47);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(headerList24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder36);
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(headerList46);
    }

    @Test
    public void test3055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3055");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        java.lang.String str6 = request4.method;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
    }

    @Test
    public void test3056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3056");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        java.lang.String str37 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        java.lang.String str40 = requestBuilder39.apiUrl;
        java.util.List<retrofit.client.Header> headerList41 = requestBuilder39.headers;
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        requestBuilder43.apiUrl = "";
        retrofit.RequestBuilder requestBuilder72 = requestBuilder43.apiUrl("hi!");
        retrofit.converter.Converter converter73 = null;
        retrofit.RequestBuilder requestBuilder74 = new retrofit.RequestBuilder(converter73);
        java.util.List<retrofit.client.Header> headerList77 = null;
        retrofit.mime.TypedOutput typedOutput78 = null;
        retrofit.client.Request request79 = new retrofit.client.Request("", "", headerList77, typedOutput78);
        retrofit.mime.TypedOutput typedOutput80 = request79.getBody();
        retrofit.mime.TypedOutput typedOutput81 = request79.getBody();
        java.util.List<retrofit.client.Header> headerList82 = request79.headers;
        requestBuilder74.setheaders(headerList82);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder43.headers(headerList82);
        java.lang.Object[] objArray85 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder87 = requestBuilder43.apiUrl("hi!");
        java.lang.Object[] objArray88 = new java.lang.Object[] {};
        requestBuilder43.args = objArray88;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder39.args(objArray88);
        requestBuilder1.setargs(objArray88);
        java.lang.String str92 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray93 = requestBuilder1.args;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(headerList41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(typedOutput80);
        org.junit.Assert.assertNull(typedOutput81);
        org.junit.Assert.assertNotNull(headerList82);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
    }

    @Test
    public void test3057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3057");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput40);
        java.lang.String str42 = request41.getMethod();
        java.lang.String str43 = request41.getMethod();
        java.lang.String str44 = request41.method;
        retrofit.mime.TypedOutput typedOutput45 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput46 = request41.getBody();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(typedOutput45);
        org.junit.Assert.assertNull(typedOutput46);
    }

    @Test
    public void test3058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3058");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.url;
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request17.getHeaders();
        requestBuilder1.headers = headerList20;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.apiUrl("");
        java.lang.String str24 = requestBuilder23.apiUrl;
        retrofit.converter.Converter converter25 = requestBuilder23.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(converter25);
    }

    @Test
    public void test3059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3059");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.Object[] objArray28 = null;
        requestBuilder1.args = objArray28;
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.getheaders();
        java.lang.Class<?> wildcardClass31 = headerList30.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test3060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3060");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        java.lang.String str16 = requestBuilder7.getapiUrl();
        retrofit.RequestBuilder requestBuilder18 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.url;
        java.util.List<retrofit.client.Header> headerList25 = request23.getHeaders();
        java.util.List<retrofit.client.Header> headerList26 = request23.getHeaders();
        requestBuilder7.headers = headerList26;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList26, typedOutput28);
        java.lang.String str30 = request29.getMethod();
        retrofit.mime.TypedOutput typedOutput31 = request29.getBody();
        java.util.List<retrofit.client.Header> headerList32 = request29.getHeaders();
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", headerList32, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList32, typedOutput35);
        java.lang.String str37 = request36.url;
        java.lang.String str38 = request36.getMethod();
        java.lang.String str39 = request36.getMethod();
        java.lang.String str40 = request36.getMethod();
        java.lang.String str41 = request36.method;
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(requestBuilder18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test3061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3061");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        retrofit.mime.TypedOutput typedOutput16 = request12.body;
        retrofit.mime.TypedOutput typedOutput17 = request12.getBody();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
    }

    @Test
    public void test3062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3062");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str15 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test3063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3063");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test3064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3064");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.url;
        java.lang.String str12 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        java.lang.String str14 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3065");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.getMethod();
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        java.lang.String str16 = request15.method;
        java.lang.String str17 = request15.getUrl();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test3066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3066");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.lang.String str41 = request38.getMethod();
        java.lang.String str42 = request38.method;
        java.lang.String str43 = request38.method;
        java.util.List<retrofit.client.Header> headerList44 = request38.getHeaders();
        requestBuilder1.setheaders(headerList44);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput46 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(headerList44);
    }

    @Test
    public void test3067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3067");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "hi!", headerList42, typedOutput45);
        java.util.List<retrofit.client.Header> headerList47 = request46.getHeaders();
        retrofit.mime.TypedOutput typedOutput48 = request46.getBody();
        retrofit.mime.TypedOutput typedOutput49 = request46.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNull(typedOutput48);
        org.junit.Assert.assertNull(typedOutput49);
    }

    @Test
    public void test3068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3068");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.lang.String str4 = requestBuilder3.apiUrl;
        java.lang.String str5 = requestBuilder3.getapiUrl();
        retrofit.converter.Converter converter8 = null;
        retrofit.RequestBuilder requestBuilder9 = new retrofit.RequestBuilder(converter8);
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        requestBuilder9.setheaders((java.util.List<retrofit.client.Header>) headerList13);
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.converter.Converter converter23 = requestBuilder22.getconverter();
        java.util.List<retrofit.client.Header> headerList24 = requestBuilder22.headers;
        requestBuilder22.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList29 = null;
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "", headerList29, typedOutput30);
        java.lang.String str32 = request31.getUrl();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder22, request31 };
        requestBuilder9.setargs(objArray33);
        retrofit.RequestBuilder requestBuilder36 = requestBuilder9.apiUrl("");
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder9.headers;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "hi!", headerList37, typedOutput38);
        java.lang.String str40 = request39.url;
        java.lang.String str41 = request39.getMethod();
        java.lang.String str42 = request39.method;
        java.lang.String str43 = request39.method;
        java.util.List<retrofit.client.Header> headerList44 = request39.headers;
        requestBuilder3.headers = headerList44;
        retrofit.mime.TypedOutput typedOutput46 = null;
        retrofit.client.Request request47 = new retrofit.client.Request("hi!", "", headerList44, typedOutput46);
        java.util.List<retrofit.client.Header> headerList48 = request47.headers;
        java.util.List<retrofit.client.Header> headerList49 = request47.getHeaders();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(headerList24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder36);
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertNotNull(headerList49);
    }

    @Test
    public void test3069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3069");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        java.util.List<retrofit.client.Header> headerList16 = request14.headers;
        retrofit.mime.TypedOutput typedOutput17 = request14.getBody();
        java.lang.String str18 = request14.url;
        java.util.List<retrofit.client.Header> headerList19 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request14.headers;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
    }

    @Test
    public void test3070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3070");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        java.lang.String str13 = request4.method;
        java.lang.String str14 = request4.url;
        java.lang.String str15 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3071");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        java.util.List<retrofit.client.Header> headerList38 = request37.getHeaders();
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "hi!", headerList38, typedOutput39);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList38, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.body;
        java.util.List<retrofit.client.Header> headerList44 = request42.getHeaders();
        java.lang.String str45 = request42.url;
        java.util.List<retrofit.client.Header> headerList46 = request42.getHeaders();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
    }

    @Test
    public void test3072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3072");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.Class<?> wildcardClass10 = headerList9.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3073");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.method;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput14);
    }

    @Test
    public void test3074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3074");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        java.util.List<retrofit.client.Header> headerList13 = null;
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = request15.getBody();
        retrofit.mime.TypedOutput typedOutput17 = request15.getBody();
        java.util.List<retrofit.client.Header> headerList18 = request15.headers;
        requestBuilder10.setheaders(headerList18);
        retrofit.converter.Converter converter20 = null;
        retrofit.RequestBuilder requestBuilder21 = new retrofit.RequestBuilder(converter20);
        retrofit.converter.Converter converter22 = requestBuilder21.getconverter();
        java.util.List<retrofit.client.Header> headerList23 = requestBuilder21.headers;
        retrofit.converter.Converter converter27 = null;
        retrofit.RequestBuilder requestBuilder28 = new retrofit.RequestBuilder(converter27);
        retrofit.client.Header[] headerArray31 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList32 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList32, headerArray31);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList32, typedOutput34);
        requestBuilder28.setheaders((java.util.List<retrofit.client.Header>) headerList32);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        java.lang.String str42 = request41.getUrl();
        retrofit.mime.TypedOutput typedOutput43 = request41.body;
        java.lang.Object[] objArray44 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder28, typedOutput43 };
        requestBuilder21.setargs(objArray44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder10.args(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.converter.Converter converter49 = requestBuilder48.getconverter();
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        retrofit.converter.Converter converter63 = null;
        retrofit.RequestBuilder requestBuilder64 = new retrofit.RequestBuilder(converter63);
        retrofit.converter.Converter converter65 = requestBuilder64.getconverter();
        java.util.List<retrofit.client.Header> headerList66 = requestBuilder64.headers;
        requestBuilder64.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        java.lang.String str74 = request73.getUrl();
        java.lang.Object[] objArray75 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder64, request73 };
        requestBuilder51.setargs(objArray75);
        java.lang.Object[] objArray77 = requestBuilder51.getargs();
        retrofit.RequestBuilder requestBuilder78 = requestBuilder48.args(objArray77);
        retrofit.RequestBuilder requestBuilder79 = requestBuilder46.args(objArray77);
        java.util.List<retrofit.client.Header> headerList80 = requestBuilder46.headers;
        requestBuilder1.setheaders(headerList80);
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertNull(headerList23);
        org.junit.Assert.assertNotNull(headerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(headerList66);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(requestBuilder79);
        org.junit.Assert.assertNotNull(headerList80);
    }

    @Test
    public void test3075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3075");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        requestBuilder1.apiUrl = "";
        java.lang.Object[] objArray43 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder1.getheaders();
        java.lang.Class<?> wildcardClass45 = headerList44.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test3076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3076");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test3077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3077");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList87 = requestBuilder1.headers;
        retrofit.converter.Converter converter88 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList89 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("");
        java.lang.String str92 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(headerList87);
        org.junit.Assert.assertNull(converter88);
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test3078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3078");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test3079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3079");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request6.body;
        java.lang.String str14 = request6.url;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        java.lang.String str16 = request6.getMethod();
        java.lang.String str17 = request6.url;
        java.util.List<retrofit.client.Header> headerList18 = request6.getHeaders();
        java.lang.Class<?> wildcardClass19 = headerList18.getClass();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3080");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder9 = requestBuilder1.apiUrl("");
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = null;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.lang.String str17 = request16.getUrl();
        retrofit.mime.TypedOutput typedOutput18 = request16.getBody();
        java.util.List<retrofit.client.Header> headerList19 = request16.headers;
        java.lang.String str20 = request16.getUrl();
        java.lang.String str21 = request16.getMethod();
        java.lang.String str22 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList23 = request16.headers;
        retrofit.RequestBuilder requestBuilder24 = requestBuilder1.headers(headerList23);
        java.lang.Object[] objArray25 = requestBuilder24.getargs();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNotNull(requestBuilder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(requestBuilder24);
        org.junit.Assert.assertNull(objArray25);
    }

    @Test
    public void test3081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3081");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test3082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3082");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray9 = requestBuilder1.getargs();
        java.lang.Object[] objArray10 = requestBuilder1.args;
        java.lang.String str11 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(objArray9);
        org.junit.Assert.assertNull(objArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test3083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3083");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.method;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.lang.String str14 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3084");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder3.getheaders();
        java.lang.String str13 = requestBuilder3.getapiUrl();
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        requestBuilder15.setheaders((java.util.List<retrofit.client.Header>) headerList19);
        retrofit.converter.Converter converter27 = null;
        retrofit.RequestBuilder requestBuilder28 = new retrofit.RequestBuilder(converter27);
        retrofit.converter.Converter converter29 = requestBuilder28.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder28.headers;
        requestBuilder28.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        java.lang.String str38 = request37.getUrl();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder28, request37 };
        requestBuilder15.setargs(objArray39);
        requestBuilder15.apiUrl = "";
        retrofit.RequestBuilder requestBuilder44 = requestBuilder15.apiUrl("hi!");
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.getBody();
        retrofit.mime.TypedOutput typedOutput53 = request51.getBody();
        java.util.List<retrofit.client.Header> headerList54 = request51.headers;
        requestBuilder46.setheaders(headerList54);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder15.headers(headerList54);
        requestBuilder3.headers = headerList54;
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        java.lang.String str63 = request62.url;
        java.util.List<retrofit.client.Header> headerList64 = request62.getHeaders();
        requestBuilder3.headers = headerList64;
        java.lang.Object[] objArray66 = requestBuilder3.args;
        java.lang.String str67 = requestBuilder3.apiUrl;
        java.util.List<retrofit.client.Header> headerList68 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput69 = null;
        retrofit.client.Request request70 = new retrofit.client.Request("hi!", "", headerList68, typedOutput69);
        java.lang.String str71 = request70.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(headerList30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(headerList64);
        org.junit.Assert.assertNull(objArray66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test3085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3085");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList14 = null;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = request16.getBody();
        java.lang.String str18 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        requestBuilder1.setheaders(headerList19);
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList23 = requestBuilder1.headers;
        retrofit.converter.Converter converter24 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNull(converter24);
    }

    @Test
    public void test3086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3086");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getUrl();
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test3087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3087");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter87 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("hi!");
        java.lang.Object[] objArray90 = requestBuilder1.getargs();
        java.lang.String str91 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter92 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter87);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNull(converter92);
    }

    @Test
    public void test3088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3088");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder29.apiUrl("");
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder29.headers;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.headers(headerList57);
        requestBuilder60.apiUrl = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput63 = requestBuilder60.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(requestBuilder60);
    }

    @Test
    public void test3089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3089");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        retrofit.mime.TypedOutput typedOutput66 = request64.body;
        java.lang.Object[] objArray67 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder51, typedOutput66 };
        requestBuilder44.setargs(objArray67);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder33.args(objArray67);
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder69.headers;
        retrofit.RequestBuilder requestBuilder71 = requestBuilder1.headers(headerList70);
        retrofit.converter.Converter converter74 = null;
        retrofit.RequestBuilder requestBuilder75 = new retrofit.RequestBuilder(converter74);
        java.util.List<retrofit.client.Header> headerList78 = null;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "", headerList78, typedOutput79);
        retrofit.mime.TypedOutput typedOutput81 = request80.getBody();
        retrofit.mime.TypedOutput typedOutput82 = request80.getBody();
        java.util.List<retrofit.client.Header> headerList83 = request80.headers;
        requestBuilder75.setheaders(headerList83);
        retrofit.mime.TypedOutput typedOutput85 = null;
        retrofit.client.Request request86 = new retrofit.client.Request("hi!", "hi!", headerList83, typedOutput85);
        java.lang.String str87 = request86.url;
        java.util.List<retrofit.client.Header> headerList88 = request86.headers;
        requestBuilder71.headers = headerList88;
        java.lang.String str90 = requestBuilder71.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request91 = requestBuilder71.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNull(typedOutput81);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test3090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3090");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList16 = null;
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = request18.getBody();
        retrofit.mime.TypedOutput typedOutput20 = request18.body;
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        java.util.List<retrofit.client.Header> headerList22 = request18.headers;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder13.headers(headerList22);
        retrofit.converter.Converter converter24 = requestBuilder23.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNull(converter24);
    }

    @Test
    public void test3091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3091");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.url;
        java.lang.String str13 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3092");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.lang.String str13 = request6.url;
        java.lang.String str14 = request6.method;
        java.lang.String str15 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test3093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3093");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.Object[] objArray30 = requestBuilder1.args;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        requestBuilder1.setargs(objArray56);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder62 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput63 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(requestBuilder62);
    }

    @Test
    public void test3094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3094");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter7 = requestBuilder1.getconverter();
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList11 = null;
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = request13.getBody();
        retrofit.mime.TypedOutput typedOutput15 = request13.getBody();
        java.lang.String str16 = request13.getMethod();
        java.lang.String str17 = request13.method;
        java.util.List<retrofit.client.Header> headerList18 = request13.getHeaders();
        java.util.List<retrofit.client.Header> headerList19 = request13.headers;
        requestBuilder1.headers = headerList19;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test3095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3095");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder1.headers;
        java.lang.String str41 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test3096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3096");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("");
        requestBuilder1.apiUrl = "";
        java.lang.Object[] objArray22 = requestBuilder1.args;
        java.lang.String str23 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(objArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test3097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3097");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.lang.Class<?> wildcardClass11 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3098");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        requestBuilder13.setapiUrl("hi!");
        retrofit.converter.Converter converter16 = requestBuilder13.getconverter();
        java.lang.Object[] objArray17 = requestBuilder13.args;
        java.lang.Object[] objArray18 = null;
        requestBuilder13.args = objArray18;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(objArray17);
    }

    @Test
    public void test3099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3099");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray15 = requestBuilder3.getargs();
        retrofit.converter.Converter converter16 = requestBuilder3.getconverter();
        java.lang.Object[] objArray17 = requestBuilder3.getargs();
        retrofit.converter.Converter converter18 = requestBuilder3.getconverter();
        java.lang.Object[] objArray19 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", headerList20, typedOutput21);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(objArray17);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(objArray19);
        org.junit.Assert.assertNotNull(headerList20);
    }

    @Test
    public void test3100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3100");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder8.converter;
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder8.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(headerList10);
    }

    @Test
    public void test3101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3101");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.util.List<retrofit.client.Header> headerList36 = request33.getHeaders();
        java.lang.String str37 = request33.url;
        retrofit.mime.TypedOutput typedOutput38 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        java.util.List<retrofit.client.Header> headerList41 = request33.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test3102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3102");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList30 = null;
        requestBuilder3.headers = headerList30;
        retrofit.converter.Converter converter32 = requestBuilder3.getconverter();
        java.lang.Object[] objArray33 = requestBuilder3.args;
        java.lang.String str34 = requestBuilder3.apiUrl;
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder3.getheaders();
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        retrofit.mime.TypedOutput typedOutput42 = request40.body;
        java.util.List<retrofit.client.Header> headerList43 = request40.getHeaders();
        java.util.List<retrofit.client.Header> headerList44 = request40.getHeaders();
        java.lang.String str45 = request40.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request40.getHeaders();
        java.lang.String str47 = request40.getUrl();
        java.util.List<retrofit.client.Header> headerList48 = request40.headers;
        requestBuilder3.headers = headerList48;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("hi!", "hi!", headerList48, typedOutput50);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(headerList48);
    }

    @Test
    public void test3103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3103");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "", headerList44, typedOutput47);
        java.lang.String str49 = request48.getMethod();
        java.util.List<retrofit.client.Header> headerList50 = request48.getHeaders();
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "hi!", headerList50, typedOutput51);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(headerList50);
    }

    @Test
    public void test3104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3104");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "", headerList9, typedOutput10);
        java.lang.String str12 = request11.url;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3105");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.lang.Object[] objArray4 = requestBuilder3.args;
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.converter.Converter converter7 = requestBuilder6.getconverter();
        java.util.List<retrofit.client.Header> headerList8 = requestBuilder6.headers;
        requestBuilder6.setapiUrl("hi!");
        retrofit.converter.Converter converter11 = requestBuilder6.converter;
        retrofit.RequestBuilder requestBuilder13 = requestBuilder6.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder15 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder17.getheaders();
        java.lang.String str27 = requestBuilder17.getapiUrl();
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        requestBuilder29.apiUrl = "";
        retrofit.RequestBuilder requestBuilder58 = requestBuilder29.apiUrl("hi!");
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        retrofit.mime.TypedOutput typedOutput66 = request65.getBody();
        retrofit.mime.TypedOutput typedOutput67 = request65.getBody();
        java.util.List<retrofit.client.Header> headerList68 = request65.headers;
        requestBuilder60.setheaders(headerList68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder29.headers(headerList68);
        requestBuilder17.headers = headerList68;
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.url;
        java.util.List<retrofit.client.Header> headerList78 = request76.getHeaders();
        requestBuilder17.headers = headerList78;
        retrofit.RequestBuilder requestBuilder80 = requestBuilder13.headers(headerList78);
        requestBuilder3.headers = headerList78;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList78, typedOutput82);
        java.lang.String str84 = request83.getUrl();
        java.util.List<retrofit.client.Header> headerList85 = request83.headers;
        java.util.List<retrofit.client.Header> headerList86 = request83.getHeaders();
        java.lang.String str87 = request83.url;
        java.lang.String str88 = request83.method;
        java.lang.String str89 = request83.url;
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(headerList8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNotNull(requestBuilder15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(headerList86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test3106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3106");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.method;
        java.lang.String str12 = request4.getUrl();
        java.lang.String str13 = request4.getMethod();
        java.lang.String str14 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3107");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = request15.getBody();
        java.util.List<retrofit.client.Header> headerList17 = request15.headers;
        java.lang.String str18 = request15.getMethod();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test3108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3108");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        java.lang.String str12 = requestBuilder11.apiUrl;
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        java.lang.Object[] objArray43 = requestBuilder17.getargs();
        retrofit.RequestBuilder requestBuilder44 = requestBuilder14.args(objArray43);
        requestBuilder11.setargs(objArray43);
        requestBuilder1.setargs(objArray43);
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder1.headers;
        retrofit.converter.Converter converter48 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter51 = requestBuilder1.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(converter51);
    }

    @Test
    public void test3109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3109");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.String str36 = request33.getMethod();
        java.lang.String str37 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput38 = request33.body;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
    }

    @Test
    public void test3110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3110");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        requestBuilder35.setapiUrl("");
        requestBuilder35.setapiUrl("hi!");
        java.lang.Object[] objArray42 = new java.lang.Object[] {};
        retrofit.RequestBuilder requestBuilder43 = requestBuilder35.args(objArray42);
        java.util.List<retrofit.client.Header> headerList46 = null;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        java.lang.String str49 = request48.getUrl();
        retrofit.mime.TypedOutput typedOutput50 = request48.body;
        java.lang.String str51 = request48.getUrl();
        java.lang.String str52 = request48.url;
        java.lang.String str53 = request48.url;
        java.util.List<retrofit.client.Header> headerList54 = request48.headers;
        requestBuilder35.setheaders(headerList54);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput56 = requestBuilder35.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(headerList54);
    }

    @Test
    public void test3111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3111");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        retrofit.client.Header[] headerArray37 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList38 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList38, headerArray37);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput40);
        requestBuilder34.setheaders((java.util.List<retrofit.client.Header>) headerList38);
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.converter.Converter converter48 = requestBuilder47.getconverter();
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder47.headers;
        requestBuilder47.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "", headerList54, typedOutput55);
        java.lang.String str57 = request56.getUrl();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder47, request56 };
        requestBuilder34.setargs(objArray58);
        requestBuilder34.apiUrl = "";
        retrofit.RequestBuilder requestBuilder63 = requestBuilder34.apiUrl("hi!");
        retrofit.converter.Converter converter64 = null;
        retrofit.RequestBuilder requestBuilder65 = new retrofit.RequestBuilder(converter64);
        java.util.List<retrofit.client.Header> headerList68 = null;
        retrofit.mime.TypedOutput typedOutput69 = null;
        retrofit.client.Request request70 = new retrofit.client.Request("", "", headerList68, typedOutput69);
        retrofit.mime.TypedOutput typedOutput71 = request70.getBody();
        retrofit.mime.TypedOutput typedOutput72 = request70.getBody();
        java.util.List<retrofit.client.Header> headerList73 = request70.headers;
        requestBuilder65.setheaders(headerList73);
        retrofit.RequestBuilder requestBuilder75 = requestBuilder34.headers(headerList73);
        java.lang.Object[] objArray76 = requestBuilder34.getargs();
        java.lang.Object[] objArray77 = requestBuilder34.getargs();
        requestBuilder1.args = objArray77;
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        retrofit.mime.TypedOutput typedOutput86 = request85.getBody();
        retrofit.mime.TypedOutput typedOutput87 = request85.getBody();
        java.util.List<retrofit.client.Header> headerList88 = request85.headers;
        java.util.List<retrofit.client.Header> headerList89 = request85.getHeaders();
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("hi!", "hi!", headerList89, typedOutput90);
        retrofit.RequestBuilder requestBuilder92 = requestBuilder1.headers(headerList89);
        java.lang.Object[] objArray93 = requestBuilder1.args;
        java.lang.Object[] objArray94 = null;
        requestBuilder1.setargs(objArray94);
        java.lang.String str96 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(headerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertNull(typedOutput71);
        org.junit.Assert.assertNull(typedOutput72);
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertNotNull(requestBuilder92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test3112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3112");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        java.util.List<retrofit.client.Header> headerList18 = request17.getHeaders();
        java.lang.String str19 = request17.method;
        java.lang.String str20 = request17.getMethod();
        java.lang.String str21 = request17.method;
        java.util.List<retrofit.client.Header> headerList22 = request17.getHeaders();
        java.lang.String str23 = request17.method;
        java.util.List<retrofit.client.Header> headerList24 = request17.getHeaders();
        java.lang.Class<?> wildcardClass25 = request17.getClass();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test3113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3113");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder3.headers;
        retrofit.converter.Converter converter33 = requestBuilder3.getconverter();
        retrofit.RequestBuilder requestBuilder35 = requestBuilder3.apiUrl("hi!");
        requestBuilder35.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder35.getheaders();
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "", headerList38, typedOutput39);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test3114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3114");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.converter.Converter converter11 = requestBuilder10.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder10.headers;
        requestBuilder10.setapiUrl("hi!");
        java.lang.String str15 = requestBuilder10.apiUrl;
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder10.headers;
        java.lang.String str17 = requestBuilder10.getapiUrl();
        java.lang.String str18 = requestBuilder10.apiUrl;
        retrofit.RequestBuilder requestBuilder20 = requestBuilder10.apiUrl("hi!");
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.converter.Converter converter23 = requestBuilder22.getconverter();
        java.util.List<retrofit.client.Header> headerList24 = requestBuilder22.headers;
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        java.lang.String str43 = request42.getUrl();
        retrofit.mime.TypedOutput typedOutput44 = request42.body;
        java.lang.Object[] objArray45 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder29, typedOutput44 };
        requestBuilder22.setargs(objArray45);
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.getBody();
        retrofit.mime.TypedOutput typedOutput53 = request51.getBody();
        java.lang.String str54 = request51.getUrl();
        java.util.List<retrofit.client.Header> headerList55 = request51.headers;
        retrofit.RequestBuilder requestBuilder56 = requestBuilder22.headers(headerList55);
        retrofit.RequestBuilder requestBuilder57 = requestBuilder10.headers(headerList55);
        requestBuilder1.setheaders(headerList55);
        java.lang.String str59 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList60 = requestBuilder1.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(headerList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(headerList24);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(headerList55);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(requestBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(headerList60);
    }

    @Test
    public void test3115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3115");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        requestBuilder13.apiUrl = "";
        retrofit.RequestBuilder requestBuilder42 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        retrofit.mime.TypedOutput typedOutput51 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder44.setheaders(headerList52);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder13.headers(headerList52);
        requestBuilder1.headers = headerList52;
        retrofit.converter.Converter converter56 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "";
        java.lang.Object[] objArray59 = requestBuilder1.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(objArray59);
    }

    @Test
    public void test3116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3116");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder10 = requestBuilder1.apiUrl("hi!");
        requestBuilder10.setapiUrl("");
        requestBuilder10.setapiUrl("hi!");
        retrofit.converter.Converter converter15 = requestBuilder10.converter;
        retrofit.converter.Converter converter16 = requestBuilder10.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(converter16);
    }

    @Test
    public void test3117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3117");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        java.lang.String str14 = request4.method;
        java.util.List<retrofit.client.Header> headerList15 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test3118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3118");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.url;
        java.lang.String str37 = request35.url;
        java.lang.String str38 = request35.method;
        java.util.List<retrofit.client.Header> headerList39 = request35.headers;
        requestBuilder1.headers = headerList39;
        java.lang.String str41 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test3119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3119");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        java.util.List<retrofit.client.Header> headerList14 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList17, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList20, typedOutput21);
        java.util.List<retrofit.client.Header> headerList23 = request22.headers;
        java.lang.Class<?> wildcardClass24 = headerList23.getClass();
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test3120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3120");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.url;
        java.lang.String str37 = request35.url;
        java.lang.String str38 = request35.method;
        java.util.List<retrofit.client.Header> headerList39 = request35.headers;
        requestBuilder1.headers = headerList39;
        java.util.List<retrofit.client.Header> headerList41 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request42 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test3121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3121");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test3122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3122");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request8.body;
        java.lang.String str11 = request8.getUrl();
        java.lang.String str12 = request8.url;
        java.lang.String str13 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request8.headers;
        java.util.List<retrofit.client.Header> headerList15 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = request19.getBody();
        retrofit.mime.TypedOutput typedOutput21 = request19.body;
        java.lang.String str22 = request19.url;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test3123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3123");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.headers;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        java.util.List<retrofit.client.Header> headerList18 = request17.getHeaders();
        java.lang.String str19 = request17.url;
        java.lang.String str20 = request17.getUrl();
        java.lang.String str21 = request17.url;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test3124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3124");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3125");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.method;
        java.util.List<retrofit.client.Header> headerList36 = request33.headers;
        java.util.List<retrofit.client.Header> headerList37 = request33.getHeaders();
        java.lang.String str38 = request33.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test3126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3126");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(requestBuilder13);
    }

    @Test
    public void test3127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3127");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("");
        java.lang.Object[] objArray34 = null;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder31.args(objArray34);
        java.lang.Object[] objArray36 = requestBuilder35.args;
        requestBuilder35.apiUrl = "";
        java.lang.String str39 = requestBuilder35.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNull(objArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test3128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3128");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("");
        retrofit.converter.Converter converter34 = requestBuilder31.getconverter();
        retrofit.converter.Converter converter35 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.url;
        java.lang.String str42 = request40.url;
        java.lang.String str43 = request40.getUrl();
        retrofit.mime.TypedOutput typedOutput44 = request40.body;
        java.util.List<retrofit.client.Header> headerList45 = request40.headers;
        requestBuilder31.headers = headerList45;
        java.lang.String str47 = requestBuilder31.apiUrl;
        retrofit.converter.Converter converter48 = requestBuilder31.converter;
        java.lang.Object[] objArray49 = requestBuilder31.getargs();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNotNull(objArray49);
    }

    @Test
    public void test3129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3129");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.lang.Object[] objArray15 = requestBuilder13.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
    }

    @Test
    public void test3130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3130");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.lang.String str11 = request10.method;
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.lang.String str13 = request10.method;
        java.lang.String str14 = request10.url;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3131");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        java.lang.String str36 = request35.url;
        java.lang.String str37 = request35.getMethod();
        java.util.List<retrofit.client.Header> headerList38 = request35.getHeaders();
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "hi!", headerList38, typedOutput39);
        java.util.List<retrofit.client.Header> headerList41 = request40.headers;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test3132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3132");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.getMethod();
        java.lang.String str12 = request4.url;
        java.lang.String str13 = request4.method;
        java.lang.String str14 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList15 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test3133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3133");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.method;
        java.lang.String str12 = request4.getUrl();
        java.lang.String str13 = request4.getMethod();
        java.lang.String str14 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3134");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.method;
        java.lang.String str11 = request4.getMethod();
        java.lang.String str12 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request4.getBody();
        java.lang.String str15 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput16 = request4.body;
        java.lang.String str17 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test3135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3135");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder5.getheaders();
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "hi!", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("hi!", "", headerList47, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.util.List<retrofit.client.Header> headerList53 = request51.getHeaders();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(headerList53);
    }

    @Test
    public void test3136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3136");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3137");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        requestBuilder13.apiUrl = "";
        retrofit.RequestBuilder requestBuilder42 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        retrofit.mime.TypedOutput typedOutput51 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder44.setheaders(headerList52);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder13.headers(headerList52);
        requestBuilder1.headers = headerList52;
        retrofit.converter.Converter converter56 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder1.getheaders();
        java.lang.Object[] objArray58 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request61 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNull(objArray58);
    }

    @Test
    public void test3138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3138");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList33, typedOutput36);
        java.lang.String str38 = request37.method;
        java.lang.String str39 = request37.method;
        java.lang.String str40 = request37.getMethod();
        java.lang.String str41 = request37.method;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test3139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3139");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        requestBuilder3.setapiUrl("hi!");
        requestBuilder3.setapiUrl("hi!");
        java.lang.String str10 = requestBuilder3.apiUrl;
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.client.Header[] headerArray17 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList18 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList18, headerArray17);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList18, typedOutput20);
        requestBuilder14.setheaders((java.util.List<retrofit.client.Header>) headerList18);
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        retrofit.converter.Converter converter28 = requestBuilder27.getconverter();
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder27.headers;
        requestBuilder27.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList34 = null;
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList34, typedOutput35);
        java.lang.String str37 = request36.getUrl();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder27, request36 };
        requestBuilder14.setargs(objArray38);
        requestBuilder14.apiUrl = "";
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        java.util.List<retrofit.client.Header> headerList46 = null;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = request48.getBody();
        retrofit.mime.TypedOutput typedOutput50 = request48.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request48.headers;
        requestBuilder43.setheaders(headerList51);
        requestBuilder14.setheaders(headerList51);
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "hi!", headerList51, typedOutput54);
        java.util.List<retrofit.client.Header> headerList56 = request55.getHeaders();
        requestBuilder3.headers = headerList56;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "hi!", headerList56, typedOutput58);
        java.lang.Class<?> wildcardClass60 = headerList56.getClass();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNull(headerList29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test3140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3140");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter35 = requestBuilder1.converter;
        retrofit.converter.Converter converter36 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder1.headers;
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter40 = requestBuilder1.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertNull(converter40);
    }

    @Test
    public void test3141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3141");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.converter.Converter converter6 = requestBuilder5.getconverter();
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        retrofit.converter.Converter converter20 = null;
        retrofit.RequestBuilder requestBuilder21 = new retrofit.RequestBuilder(converter20);
        retrofit.converter.Converter converter22 = requestBuilder21.getconverter();
        java.util.List<retrofit.client.Header> headerList23 = requestBuilder21.headers;
        requestBuilder21.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList28 = null;
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", headerList28, typedOutput29);
        java.lang.String str31 = request30.getUrl();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder21, request30 };
        requestBuilder8.setargs(objArray32);
        java.lang.Object[] objArray34 = requestBuilder8.getargs();
        retrofit.RequestBuilder requestBuilder35 = requestBuilder5.args(objArray34);
        retrofit.converter.Converter converter36 = requestBuilder5.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList43 = request41.headers;
        requestBuilder5.setheaders(headerList43);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList43, typedOutput45);
        java.util.List<retrofit.client.Header> headerList47 = request46.headers;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "hi!", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.lang.String str51 = request49.method;
        java.util.List<retrofit.client.Header> headerList52 = request49.getHeaders();
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertNull(headerList23);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(headerList52);
    }

    @Test
    public void test3142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3142");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test3143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3143");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        retrofit.mime.TypedOutput typedOutput17 = request12.body;
        java.util.List<retrofit.client.Header> headerList18 = request12.headers;
        java.lang.String str19 = request12.getMethod();
        retrofit.mime.TypedOutput typedOutput20 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList21 = request12.getHeaders();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNotNull(headerList21);
    }

    @Test
    public void test3144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3144");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.method;
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList14 = request6.headers;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test3145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3145");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        requestBuilder4.apiUrl = "";
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        requestBuilder4.setheaders(headerList41);
        requestBuilder4.apiUrl = "";
        java.lang.Object[] objArray46 = requestBuilder4.args;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.args(objArray46);
        retrofit.converter.Converter converter48 = requestBuilder1.converter;
        java.lang.Object[] objArray49 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder55 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder55.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(requestBuilder55);
        org.junit.Assert.assertNull(headerList56);
    }

    @Test
    public void test3146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3146");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.body;
        java.lang.String str17 = request14.method;
        java.lang.String str18 = request14.getUrl();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test3147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3147");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        retrofit.converter.Converter converter16 = requestBuilder1.converter;
        java.lang.String str17 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter18 = requestBuilder1.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(converter18);
    }

    @Test
    public void test3148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3148");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.Object[] objArray74 = requestBuilder1.getargs();
        java.lang.String str75 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter78 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        retrofit.mime.TypedOutput typedOutput86 = request85.getBody();
        retrofit.mime.TypedOutput typedOutput87 = request85.getBody();
        java.util.List<retrofit.client.Header> headerList88 = request85.headers;
        java.lang.String str89 = request85.getUrl();
        java.util.List<retrofit.client.Header> headerList90 = request85.getHeaders();
        retrofit.mime.TypedOutput typedOutput91 = null;
        retrofit.client.Request request92 = new retrofit.client.Request("hi!", "", headerList90, typedOutput91);
        java.util.List<retrofit.client.Header> headerList93 = request92.getHeaders();
        requestBuilder1.headers = headerList93;
        java.util.List<retrofit.client.Header> headerList95 = requestBuilder1.getheaders();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(headerList90);
        org.junit.Assert.assertNotNull(headerList93);
        org.junit.Assert.assertNotNull(headerList95);
    }

    @Test
    public void test3149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3149");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.url;
        java.util.List<retrofit.client.Header> headerList13 = request6.headers;
        java.lang.String str14 = request6.url;
        java.lang.String str15 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request6.headers;
        java.util.List<retrofit.client.Header> headerList17 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "", headerList17, typedOutput18);
        java.lang.String str20 = request19.method;
        java.lang.String str21 = request19.getMethod();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test3150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3150");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", headerList33, typedOutput36);
        java.lang.String str38 = request37.getMethod();
        java.lang.String str39 = request37.method;
        retrofit.mime.TypedOutput typedOutput40 = request37.getBody();
        java.lang.String str41 = request37.getMethod();
        java.lang.String str42 = request37.method;
        java.util.List<retrofit.client.Header> headerList43 = request37.getHeaders();
        java.lang.String str44 = request37.method;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test3151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3151");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.lang.String str40 = request33.getMethod();
        java.lang.String str41 = request33.url;
        java.lang.String str42 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test3152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3152");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.url;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test3153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3153");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3154");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test3155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3155");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray7 = requestBuilder1.getargs();
        java.lang.String str8 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        retrofit.converter.Converter converter22 = null;
        retrofit.RequestBuilder requestBuilder23 = new retrofit.RequestBuilder(converter22);
        retrofit.converter.Converter converter24 = requestBuilder23.getconverter();
        java.util.List<retrofit.client.Header> headerList25 = requestBuilder23.headers;
        requestBuilder23.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder23, request32 };
        requestBuilder10.setargs(objArray34);
        java.lang.Object[] objArray36 = requestBuilder10.getargs();
        java.util.List<retrofit.client.Header> headerList37 = null;
        requestBuilder10.headers = headerList37;
        java.lang.Object[] objArray39 = requestBuilder10.getargs();
        retrofit.RequestBuilder requestBuilder40 = requestBuilder1.args(objArray39);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(objArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(converter24);
        org.junit.Assert.assertNull(headerList25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder40);
    }

    @Test
    public void test3156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3156");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("hi!");
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        requestBuilder15.setheaders((java.util.List<retrofit.client.Header>) headerList19);
        retrofit.converter.Converter converter27 = null;
        retrofit.RequestBuilder requestBuilder28 = new retrofit.RequestBuilder(converter27);
        retrofit.converter.Converter converter29 = requestBuilder28.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder28.headers;
        requestBuilder28.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        java.lang.String str38 = request37.getUrl();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder28, request37 };
        requestBuilder15.setargs(objArray39);
        java.lang.Object[] objArray41 = requestBuilder15.getargs();
        retrofit.RequestBuilder requestBuilder42 = requestBuilder12.args(objArray41);
        java.lang.String str43 = requestBuilder12.getapiUrl();
        java.lang.String str44 = requestBuilder12.apiUrl;
        retrofit.RequestBuilder requestBuilder46 = requestBuilder12.apiUrl("");
        java.lang.Object[] objArray47 = new java.lang.Object[] {};
        requestBuilder12.setargs(objArray47);
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        retrofit.mime.TypedOutput typedOutput55 = request53.body;
        java.util.List<retrofit.client.Header> headerList56 = request53.getHeaders();
        java.util.List<retrofit.client.Header> headerList57 = request53.getHeaders();
        requestBuilder12.setheaders(headerList57);
        requestBuilder8.headers = headerList57;
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        retrofit.client.Header[] headerArray64 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList65 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList65, headerArray64);
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList65, typedOutput67);
        requestBuilder61.setheaders((java.util.List<retrofit.client.Header>) headerList65);
        retrofit.converter.Converter converter73 = null;
        retrofit.RequestBuilder requestBuilder74 = new retrofit.RequestBuilder(converter73);
        retrofit.converter.Converter converter75 = requestBuilder74.getconverter();
        java.util.List<retrofit.client.Header> headerList76 = requestBuilder74.headers;
        requestBuilder74.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList81 = null;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList81, typedOutput82);
        java.lang.String str84 = request83.getUrl();
        java.lang.Object[] objArray85 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder74, request83 };
        requestBuilder61.setargs(objArray85);
        java.lang.String str87 = requestBuilder61.getapiUrl();
        java.lang.Object[] objArray88 = requestBuilder61.args;
        retrofit.RequestBuilder requestBuilder89 = requestBuilder8.args(objArray88);
        requestBuilder89.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder93 = requestBuilder89.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList94 = requestBuilder89.getheaders();
        java.lang.String str95 = requestBuilder89.apiUrl;
        java.util.List<retrofit.client.Header> headerList96 = requestBuilder89.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(headerList30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(headerArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(converter75);
        org.junit.Assert.assertNull(headerList76);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertNotNull(requestBuilder89);
        org.junit.Assert.assertNotNull(requestBuilder93);
        org.junit.Assert.assertNotNull(headerList94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
        org.junit.Assert.assertNotNull(headerList96);
    }

    @Test
    public void test3157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3157");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3158");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("");
        requestBuilder1.setapiUrl("hi!");
        java.lang.Object[] objArray15 = null;
        requestBuilder1.setargs(objArray15);
        retrofit.RequestBuilder requestBuilder18 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray19 = requestBuilder18.getargs();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder18);
        org.junit.Assert.assertNull(objArray19);
    }

    @Test
    public void test3159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3159");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        requestBuilder1.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test3160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3160");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        requestBuilder3.setheaders(headerList40);
        requestBuilder3.apiUrl = "";
        java.lang.Object[] objArray45 = requestBuilder3.args;
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        java.util.List<retrofit.client.Header> headerList49 = request48.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(headerList49);
    }

    @Test
    public void test3161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3161");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        retrofit.converter.Converter converter24 = null;
        retrofit.RequestBuilder requestBuilder25 = new retrofit.RequestBuilder(converter24);
        retrofit.converter.Converter converter26 = requestBuilder25.getconverter();
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder25.headers;
        requestBuilder25.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList32 = null;
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", headerList32, typedOutput33);
        java.lang.String str35 = request34.getUrl();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder25, request34 };
        requestBuilder12.setargs(objArray36);
        requestBuilder12.apiUrl = "";
        retrofit.converter.Converter converter40 = null;
        retrofit.RequestBuilder requestBuilder41 = new retrofit.RequestBuilder(converter40);
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        retrofit.mime.TypedOutput typedOutput47 = request46.getBody();
        retrofit.mime.TypedOutput typedOutput48 = request46.getBody();
        java.util.List<retrofit.client.Header> headerList49 = request46.headers;
        requestBuilder41.setheaders(headerList49);
        requestBuilder12.setheaders(headerList49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "hi!", headerList49, typedOutput52);
        java.util.List<retrofit.client.Header> headerList54 = request53.getHeaders();
        requestBuilder1.headers = headerList54;
        retrofit.RequestBuilder requestBuilder57 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder59 = requestBuilder1.apiUrl("hi!");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNull(headerList27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput47);
        org.junit.Assert.assertNull(typedOutput48);
        org.junit.Assert.assertNotNull(headerList49);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(requestBuilder57);
        org.junit.Assert.assertNotNull(requestBuilder59);
    }

    @Test
    public void test3162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3162");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.getargs();
        retrofit.converter.Converter converter7 = requestBuilder1.getconverter();
        retrofit.RequestBuilder requestBuilder9 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter10 = requestBuilder9.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(objArray6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNotNull(requestBuilder9);
        org.junit.Assert.assertNull(converter10);
    }

    @Test
    public void test3163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3163");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList9 = requestBuilder8.getheaders();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        java.lang.Object[] objArray39 = requestBuilder13.getargs();
        java.lang.String str40 = requestBuilder13.apiUrl;
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        java.util.List<retrofit.client.Header> headerList45 = null;
        retrofit.mime.TypedOutput typedOutput46 = null;
        retrofit.client.Request request47 = new retrofit.client.Request("", "", headerList45, typedOutput46);
        retrofit.mime.TypedOutput typedOutput48 = request47.getBody();
        retrofit.mime.TypedOutput typedOutput49 = request47.getBody();
        java.util.List<retrofit.client.Header> headerList50 = request47.headers;
        requestBuilder42.setheaders(headerList50);
        retrofit.converter.Converter converter52 = null;
        retrofit.RequestBuilder requestBuilder53 = new retrofit.RequestBuilder(converter52);
        retrofit.converter.Converter converter54 = requestBuilder53.getconverter();
        java.util.List<retrofit.client.Header> headerList55 = requestBuilder53.headers;
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.client.Header[] headerArray63 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList64 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList64, headerArray63);
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList64, typedOutput66);
        requestBuilder60.setheaders((java.util.List<retrofit.client.Header>) headerList64);
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        java.lang.String str74 = request73.getUrl();
        retrofit.mime.TypedOutput typedOutput75 = request73.body;
        java.lang.Object[] objArray76 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder60, typedOutput75 };
        requestBuilder53.setargs(objArray76);
        retrofit.RequestBuilder requestBuilder78 = requestBuilder42.args(objArray76);
        java.util.List<retrofit.client.Header> headerList79 = requestBuilder78.headers;
        requestBuilder13.headers = headerList79;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "hi!", headerList79, typedOutput81);
        java.util.List<retrofit.client.Header> headerList83 = request82.headers;
        requestBuilder8.headers = headerList83;
        java.lang.String str85 = requestBuilder8.getapiUrl();
        retrofit.converter.Converter converter86 = requestBuilder8.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList9);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(typedOutput48);
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNotNull(headerList50);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(headerList55);
        org.junit.Assert.assertNotNull(headerArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNull(typedOutput75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(headerList79);
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertNull(converter86);
    }

    @Test
    public void test3164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3164");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test3165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3165");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.lang.String str13 = request6.url;
        java.lang.String str14 = request6.url;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = request6.getBody();
        java.lang.String str17 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList18 = request6.headers;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(headerList18);
    }

    @Test
    public void test3166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3166");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.lang.String str14 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3167");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3168");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        java.lang.String str4 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder6 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput7 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(requestBuilder6);
    }

    @Test
    public void test3169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3169");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3170");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.String str36 = request33.url;
        retrofit.mime.TypedOutput typedOutput37 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput38 = request33.body;
        retrofit.mime.TypedOutput typedOutput39 = request33.getBody();
        java.lang.String str40 = request33.method;
        java.lang.String str41 = request33.method;
        retrofit.mime.TypedOutput typedOutput42 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput44 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
    }

    @Test
    public void test3171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3171");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        java.lang.String str15 = request4.method;
        java.util.List<retrofit.client.Header> headerList16 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNull(typedOutput17);
    }

    @Test
    public void test3172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3172");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        retrofit.mime.TypedOutput typedOutput16 = request12.body;
        java.util.List<retrofit.client.Header> headerList17 = request12.headers;
        retrofit.mime.TypedOutput typedOutput18 = request12.getBody();
        java.lang.String str19 = request12.method;
        java.lang.String str20 = request12.getMethod();
        java.util.List<retrofit.client.Header> headerList21 = request12.headers;
        java.lang.Class<?> wildcardClass22 = request12.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test3173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3173");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.lang.String str13 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request6.headers;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test3174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3174");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        java.util.List<retrofit.client.Header> headerList15 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request4.headers;
        retrofit.mime.TypedOutput typedOutput17 = request4.getBody();
        java.lang.String str18 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test3175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3175");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.String str27 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray28 = requestBuilder1.args;
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.client.Header[] headerArray33 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList34 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList34, headerArray33);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList34, typedOutput36);
        requestBuilder30.setheaders((java.util.List<retrofit.client.Header>) headerList34);
        java.lang.String str39 = requestBuilder30.getapiUrl();
        retrofit.RequestBuilder requestBuilder41 = requestBuilder30.apiUrl("");
        java.lang.Object[] objArray42 = requestBuilder30.getargs();
        retrofit.converter.Converter converter43 = requestBuilder30.getconverter();
        java.lang.Object[] objArray44 = requestBuilder30.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.converter.Converter converter74 = null;
        retrofit.RequestBuilder requestBuilder75 = new retrofit.RequestBuilder(converter74);
        java.util.List<retrofit.client.Header> headerList78 = null;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "", headerList78, typedOutput79);
        retrofit.mime.TypedOutput typedOutput81 = request80.getBody();
        retrofit.mime.TypedOutput typedOutput82 = request80.getBody();
        java.util.List<retrofit.client.Header> headerList83 = request80.headers;
        requestBuilder75.setheaders(headerList83);
        requestBuilder46.setheaders(headerList83);
        requestBuilder46.apiUrl = "";
        java.lang.Object[] objArray88 = requestBuilder46.args;
        java.lang.Object[] objArray89 = requestBuilder46.args;
        requestBuilder30.args = objArray89;
        retrofit.RequestBuilder requestBuilder91 = requestBuilder1.args(objArray89);
        retrofit.RequestBuilder requestBuilder93 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter94 = requestBuilder93.converter;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(headerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(requestBuilder41);
        org.junit.Assert.assertNull(objArray42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNull(typedOutput81);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertNotNull(requestBuilder91);
        org.junit.Assert.assertNotNull(requestBuilder93);
        org.junit.Assert.assertNull(converter94);
    }

    @Test
    public void test3176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3176");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        java.lang.String str36 = request35.url;
        java.lang.String str37 = request35.getMethod();
        java.lang.String str38 = request35.method;
        java.lang.String str39 = request35.method;
        java.util.List<retrofit.client.Header> headerList40 = request35.headers;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        java.lang.String str43 = request42.getMethod();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test3177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3177");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder14 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder16 = requestBuilder14.apiUrl("");
        java.lang.String str17 = requestBuilder14.getapiUrl();
        java.util.List<retrofit.client.Header> headerList18 = null;
        requestBuilder14.setheaders(headerList18);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test3178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3178");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test3179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3179");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3180");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(converter32);
    }

    @Test
    public void test3181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3181");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.lang.String str9 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.lang.String str11 = request6.method;
        retrofit.mime.TypedOutput typedOutput12 = request6.body;
        java.util.List<retrofit.client.Header> headerList13 = request6.headers;
        java.util.List<retrofit.client.Header> headerList14 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "", headerList14, typedOutput15);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test3182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3182");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        java.lang.String str13 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3183");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3184");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList14 = request4.getHeaders();
        java.lang.String str15 = request4.method;
        java.lang.String str16 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test3185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3185");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.url;
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test3186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3186");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request23.body;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder10, typedOutput25 };
        requestBuilder3.setargs(objArray26);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        requestBuilder44.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        java.lang.Object[] objArray55 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder44, request53 };
        requestBuilder31.setargs(objArray55);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder31.apiUrl("");
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder31.headers;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder3.headers(headerList59);
        retrofit.RequestBuilder requestBuilder64 = requestBuilder62.apiUrl("hi!");
        java.lang.Object[] objArray65 = requestBuilder62.args;
        java.util.List<retrofit.client.Header> headerList66 = requestBuilder62.headers;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "hi!", headerList66, typedOutput67);
        java.lang.String str69 = request68.getMethod();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNotNull(requestBuilder64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(headerList66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test3187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3187");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("");
        java.lang.String str18 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test3188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3188");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter34 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter35 = requestBuilder1.converter;
        retrofit.converter.Converter converter36 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(converter36);
    }

    @Test
    public void test3189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3189");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder32 = requestBuilder30.apiUrl("");
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.lang.String str42 = request39.method;
        java.util.List<retrofit.client.Header> headerList43 = request39.getHeaders();
        retrofit.RequestBuilder requestBuilder44 = requestBuilder32.headers(headerList43);
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder44.getheaders();
        java.lang.Object[] objArray46 = requestBuilder44.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(objArray46);
    }

    @Test
    public void test3190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3190");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.util.List<retrofit.client.Header> headerList36 = request33.getHeaders();
        java.lang.String str37 = request33.getUrl();
        java.lang.String str38 = request33.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test3191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3191");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "hi!", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request39.headers;
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("", "hi!", headerList41, typedOutput42);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test3192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3192");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.url;
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.url;
        java.lang.String str13 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        java.lang.String str15 = request4.getUrl();
        java.lang.String str16 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test3193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3193");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3194");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        requestBuilder3.setapiUrl("hi!");
        requestBuilder3.setapiUrl("hi!");
        java.lang.String str10 = requestBuilder3.apiUrl;
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.client.Header[] headerArray17 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList18 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList18, headerArray17);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList18, typedOutput20);
        requestBuilder14.setheaders((java.util.List<retrofit.client.Header>) headerList18);
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        retrofit.converter.Converter converter28 = requestBuilder27.getconverter();
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder27.headers;
        requestBuilder27.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList34 = null;
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList34, typedOutput35);
        java.lang.String str37 = request36.getUrl();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder27, request36 };
        requestBuilder14.setargs(objArray38);
        requestBuilder14.apiUrl = "";
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        java.util.List<retrofit.client.Header> headerList46 = null;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = request48.getBody();
        retrofit.mime.TypedOutput typedOutput50 = request48.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request48.headers;
        requestBuilder43.setheaders(headerList51);
        requestBuilder14.setheaders(headerList51);
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "hi!", headerList51, typedOutput54);
        java.util.List<retrofit.client.Header> headerList56 = request55.getHeaders();
        requestBuilder3.headers = headerList56;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("hi!", "", headerList56, typedOutput58);
        java.util.List<retrofit.client.Header> headerList60 = request59.getHeaders();
        retrofit.mime.TypedOutput typedOutput61 = request59.getBody();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNull(headerList29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(headerList60);
        org.junit.Assert.assertNull(typedOutput61);
    }

    @Test
    public void test3195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3195");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        requestBuilder5.setheaders(headerList13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = request18.body;
        retrofit.mime.TypedOutput typedOutput20 = request18.getBody();
        retrofit.mime.TypedOutput typedOutput21 = request18.getBody();
        retrofit.mime.TypedOutput typedOutput22 = request18.getBody();
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
    }

    @Test
    public void test3196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3196");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        java.lang.Object[] objArray10 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList14 = null;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.lang.String str17 = request16.url;
        java.lang.String str18 = request16.url;
        java.lang.String str19 = request16.method;
        java.util.List<retrofit.client.Header> headerList20 = request16.headers;
        requestBuilder1.headers = headerList20;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(objArray10);
        org.junit.Assert.assertNull(headerList11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(headerList20);
    }

    @Test
    public void test3197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3197");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = request6.getBody();
        java.lang.String str14 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test3198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3198");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.getMethod();
        java.lang.String str12 = request4.url;
        java.lang.String str13 = request4.method;
        java.util.List<retrofit.client.Header> headerList14 = request4.getHeaders();
        java.lang.String str15 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3199");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.method;
        java.lang.String str11 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        java.lang.String str13 = request4.method;
        java.lang.String str14 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3200");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        requestBuilder5.setheaders(headerList13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput17);
        java.lang.String str19 = request18.getMethod();
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test3201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3201");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        java.lang.String str31 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder1.apiUrl("");
        java.lang.String str34 = requestBuilder33.getapiUrl();
        java.lang.String str35 = requestBuilder33.getapiUrl();
        java.util.List<retrofit.client.Header> headerList36 = requestBuilder33.getheaders();
        java.lang.Class<?> wildcardClass37 = headerList36.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test3202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3202");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.headers;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        java.util.List<retrofit.client.Header> headerList18 = request17.getHeaders();
        java.lang.String str19 = request17.url;
        java.lang.String str20 = request17.getUrl();
        retrofit.mime.TypedOutput typedOutput21 = request17.getBody();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(typedOutput21);
    }

    @Test
    public void test3203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3203");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = request6.body;
        java.lang.String str14 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList15 = request6.headers;
        java.util.List<retrofit.client.Header> headerList16 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test3204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3204");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "", headerList44, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "", headerList44, typedOutput49);
        java.util.List<retrofit.client.Header> headerList51 = request50.getHeaders();
        java.lang.String str52 = request50.url;
        java.lang.String str53 = request50.url;
        retrofit.mime.TypedOutput typedOutput54 = request50.body;
        retrofit.mime.TypedOutput typedOutput55 = request50.body;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertNull(typedOutput55);
    }

    @Test
    public void test3205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3205");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput37 = request33.body;
        java.lang.String str38 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(typedOutput39);
    }

    @Test
    public void test3206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3206");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.getMethod();
        java.lang.String str12 = request4.url;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = request4.body;
        java.lang.String str15 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3207");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.url;
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request6.headers;
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = request15.getBody();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test3208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3208");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test3209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3209");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("hi!");
        retrofit.converter.Converter converter34 = requestBuilder31.converter;
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder31.getheaders();
        java.lang.Object[] objArray36 = requestBuilder31.getargs();
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        java.util.List<retrofit.client.Header> headerList43 = null;
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("", "", headerList43, typedOutput44);
        retrofit.mime.TypedOutput typedOutput46 = request45.getBody();
        retrofit.mime.TypedOutput typedOutput47 = request45.getBody();
        java.util.List<retrofit.client.Header> headerList48 = request45.headers;
        requestBuilder40.setheaders(headerList48);
        requestBuilder40.setapiUrl("");
        requestBuilder40.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList56 = null;
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("", "", headerList56, typedOutput57);
        java.lang.String str59 = request58.url;
        java.lang.String str60 = request58.url;
        retrofit.mime.TypedOutput typedOutput61 = request58.body;
        java.util.List<retrofit.client.Header> headerList62 = request58.getHeaders();
        java.util.List<retrofit.client.Header> headerList63 = request58.headers;
        java.util.List<retrofit.client.Header> headerList64 = request58.getHeaders();
        retrofit.mime.TypedOutput typedOutput65 = request58.body;
        java.lang.String str66 = request58.url;
        java.lang.String str67 = request58.method;
        java.util.List<retrofit.client.Header> headerList68 = request58.headers;
        requestBuilder40.setheaders(headerList68);
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "hi!", headerList68, typedOutput70);
        requestBuilder31.setheaders(headerList68);
        java.lang.String str73 = requestBuilder31.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput46);
        org.junit.Assert.assertNull(typedOutput47);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(headerList64);
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
    }

    @Test
    public void test3210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3210");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.lang.String str13 = request6.url;
        java.lang.String str14 = request6.url;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = request6.body;
        java.lang.String str17 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test3211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3211");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        requestBuilder52.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput55 = requestBuilder52.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
    }

    @Test
    public void test3212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3212");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray15 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList20 = null;
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList20, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = request22.getBody();
        retrofit.mime.TypedOutput typedOutput24 = request22.getBody();
        java.lang.String str25 = request22.getMethod();
        java.lang.String str26 = request22.method;
        java.lang.String str27 = request22.method;
        java.util.List<retrofit.client.Header> headerList28 = request22.headers;
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", headerList28, typedOutput29);
        requestBuilder3.setheaders(headerList28);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "", headerList32, typedOutput33);
        java.util.List<retrofit.client.Header> headerList35 = request34.headers;
        retrofit.mime.TypedOutput typedOutput36 = request34.body;
        retrofit.mime.TypedOutput typedOutput37 = request34.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNull(typedOutput24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
    }

    @Test
    public void test3213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3213");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.String str27 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray28 = requestBuilder1.args;
        retrofit.converter.Converter converter29 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(headerList30);
    }

    @Test
    public void test3214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3214");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder12.headers;
        requestBuilder1.setheaders(headerList75);
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        retrofit.mime.TypedOutput typedOutput86 = request85.getBody();
        retrofit.mime.TypedOutput typedOutput87 = request85.getBody();
        java.util.List<retrofit.client.Header> headerList88 = request85.headers;
        java.util.List<retrofit.client.Header> headerList89 = request85.getHeaders();
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("hi!", "hi!", headerList89, typedOutput90);
        java.util.List<retrofit.client.Header> headerList92 = request91.headers;
        retrofit.mime.TypedOutput typedOutput93 = null;
        retrofit.client.Request request94 = new retrofit.client.Request("hi!", "", headerList92, typedOutput93);
        java.util.List<retrofit.client.Header> headerList95 = request94.headers;
        requestBuilder1.setheaders(headerList95);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertNotNull(headerList92);
        org.junit.Assert.assertNotNull(headerList95);
    }

    @Test
    public void test3215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3215");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput37 = request33.body;
        retrofit.mime.TypedOutput typedOutput38 = request33.body;
        java.util.List<retrofit.client.Header> headerList39 = request33.headers;
        java.lang.String str40 = request33.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test3216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3216");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.method;
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test3217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3217");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        java.lang.String str17 = request12.getUrl();
        java.lang.String str18 = request12.url;
        java.util.List<retrofit.client.Header> headerList19 = request12.getHeaders();
        java.lang.String str20 = request12.getUrl();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test3218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3218");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.method;
        java.lang.String str36 = request33.getUrl();
        java.util.List<retrofit.client.Header> headerList37 = request33.getHeaders();
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test3219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3219");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList11, typedOutput13);
        java.lang.String str15 = request14.method;
        java.util.List<retrofit.client.Header> headerList16 = request14.headers;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test3220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3220");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "hi!", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = request13.body;
        retrofit.mime.TypedOutput typedOutput15 = request13.getBody();
        retrofit.mime.TypedOutput typedOutput16 = request13.getBody();
        java.util.List<retrofit.client.Header> headerList17 = request13.getHeaders();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test3221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3221");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        retrofit.mime.TypedOutput typedOutput14 = request4.body;
        java.lang.String str15 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3222");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.lang.String str14 = request4.url;
        retrofit.mime.TypedOutput typedOutput15 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput16 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test3223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3223");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.converter.Converter converter33 = requestBuilder32.getconverter();
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.client.Header[] headerArray38 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList39 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList39, headerArray38);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList39, typedOutput41);
        requestBuilder35.setheaders((java.util.List<retrofit.client.Header>) headerList39);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.converter.Converter converter49 = requestBuilder48.getconverter();
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder48.headers;
        requestBuilder48.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList55 = null;
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("", "", headerList55, typedOutput56);
        java.lang.String str58 = request57.getUrl();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder48, request57 };
        requestBuilder35.setargs(objArray59);
        java.lang.Object[] objArray61 = requestBuilder35.getargs();
        retrofit.RequestBuilder requestBuilder62 = requestBuilder32.args(objArray61);
        retrofit.converter.Converter converter63 = requestBuilder32.getconverter();
        requestBuilder32.setapiUrl("");
        java.lang.String str66 = requestBuilder32.apiUrl;
        java.lang.Object[] objArray67 = requestBuilder32.getargs();
        requestBuilder1.setargs(objArray67);
        java.lang.String str69 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray70 = requestBuilder1.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNotNull(headerArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNull(headerList50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(objArray70);
    }

    @Test
    public void test3224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3224");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList10, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.headers;
        java.lang.String str16 = request14.method;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test3225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3225");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.method;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3226");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder29.apiUrl("");
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder29.headers;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.headers(headerList57);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder60.apiUrl("hi!");
        java.lang.Object[] objArray63 = requestBuilder60.args;
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder60.headers;
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder60.getheaders();
        java.util.List<retrofit.client.Header> headerList66 = requestBuilder60.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(headerList64);
        org.junit.Assert.assertNotNull(headerList65);
        org.junit.Assert.assertNotNull(headerList66);
    }

    @Test
    public void test3227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3227");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.Object[] objArray4 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.converter.Converter converter9 = requestBuilder8.getconverter();
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        requestBuilder11.setheaders((java.util.List<retrofit.client.Header>) headerList15);
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.converter.Converter converter25 = requestBuilder24.getconverter();
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder24.headers;
        requestBuilder24.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder24, request33 };
        requestBuilder11.setargs(objArray35);
        java.lang.Object[] objArray37 = requestBuilder11.getargs();
        retrofit.RequestBuilder requestBuilder38 = requestBuilder8.args(objArray37);
        requestBuilder38.setapiUrl("");
        retrofit.converter.Converter converter41 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder38.getheaders();
        java.lang.String str43 = requestBuilder38.apiUrl;
        java.lang.Object[] objArray44 = requestBuilder38.getargs();
        requestBuilder1.setargs(objArray44);
        java.lang.Object[] objArray46 = requestBuilder1.args;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(headerList26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(headerList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(objArray46);
    }

    @Test
    public void test3228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3228");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
    }

    @Test
    public void test3229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3229");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.Object[] objArray30 = requestBuilder1.args;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        requestBuilder1.setargs(objArray56);
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList65 = null;
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("", "", headerList65, typedOutput66);
        retrofit.mime.TypedOutput typedOutput68 = request67.getBody();
        retrofit.mime.TypedOutput typedOutput69 = request67.getBody();
        java.util.List<retrofit.client.Header> headerList70 = request67.headers;
        java.util.List<retrofit.client.Header> headerList71 = request67.getHeaders();
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("hi!", "hi!", headerList71, typedOutput72);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder1.headers(headerList71);
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder74.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNull(typedOutput68);
        org.junit.Assert.assertNull(typedOutput69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(headerList71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerList75);
    }

    @Test
    public void test3230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3230");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = null;
        requestBuilder1.headers = headerList3;
        java.lang.Object[] objArray5 = requestBuilder1.getargs();
        java.lang.String str6 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(objArray5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3231");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder1.headers;
        retrofit.converter.Converter converter45 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder1.getheaders();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(headerList46);
    }

    @Test
    public void test3232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3232");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.lang.String str14 = requestBuilder5.getapiUrl();
        retrofit.RequestBuilder requestBuilder16 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.url;
        java.util.List<retrofit.client.Header> headerList23 = request21.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request21.getHeaders();
        requestBuilder5.headers = headerList24;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList24, typedOutput26);
        java.lang.String str28 = request27.getMethod();
        retrofit.mime.TypedOutput typedOutput29 = request27.getBody();
        java.util.List<retrofit.client.Header> headerList30 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", headerList30, typedOutput31);
        java.util.List<retrofit.client.Header> headerList33 = request32.getHeaders();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(typedOutput29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(typedOutput34);
    }

    @Test
    public void test3233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3233");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request6.body;
        java.lang.String str14 = request6.url;
        java.lang.String str15 = request6.method;
        retrofit.mime.TypedOutput typedOutput16 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test3234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3234");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.url;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test3235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3235");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        java.lang.String str8 = requestBuilder7.apiUrl;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.converter.Converter converter11 = requestBuilder10.getconverter();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        java.lang.Object[] objArray39 = requestBuilder13.getargs();
        retrofit.RequestBuilder requestBuilder40 = requestBuilder10.args(objArray39);
        requestBuilder7.setargs(objArray39);
        requestBuilder1.setargs(objArray39);
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray45 = requestBuilder1.args;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        retrofit.converter.Converter converter63 = null;
        retrofit.RequestBuilder requestBuilder64 = new retrofit.RequestBuilder(converter63);
        retrofit.converter.Converter converter65 = requestBuilder64.getconverter();
        java.util.List<retrofit.client.Header> headerList66 = requestBuilder64.headers;
        requestBuilder64.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        java.lang.String str74 = request73.getUrl();
        java.lang.Object[] objArray75 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder64, request73 };
        requestBuilder51.setargs(objArray75);
        retrofit.RequestBuilder requestBuilder78 = requestBuilder51.apiUrl("");
        java.util.List<retrofit.client.Header> headerList79 = requestBuilder51.headers;
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("", "hi!", headerList79, typedOutput80);
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "hi!", headerList79, typedOutput82);
        retrofit.mime.TypedOutput typedOutput84 = request83.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request83.headers;
        retrofit.RequestBuilder requestBuilder86 = requestBuilder1.headers(headerList85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(headerList66);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(headerList79);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder86);
    }

    @Test
    public void test3236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3236");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        requestBuilder1.apiUrl = "hi!";
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.getBody();
        retrofit.mime.TypedOutput typedOutput53 = request51.getBody();
        java.util.List<retrofit.client.Header> headerList54 = request51.headers;
        java.util.List<retrofit.client.Header> headerList55 = request51.getHeaders();
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("hi!", "hi!", headerList55, typedOutput56);
        java.util.List<retrofit.client.Header> headerList58 = request57.headers;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("hi!", "", headerList58, typedOutput59);
        requestBuilder1.headers = headerList58;
        java.lang.Object[] objArray62 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(headerList55);
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertNotNull(objArray62);
    }

    @Test
    public void test3237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3237");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test3238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3238");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("hi!");
        requestBuilder31.setapiUrl("");
        requestBuilder31.apiUrl = "hi!";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
    }

    @Test
    public void test3239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3239");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.headers;
        retrofit.mime.TypedOutput typedOutput35 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput36 = request33.getBody();
        java.lang.String str37 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput38 = request33.getBody();
        java.lang.String str39 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test3240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3240");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        retrofit.converter.Converter converter9 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        java.util.List<retrofit.client.Header> headerList14 = null;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = request16.getBody();
        retrofit.mime.TypedOutput typedOutput18 = request16.getBody();
        java.util.List<retrofit.client.Header> headerList19 = request16.headers;
        requestBuilder11.setheaders(headerList19);
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        java.lang.String str23 = requestBuilder22.apiUrl;
        retrofit.converter.Converter converter24 = null;
        retrofit.RequestBuilder requestBuilder25 = new retrofit.RequestBuilder(converter24);
        retrofit.converter.Converter converter26 = requestBuilder25.getconverter();
        retrofit.converter.Converter converter27 = null;
        retrofit.RequestBuilder requestBuilder28 = new retrofit.RequestBuilder(converter27);
        retrofit.client.Header[] headerArray31 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList32 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList32, headerArray31);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList32, typedOutput34);
        requestBuilder28.setheaders((java.util.List<retrofit.client.Header>) headerList32);
        retrofit.converter.Converter converter40 = null;
        retrofit.RequestBuilder requestBuilder41 = new retrofit.RequestBuilder(converter40);
        retrofit.converter.Converter converter42 = requestBuilder41.getconverter();
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder41.headers;
        requestBuilder41.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList48 = null;
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("", "", headerList48, typedOutput49);
        java.lang.String str51 = request50.getUrl();
        java.lang.Object[] objArray52 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder41, request50 };
        requestBuilder28.setargs(objArray52);
        java.lang.Object[] objArray54 = requestBuilder28.getargs();
        retrofit.RequestBuilder requestBuilder55 = requestBuilder25.args(objArray54);
        requestBuilder22.setargs(objArray54);
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        java.lang.String str59 = requestBuilder58.apiUrl;
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        retrofit.converter.Converter converter62 = requestBuilder61.getconverter();
        retrofit.converter.Converter converter63 = null;
        retrofit.RequestBuilder requestBuilder64 = new retrofit.RequestBuilder(converter63);
        retrofit.client.Header[] headerArray67 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList68 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList68, headerArray67);
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList68, typedOutput70);
        requestBuilder64.setheaders((java.util.List<retrofit.client.Header>) headerList68);
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        retrofit.converter.Converter converter78 = requestBuilder77.getconverter();
        java.util.List<retrofit.client.Header> headerList79 = requestBuilder77.headers;
        requestBuilder77.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList84 = null;
        retrofit.mime.TypedOutput typedOutput85 = null;
        retrofit.client.Request request86 = new retrofit.client.Request("", "", headerList84, typedOutput85);
        java.lang.String str87 = request86.getUrl();
        java.lang.Object[] objArray88 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder77, request86 };
        requestBuilder64.setargs(objArray88);
        java.lang.Object[] objArray90 = requestBuilder64.getargs();
        retrofit.RequestBuilder requestBuilder91 = requestBuilder61.args(objArray90);
        requestBuilder58.setargs(objArray90);
        retrofit.RequestBuilder requestBuilder93 = requestBuilder22.args(objArray90);
        retrofit.RequestBuilder requestBuilder94 = requestBuilder11.args(objArray90);
        java.lang.String str95 = requestBuilder94.getapiUrl();
        java.util.List<retrofit.client.Header> headerList96 = requestBuilder94.getheaders();
        java.lang.Object[] objArray97 = requestBuilder94.args;
        retrofit.RequestBuilder requestBuilder98 = requestBuilder1.args(objArray97);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNotNull(headerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(requestBuilder55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(converter62);
        org.junit.Assert.assertNotNull(headerArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNull(headerList79);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertNotNull(requestBuilder91);
        org.junit.Assert.assertNotNull(requestBuilder93);
        org.junit.Assert.assertNotNull(requestBuilder94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNotNull(headerList96);
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertNotNull(requestBuilder98);
    }

    @Test
    public void test3241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3241");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.method;
        java.lang.String str11 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3242");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.method;
        java.lang.String str8 = request6.method;
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.getMethod();
        java.lang.String str11 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test3243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3243");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder32 = requestBuilder30.apiUrl("");
        java.lang.Object[] objArray33 = requestBuilder32.getargs();
        java.util.List<retrofit.client.Header> headerList34 = requestBuilder32.getheaders();
        requestBuilder32.setapiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput37 = requestBuilder32.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(headerList34);
    }

    @Test
    public void test3244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3244");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.method;
        java.lang.String str36 = request33.getMethod();
        java.util.List<retrofit.client.Header> headerList37 = request33.getHeaders();
        retrofit.mime.TypedOutput typedOutput38 = request33.body;
        retrofit.mime.TypedOutput typedOutput39 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
    }

    @Test
    public void test3245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3245");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.lang.String str12 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList13 = requestBuilder1.headers;
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test3246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3246");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.String str36 = request33.url;
        retrofit.mime.TypedOutput typedOutput37 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request33.getHeaders();
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
    }

    @Test
    public void test3247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3247");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        java.lang.String str14 = request4.url;
        java.lang.String str15 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput16 = request4.body;
        java.util.List<retrofit.client.Header> headerList17 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test3248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3248");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter40 = null;
        retrofit.RequestBuilder requestBuilder41 = new retrofit.RequestBuilder(converter40);
        retrofit.client.Header[] headerArray44 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList45 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList45, headerArray44);
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList45, typedOutput47);
        requestBuilder41.setheaders((java.util.List<retrofit.client.Header>) headerList45);
        java.lang.String str50 = requestBuilder41.getapiUrl();
        retrofit.RequestBuilder requestBuilder52 = requestBuilder41.apiUrl("");
        java.util.List<retrofit.client.Header> headerList55 = null;
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("", "", headerList55, typedOutput56);
        java.lang.String str58 = request57.url;
        java.util.List<retrofit.client.Header> headerList59 = request57.getHeaders();
        java.util.List<retrofit.client.Header> headerList60 = request57.getHeaders();
        requestBuilder41.headers = headerList60;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList60, typedOutput62);
        requestBuilder1.setheaders(headerList60);
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("");
        retrofit.client.Header[] headerArray70 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList71 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList71, headerArray70);
        retrofit.mime.TypedOutput typedOutput73 = null;
        retrofit.client.Request request74 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList71, typedOutput73);
        java.lang.String str75 = request74.method;
        java.util.List<retrofit.client.Header> headerList76 = request74.headers;
        requestBuilder1.headers = headerList76;
        java.lang.String str78 = requestBuilder1.apiUrl;
        java.lang.String str79 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(headerArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(headerList60);
        org.junit.Assert.assertNotNull(headerList65);
        org.junit.Assert.assertNotNull(headerArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
    }

    @Test
    public void test3249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3249");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.lang.Object[] objArray12 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(objArray12);
    }

    @Test
    public void test3250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3250");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        requestBuilder35.setapiUrl("");
        requestBuilder35.setapiUrl("hi!");
        java.lang.String str42 = requestBuilder35.apiUrl;
        retrofit.converter.Converter converter43 = requestBuilder35.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(converter43);
    }

    @Test
    public void test3251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3251");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder31.apiUrl;
        requestBuilder31.setapiUrl("");
        requestBuilder31.setapiUrl("");
        retrofit.converter.Converter converter37 = requestBuilder31.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(converter37);
    }

    @Test
    public void test3252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3252");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
    }

    @Test
    public void test3253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3253");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.Object[] objArray74 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder76 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput77 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(requestBuilder76);
    }

    @Test
    public void test3254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3254");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.Class<?> wildcardClass11 = headerList10.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3255");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test3256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3256");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder17.apiUrl("");
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder17.headers;
        java.lang.Object[] objArray46 = requestBuilder17.args;
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.client.Header[] headerArray51 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList52 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList52, headerArray51);
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList52, typedOutput54);
        requestBuilder48.setheaders((java.util.List<retrofit.client.Header>) headerList52);
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        retrofit.converter.Converter converter62 = requestBuilder61.getconverter();
        java.util.List<retrofit.client.Header> headerList63 = requestBuilder61.headers;
        requestBuilder61.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList68 = null;
        retrofit.mime.TypedOutput typedOutput69 = null;
        retrofit.client.Request request70 = new retrofit.client.Request("", "", headerList68, typedOutput69);
        java.lang.String str71 = request70.getUrl();
        java.lang.Object[] objArray72 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder61, request70 };
        requestBuilder48.setargs(objArray72);
        requestBuilder17.setargs(objArray72);
        requestBuilder17.apiUrl = "";
        retrofit.RequestBuilder requestBuilder78 = requestBuilder17.apiUrl("hi!");
        java.lang.Object[] objArray79 = requestBuilder17.getargs();
        java.lang.Object[] objArray80 = requestBuilder17.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder1.args(objArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = requestBuilder81.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(headerArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(converter62);
        org.junit.Assert.assertNull(headerList63);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
    }

    @Test
    public void test3257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3257");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getMethod();
        java.lang.String str13 = request4.method;
        java.util.List<retrofit.client.Header> headerList14 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test3258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3258");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        retrofit.converter.Converter converter34 = requestBuilder33.getconverter();
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        retrofit.client.Header[] headerArray39 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList40 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList40, headerArray39);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList40, typedOutput42);
        requestBuilder36.setheaders((java.util.List<retrofit.client.Header>) headerList40);
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.converter.Converter converter50 = requestBuilder49.getconverter();
        java.util.List<retrofit.client.Header> headerList51 = requestBuilder49.headers;
        requestBuilder49.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList56 = null;
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("", "", headerList56, typedOutput57);
        java.lang.String str59 = request58.getUrl();
        java.lang.Object[] objArray60 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder49, request58 };
        requestBuilder36.setargs(objArray60);
        java.lang.Object[] objArray62 = requestBuilder36.getargs();
        retrofit.RequestBuilder requestBuilder63 = requestBuilder33.args(objArray62);
        java.lang.String str64 = requestBuilder33.getapiUrl();
        java.lang.String str65 = requestBuilder33.apiUrl;
        retrofit.RequestBuilder requestBuilder67 = requestBuilder33.apiUrl("");
        java.lang.Object[] objArray68 = new java.lang.Object[] {};
        requestBuilder33.setargs(objArray68);
        java.util.List<retrofit.client.Header> headerList72 = null;
        retrofit.mime.TypedOutput typedOutput73 = null;
        retrofit.client.Request request74 = new retrofit.client.Request("", "", headerList72, typedOutput73);
        java.lang.String str75 = request74.getUrl();
        retrofit.mime.TypedOutput typedOutput76 = request74.body;
        java.util.List<retrofit.client.Header> headerList77 = request74.getHeaders();
        java.util.List<retrofit.client.Header> headerList78 = request74.getHeaders();
        requestBuilder33.setheaders(headerList78);
        java.util.List<retrofit.client.Header> headerList80 = requestBuilder33.getheaders();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder31.headers(headerList80);
        retrofit.converter.Converter converter82 = requestBuilder31.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNotNull(headerArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(headerList51);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(requestBuilder67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(typedOutput76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNotNull(headerList80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNull(converter82);
    }

    @Test
    public void test3259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3259");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter12 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.getBody();
        retrofit.mime.TypedOutput typedOutput19 = request17.getBody();
        java.util.List<retrofit.client.Header> headerList20 = request17.headers;
        java.util.List<retrofit.client.Header> headerList21 = request17.getHeaders();
        java.lang.String str22 = request17.getUrl();
        java.lang.String str23 = request17.getMethod();
        java.lang.String str24 = request17.getUrl();
        java.util.List<retrofit.client.Header> headerList25 = request17.headers;
        requestBuilder1.headers = headerList25;
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request28 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNull(objArray27);
    }

    @Test
    public void test3260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3260");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.getMethod();
        java.lang.String str13 = request4.getMethod();
        java.lang.String str14 = request4.url;
        retrofit.mime.TypedOutput typedOutput15 = request4.body;
        java.lang.String str16 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test3261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3261");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("");
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
    }

    @Test
    public void test3262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3262");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test3263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3263");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.url;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.lang.String str13 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request6.headers;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.lang.String str17 = request16.method;
        java.lang.String str18 = request16.url;
        java.lang.String str19 = request16.method;
        java.util.List<retrofit.client.Header> headerList20 = request16.headers;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(headerList20);
    }

    @Test
    public void test3264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3264");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.String str43 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        requestBuilder45.setheaders((java.util.List<retrofit.client.Header>) headerList49);
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.converter.Converter converter59 = requestBuilder58.getconverter();
        java.util.List<retrofit.client.Header> headerList60 = requestBuilder58.headers;
        requestBuilder58.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList65 = null;
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("", "", headerList65, typedOutput66);
        java.lang.String str68 = request67.getUrl();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder58, request67 };
        requestBuilder45.setargs(objArray69);
        java.lang.Object[] objArray71 = requestBuilder45.getargs();
        java.util.List<retrofit.client.Header> headerList72 = null;
        requestBuilder45.headers = headerList72;
        retrofit.converter.Converter converter74 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder45.getheaders();
        requestBuilder45.apiUrl = "";
        requestBuilder45.setapiUrl("hi!");
        java.lang.Object[] objArray80 = requestBuilder45.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder1.args(objArray80);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request82 = requestBuilder81.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(headerList60);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(headerList75);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
    }

    @Test
    public void test3265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3265");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.headers;
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test3266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3266");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList18 = request14.getHeaders();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList18);
    }

    @Test
    public void test3267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3267");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.Object[] objArray30 = requestBuilder1.args;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        requestBuilder1.setargs(objArray56);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter61 = requestBuilder1.getconverter();
        retrofit.RequestBuilder requestBuilder63 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request64 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNotNull(requestBuilder63);
    }

    @Test
    public void test3268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3268");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.String str36 = request33.url;
        retrofit.mime.TypedOutput typedOutput37 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput38 = request33.body;
        retrofit.mime.TypedOutput typedOutput39 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        retrofit.mime.TypedOutput typedOutput41 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput42 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNull(typedOutput42);
    }

    @Test
    public void test3269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3269");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = request12.body;
        java.lang.String str17 = request12.method;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test3270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3270");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList13 = null;
        requestBuilder1.headers = headerList13;
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request16 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(headerList15);
    }

    @Test
    public void test3271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3271");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.method;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.lang.String str13 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        java.lang.String str15 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3272");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter33 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList34 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder36 = requestBuilder1.apiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(headerList34);
        org.junit.Assert.assertNotNull(requestBuilder36);
    }

    @Test
    public void test3273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3273");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("", "", headerList9, typedOutput10);
        java.lang.String str12 = request11.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request11.getBody();
        java.lang.String str14 = request11.getMethod();
        retrofit.mime.TypedOutput typedOutput15 = request11.getBody();
        java.lang.String str16 = request11.method;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test3274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3274");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        java.util.List<retrofit.client.Header> headerList18 = request17.getHeaders();
        java.lang.String str19 = request17.method;
        java.lang.String str20 = request17.getMethod();
        java.lang.String str21 = request17.method;
        java.util.List<retrofit.client.Header> headerList22 = request17.getHeaders();
        java.lang.String str23 = request17.method;
        java.lang.String str24 = request17.method;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test3275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3275");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = requestBuilder1.converter;
        java.lang.Object[] objArray47 = requestBuilder1.args;
        java.lang.String str48 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter51 = requestBuilder1.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput52 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNull(converter51);
    }

    @Test
    public void test3276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3276");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        java.lang.String str17 = request12.getUrl();
        java.lang.String str18 = request12.url;
        java.util.List<retrofit.client.Header> headerList19 = request12.getHeaders();
        java.lang.String str20 = request12.method;
        java.util.List<retrofit.client.Header> headerList21 = request12.getHeaders();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(headerList21);
    }

    @Test
    public void test3277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3277");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test3278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3278");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.url;
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.getMethod();
        java.lang.String str14 = request4.method;
        retrofit.mime.TypedOutput typedOutput15 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
    }

    @Test
    public void test3279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3279");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        requestBuilder35.setapiUrl("");
        requestBuilder35.setapiUrl("hi!");
        java.lang.Object[] objArray42 = new java.lang.Object[] {};
        retrofit.RequestBuilder requestBuilder43 = requestBuilder35.args(objArray42);
        retrofit.RequestBuilder requestBuilder45 = requestBuilder43.apiUrl("hi!");
        java.lang.String str46 = requestBuilder45.getapiUrl();
        java.lang.String str47 = requestBuilder45.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test3280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3280");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        retrofit.client.Header[] headerArray37 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList38 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList38, headerArray37);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput40);
        requestBuilder34.setheaders((java.util.List<retrofit.client.Header>) headerList38);
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.converter.Converter converter48 = requestBuilder47.getconverter();
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder47.headers;
        requestBuilder47.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "", headerList54, typedOutput55);
        java.lang.String str57 = request56.getUrl();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder47, request56 };
        requestBuilder34.setargs(objArray58);
        java.lang.Object[] objArray60 = requestBuilder34.getargs();
        retrofit.RequestBuilder requestBuilder61 = requestBuilder31.args(objArray60);
        requestBuilder61.setapiUrl("");
        retrofit.converter.Converter converter64 = requestBuilder61.getconverter();
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder61.getheaders();
        java.lang.String str66 = requestBuilder61.apiUrl;
        java.lang.Object[] objArray67 = requestBuilder61.getargs();
        requestBuilder1.setargs(objArray67);
        java.lang.String str69 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.setapiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(headerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(requestBuilder61);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(headerList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test3281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3281");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        java.lang.String str15 = requestBuilder14.apiUrl;
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        retrofit.converter.Converter converter34 = requestBuilder33.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder33.headers;
        requestBuilder33.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        java.lang.String str43 = request42.getUrl();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder33, request42 };
        requestBuilder20.setargs(objArray44);
        java.lang.Object[] objArray46 = requestBuilder20.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder17.args(objArray46);
        requestBuilder14.setargs(objArray46);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        java.lang.String str51 = requestBuilder50.apiUrl;
        retrofit.converter.Converter converter52 = null;
        retrofit.RequestBuilder requestBuilder53 = new retrofit.RequestBuilder(converter52);
        retrofit.converter.Converter converter54 = requestBuilder53.getconverter();
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.client.Header[] headerArray59 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList60 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList60, headerArray59);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList60, typedOutput62);
        requestBuilder56.setheaders((java.util.List<retrofit.client.Header>) headerList60);
        retrofit.converter.Converter converter68 = null;
        retrofit.RequestBuilder requestBuilder69 = new retrofit.RequestBuilder(converter68);
        retrofit.converter.Converter converter70 = requestBuilder69.getconverter();
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder69.headers;
        requestBuilder69.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList76 = null;
        retrofit.mime.TypedOutput typedOutput77 = null;
        retrofit.client.Request request78 = new retrofit.client.Request("", "", headerList76, typedOutput77);
        java.lang.String str79 = request78.getUrl();
        java.lang.Object[] objArray80 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder69, request78 };
        requestBuilder56.setargs(objArray80);
        java.lang.Object[] objArray82 = requestBuilder56.getargs();
        retrofit.RequestBuilder requestBuilder83 = requestBuilder53.args(objArray82);
        requestBuilder50.setargs(objArray82);
        retrofit.RequestBuilder requestBuilder85 = requestBuilder14.args(objArray82);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder3.args(objArray82);
        requestBuilder3.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList89 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("", "hi!", headerList89, typedOutput90);
        java.util.List<retrofit.client.Header> headerList92 = request91.getHeaders();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(headerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNull(headerList71);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertNotNull(headerList92);
    }

    @Test
    public void test3282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3282");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder31.apiUrl;
        requestBuilder31.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder31.getheaders();
        requestBuilder31.apiUrl = "hi!";
        java.lang.Object[] objArray38 = requestBuilder31.getargs();
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        java.lang.String str51 = requestBuilder42.getapiUrl();
        retrofit.RequestBuilder requestBuilder53 = requestBuilder42.apiUrl("");
        java.lang.Object[] objArray54 = requestBuilder42.getargs();
        java.util.List<retrofit.client.Header> headerList59 = null;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        retrofit.mime.TypedOutput typedOutput62 = request61.getBody();
        retrofit.mime.TypedOutput typedOutput63 = request61.getBody();
        java.lang.String str64 = request61.getMethod();
        java.lang.String str65 = request61.method;
        java.lang.String str66 = request61.method;
        java.util.List<retrofit.client.Header> headerList67 = request61.headers;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "hi!", headerList67, typedOutput68);
        requestBuilder42.setheaders(headerList67);
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder42.headers;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "hi!", headerList71, typedOutput72);
        requestBuilder31.setheaders(headerList71);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(objArray54);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(headerList67);
        org.junit.Assert.assertNotNull(headerList71);
    }

    @Test
    public void test3283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3283");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.client.Header[] headerArray40 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList41 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList41, headerArray40);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList41, typedOutput43);
        requestBuilder37.setheaders((java.util.List<retrofit.client.Header>) headerList41);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.converter.Converter converter51 = requestBuilder50.getconverter();
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder50.headers;
        requestBuilder50.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList57 = null;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        java.lang.String str60 = request59.getUrl();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder50, request59 };
        requestBuilder37.setargs(objArray61);
        requestBuilder37.apiUrl = "";
        retrofit.RequestBuilder requestBuilder66 = requestBuilder37.apiUrl("hi!");
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        retrofit.mime.TypedOutput typedOutput74 = request73.getBody();
        retrofit.mime.TypedOutput typedOutput75 = request73.getBody();
        java.util.List<retrofit.client.Header> headerList76 = request73.headers;
        requestBuilder68.setheaders(headerList76);
        retrofit.RequestBuilder requestBuilder78 = requestBuilder37.headers(headerList76);
        java.lang.Object[] objArray79 = requestBuilder37.getargs();
        retrofit.RequestBuilder requestBuilder80 = requestBuilder34.args(objArray79);
        requestBuilder34.apiUrl = "";
        retrofit.RequestBuilder requestBuilder84 = requestBuilder34.apiUrl("hi!");
        retrofit.converter.Converter converter85 = requestBuilder34.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(headerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNull(headerList52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNull(typedOutput75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
    }

    @Test
    public void test3284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3284");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.lang.Object[] objArray4 = requestBuilder3.args;
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.converter.Converter converter7 = requestBuilder6.getconverter();
        java.util.List<retrofit.client.Header> headerList8 = requestBuilder6.headers;
        requestBuilder6.setapiUrl("hi!");
        retrofit.converter.Converter converter11 = requestBuilder6.converter;
        retrofit.RequestBuilder requestBuilder13 = requestBuilder6.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder15 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder17.getheaders();
        java.lang.String str27 = requestBuilder17.getapiUrl();
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        requestBuilder29.apiUrl = "";
        retrofit.RequestBuilder requestBuilder58 = requestBuilder29.apiUrl("hi!");
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        retrofit.mime.TypedOutput typedOutput66 = request65.getBody();
        retrofit.mime.TypedOutput typedOutput67 = request65.getBody();
        java.util.List<retrofit.client.Header> headerList68 = request65.headers;
        requestBuilder60.setheaders(headerList68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder29.headers(headerList68);
        requestBuilder17.headers = headerList68;
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.url;
        java.util.List<retrofit.client.Header> headerList78 = request76.getHeaders();
        requestBuilder17.headers = headerList78;
        retrofit.RequestBuilder requestBuilder80 = requestBuilder13.headers(headerList78);
        requestBuilder3.headers = headerList78;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList78, typedOutput82);
        java.lang.String str84 = request83.getUrl();
        java.util.List<retrofit.client.Header> headerList85 = request83.headers;
        java.util.List<retrofit.client.Header> headerList86 = request83.getHeaders();
        java.lang.String str87 = request83.url;
        java.lang.String str88 = request83.method;
        java.lang.Class<?> wildcardClass89 = request83.getClass();
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(headerList8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNotNull(requestBuilder15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(headerList86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test3285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3285");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.url;
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request17.getHeaders();
        requestBuilder1.headers = headerList20;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.apiUrl("");
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        retrofit.converter.Converter converter28 = requestBuilder27.getconverter();
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.client.Header[] headerArray33 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList34 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList34, headerArray33);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList34, typedOutput36);
        requestBuilder30.setheaders((java.util.List<retrofit.client.Header>) headerList34);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        requestBuilder43.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = null;
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        java.lang.String str53 = request52.getUrl();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder43, request52 };
        requestBuilder30.setargs(objArray54);
        java.lang.Object[] objArray56 = requestBuilder30.getargs();
        retrofit.RequestBuilder requestBuilder57 = requestBuilder27.args(objArray56);
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder27.getheaders();
        java.util.List<retrofit.client.Header> headerList59 = null;
        retrofit.RequestBuilder requestBuilder60 = requestBuilder27.headers(headerList59);
        java.lang.Object[] objArray61 = requestBuilder27.args;
        requestBuilder1.args = objArray61;
        java.util.List<retrofit.client.Header> headerList63 = requestBuilder1.getheaders();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNotNull(headerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(requestBuilder57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(headerList63);
    }

    @Test
    public void test3286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3286");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder5.getheaders();
        java.lang.String str15 = requestBuilder5.getapiUrl();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        requestBuilder17.apiUrl = "";
        retrofit.RequestBuilder requestBuilder46 = requestBuilder17.apiUrl("hi!");
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        retrofit.mime.TypedOutput typedOutput54 = request53.getBody();
        retrofit.mime.TypedOutput typedOutput55 = request53.getBody();
        java.util.List<retrofit.client.Header> headerList56 = request53.headers;
        requestBuilder48.setheaders(headerList56);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder17.headers(headerList56);
        requestBuilder5.headers = headerList56;
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.url;
        java.util.List<retrofit.client.Header> headerList66 = request64.getHeaders();
        requestBuilder5.headers = headerList66;
        java.util.List<retrofit.client.Header> headerList68 = requestBuilder5.headers;
        retrofit.RequestBuilder requestBuilder69 = requestBuilder3.headers(headerList68);
        java.lang.Object[] objArray70 = requestBuilder69.args;
        retrofit.converter.Converter converter71 = requestBuilder69.converter;
        java.lang.Object[] objArray72 = requestBuilder69.getargs();
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(headerList66);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNull(objArray70);
        org.junit.Assert.assertNull(converter71);
        org.junit.Assert.assertNull(objArray72);
    }

    @Test
    public void test3287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3287");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.lang.String str7 = request4.method;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test3288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3288");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.headers;
        retrofit.mime.TypedOutput typedOutput82 = request80.body;
        java.lang.String str83 = request80.method;
        java.lang.String str84 = request80.url;
        java.util.List<retrofit.client.Header> headerList85 = request80.headers;
        java.lang.String str86 = request80.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test3289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3289");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.lang.String str11 = request6.url;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.lang.String str13 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test3290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3290");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.method;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.headers;
        java.lang.String str16 = request14.getUrl();
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(typedOutput17);
    }

    @Test
    public void test3291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3291");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", headerList9, typedOutput10);
        java.lang.String str12 = request11.url;
        java.lang.String str13 = request11.method;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test3292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3292");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder52.apiUrl("");
        retrofit.RequestBuilder requestBuilder56 = requestBuilder52.apiUrl("hi!");
        java.lang.Object[] objArray57 = requestBuilder56.args;
        requestBuilder56.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList60 = requestBuilder56.getheaders();
        java.lang.String str61 = requestBuilder56.apiUrl;
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder56.headers;
        retrofit.RequestBuilder requestBuilder64 = requestBuilder56.apiUrl("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNull(headerList60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertNotNull(requestBuilder64);
    }

    @Test
    public void test3293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3293");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput36 = request33.getBody();
        java.lang.String str37 = request33.getMethod();
        java.lang.String str38 = request33.getUrl();
        java.lang.String str39 = request33.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test3294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3294");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3295");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        requestBuilder35.setapiUrl("");
        requestBuilder35.setapiUrl("hi!");
        java.lang.Object[] objArray42 = new java.lang.Object[] {};
        retrofit.RequestBuilder requestBuilder43 = requestBuilder35.args(objArray42);
        retrofit.RequestBuilder requestBuilder45 = requestBuilder43.apiUrl("hi!");
        java.lang.String str46 = requestBuilder45.getapiUrl();
        java.lang.Class<?> wildcardClass47 = requestBuilder45.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test3296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3296");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder11.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request13 = requestBuilder11.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(headerList12);
    }

    @Test
    public void test3297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3297");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.String str85 = requestBuilder84.getapiUrl();
        java.util.List<retrofit.client.Header> headerList86 = requestBuilder84.getheaders();
        java.lang.Object[] objArray87 = requestBuilder84.args;
        requestBuilder84.setapiUrl("");
        java.lang.Object[] objArray90 = requestBuilder84.getargs();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(headerList86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertNotNull(objArray90);
    }

    @Test
    public void test3298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3298");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.body;
        java.lang.String str43 = request41.url;
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test3299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3299");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.String str36 = request33.url;
        retrofit.mime.TypedOutput typedOutput37 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput38 = request33.body;
        java.lang.String str39 = request33.url;
        java.lang.String str40 = request33.getUrl();
        java.lang.Class<?> wildcardClass41 = request33.getClass();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test3300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3300");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.Object[] objArray4 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "hi!";
        retrofit.converter.Converter converter7 = requestBuilder1.converter;
        java.lang.Object[] objArray8 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList9 = requestBuilder1.getheaders();
        java.lang.String str10 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(objArray8);
        org.junit.Assert.assertNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test3301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3301");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList13 = null;
        requestBuilder1.headers = headerList13;
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        requestBuilder17.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder17.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder17.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        java.lang.String str78 = requestBuilder49.getapiUrl();
        java.lang.Object[] objArray79 = requestBuilder49.getargs();
        requestBuilder47.args = objArray79;
        requestBuilder1.setargs(objArray79);
        java.util.List<retrofit.client.Header> headerList82 = requestBuilder1.headers;
        java.lang.String str83 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList84 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request85 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNull(headerList82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(headerList84);
    }

    @Test
    public void test3302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3302");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.body;
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        java.util.List<retrofit.client.Header> headerList18 = request14.headers;
        java.lang.String str19 = request14.getMethod();
        java.lang.Class<?> wildcardClass20 = request14.getClass();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3303");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder45.headers;
        retrofit.converter.Converter converter47 = requestBuilder45.converter;
        requestBuilder45.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = requestBuilder45.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNull(converter47);
    }

    @Test
    public void test3304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3304");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.lang.String str13 = request6.url;
        java.lang.String str14 = request6.url;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        java.lang.String str16 = request6.getMethod();
        java.lang.String str17 = request6.method;
        retrofit.mime.TypedOutput typedOutput18 = request6.body;
        java.lang.String str19 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test3305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3305");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter34 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(converter34);
    }

    @Test
    public void test3306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3306");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.headers;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "", headerList19, typedOutput24);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test3307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3307");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.url;
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3308");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.url;
        java.lang.String str10 = request8.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request8.body;
        java.util.List<retrofit.client.Header> headerList12 = request8.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.headers;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test3309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3309");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        java.lang.String str34 = requestBuilder3.getapiUrl();
        java.lang.String str35 = requestBuilder3.apiUrl;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray38 = new java.lang.Object[] {};
        requestBuilder3.setargs(objArray38);
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList42, typedOutput43);
        java.lang.String str45 = request44.getUrl();
        retrofit.mime.TypedOutput typedOutput46 = request44.body;
        java.util.List<retrofit.client.Header> headerList47 = request44.getHeaders();
        java.util.List<retrofit.client.Header> headerList48 = request44.getHeaders();
        requestBuilder3.setheaders(headerList48);
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        java.lang.String str53 = request52.getUrl();
        java.util.List<retrofit.client.Header> headerList54 = request52.headers;
        retrofit.mime.TypedOutput typedOutput55 = request52.getBody();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(typedOutput46);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertNotNull(headerList50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNull(typedOutput55);
    }

    @Test
    public void test3310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3310");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.lang.String str14 = request4.getUrl();
        java.lang.String str15 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3311");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        requestBuilder3.setheaders(headerList40);
        requestBuilder3.apiUrl = "";
        java.lang.Object[] objArray45 = requestBuilder3.args;
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        java.util.List<retrofit.client.Header> headerList49 = request48.headers;
        java.util.List<retrofit.client.Header> headerList50 = request48.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(headerList49);
        org.junit.Assert.assertNotNull(headerList50);
    }

    @Test
    public void test3312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3312");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder32 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(requestBuilder32);
    }

    @Test
    public void test3313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3313");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.url;
        java.lang.String str12 = request4.getUrl();
        java.lang.String str13 = request4.getMethod();
        java.lang.String str14 = request4.url;
        retrofit.mime.TypedOutput typedOutput15 = request4.body;
        retrofit.mime.TypedOutput typedOutput16 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test3314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3314");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        java.lang.Object[] objArray86 = null;
        retrofit.RequestBuilder requestBuilder87 = requestBuilder84.args(objArray86);
        requestBuilder84.setapiUrl("hi!");
        java.lang.Object[] objArray90 = requestBuilder84.getargs();
        java.lang.Object[] objArray91 = requestBuilder84.args;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(objArray90);
        org.junit.Assert.assertNull(objArray91);
    }

    @Test
    public void test3315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3315");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = request14.getBody();
        java.lang.String str18 = request14.url;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test3316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3316");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.headers;
        retrofit.mime.TypedOutput typedOutput82 = request80.body;
        java.lang.String str83 = request80.url;
        retrofit.mime.TypedOutput typedOutput84 = request80.getBody();
        java.lang.String str85 = request80.url;
        retrofit.mime.TypedOutput typedOutput86 = request80.getBody();
        java.lang.String str87 = request80.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
    }

    @Test
    public void test3317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3317");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        java.lang.Object[] objArray10 = requestBuilder1.getargs();
        java.lang.String str11 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray12 = null;
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.args(objArray12);
        java.lang.String str14 = requestBuilder13.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(objArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test3318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3318");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder49 = requestBuilder47.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        retrofit.mime.TypedOutput typedOutput55 = request54.getBody();
        java.lang.String str56 = request54.url;
        java.lang.String str57 = request54.url;
        java.lang.String str58 = request54.url;
        java.lang.String str59 = request54.method;
        java.util.List<retrofit.client.Header> headerList60 = request54.headers;
        retrofit.RequestBuilder requestBuilder61 = requestBuilder49.headers(headerList60);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request62 = requestBuilder49.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(headerList60);
        org.junit.Assert.assertNotNull(requestBuilder61);
    }

    @Test
    public void test3319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3319");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        requestBuilder84.setapiUrl("hi!");
        retrofit.converter.Converter converter88 = requestBuilder84.converter;
        requestBuilder84.setapiUrl("hi!");
        java.lang.String str91 = requestBuilder84.getapiUrl();
        retrofit.converter.Converter converter92 = requestBuilder84.converter;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNull(converter88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNull(converter92);
    }

    @Test
    public void test3320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3320");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.client.Header[] headerArray40 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList41 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList41, headerArray40);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList41, typedOutput43);
        requestBuilder37.setheaders((java.util.List<retrofit.client.Header>) headerList41);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.converter.Converter converter51 = requestBuilder50.getconverter();
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder50.headers;
        requestBuilder50.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList57 = null;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        java.lang.String str60 = request59.getUrl();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder50, request59 };
        requestBuilder37.setargs(objArray61);
        requestBuilder37.apiUrl = "";
        retrofit.RequestBuilder requestBuilder66 = requestBuilder37.apiUrl("hi!");
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        retrofit.mime.TypedOutput typedOutput74 = request73.getBody();
        retrofit.mime.TypedOutput typedOutput75 = request73.getBody();
        java.util.List<retrofit.client.Header> headerList76 = request73.headers;
        requestBuilder68.setheaders(headerList76);
        retrofit.RequestBuilder requestBuilder78 = requestBuilder37.headers(headerList76);
        java.lang.Object[] objArray79 = requestBuilder37.getargs();
        retrofit.RequestBuilder requestBuilder80 = requestBuilder34.args(objArray79);
        requestBuilder34.apiUrl = "";
        java.lang.String str83 = requestBuilder34.getapiUrl();
        retrofit.RequestBuilder requestBuilder85 = requestBuilder34.apiUrl("hi!");
        retrofit.converter.Converter converter86 = requestBuilder34.converter;
        requestBuilder34.setapiUrl("hi!");
        java.lang.Class<?> wildcardClass89 = requestBuilder34.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(headerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNull(headerList52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNull(typedOutput75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNull(converter86);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test3321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3321");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        java.lang.String str82 = request80.url;
        java.lang.String str83 = request80.method;
        java.lang.String str84 = request80.getUrl();
        java.util.List<retrofit.client.Header> headerList85 = request80.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(headerList85);
    }

    @Test
    public void test3322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3322");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        java.lang.String str41 = request33.method;
        retrofit.mime.TypedOutput typedOutput42 = request33.body;
        java.lang.String str43 = request33.getUrl();
        java.lang.String str44 = request33.method;
        retrofit.mime.TypedOutput typedOutput45 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList46 = request33.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(typedOutput45);
        org.junit.Assert.assertNotNull(headerList46);
    }

    @Test
    public void test3323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3323");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        retrofit.converter.Converter converter92 = requestBuilder88.converter;
        retrofit.RequestBuilder requestBuilder94 = requestBuilder88.apiUrl("hi!");
        requestBuilder88.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList97 = requestBuilder88.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = requestBuilder88.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNull(converter92);
        org.junit.Assert.assertNotNull(requestBuilder94);
        org.junit.Assert.assertNotNull(headerList97);
    }

    @Test
    public void test3324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3324");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        java.lang.Object[] objArray16 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(objArray16);
    }

    @Test
    public void test3325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3325");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.String str43 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        requestBuilder45.setheaders((java.util.List<retrofit.client.Header>) headerList49);
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.converter.Converter converter59 = requestBuilder58.getconverter();
        java.util.List<retrofit.client.Header> headerList60 = requestBuilder58.headers;
        requestBuilder58.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList65 = null;
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("", "", headerList65, typedOutput66);
        java.lang.String str68 = request67.getUrl();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder58, request67 };
        requestBuilder45.setargs(objArray69);
        java.lang.Object[] objArray71 = requestBuilder45.getargs();
        java.util.List<retrofit.client.Header> headerList72 = null;
        requestBuilder45.headers = headerList72;
        retrofit.converter.Converter converter74 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder45.getheaders();
        requestBuilder45.apiUrl = "";
        requestBuilder45.setapiUrl("hi!");
        java.lang.Object[] objArray80 = requestBuilder45.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter82 = requestBuilder81.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(headerList60);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(headerList75);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNull(converter82);
    }

    @Test
    public void test3326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3326");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.method;
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request6.body;
        java.util.List<retrofit.client.Header> headerList13 = request6.headers;
        java.util.List<retrofit.client.Header> headerList14 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test3327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3327");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test3328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3328");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.util.List<retrofit.client.Header> headerList40 = request33.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
    }

    @Test
    public void test3329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3329");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.lang.String str11 = request6.url;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test3330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3330");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        requestBuilder88.apiUrl = "";
        retrofit.RequestBuilder requestBuilder95 = requestBuilder88.apiUrl("");
        retrofit.RequestBuilder requestBuilder97 = requestBuilder88.apiUrl("hi!");
        requestBuilder88.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder95);
        org.junit.Assert.assertNotNull(requestBuilder97);
    }

    @Test
    public void test3331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3331");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.lang.Class<?> wildcardClass13 = headerList12.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3332");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput40);
        java.lang.String str42 = request41.method;
        java.lang.String str43 = request41.getUrl();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        java.util.List<retrofit.client.Header> headerList45 = request41.headers;
        java.util.List<retrofit.client.Header> headerList46 = request41.getHeaders();
        java.lang.String str47 = request41.getMethod();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test3333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3333");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        requestBuilder5.setheaders(headerList13);
        retrofit.converter.Converter converter15 = requestBuilder5.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = null;
        requestBuilder5.setheaders(headerList16);
        requestBuilder5.apiUrl = "hi!";
        requestBuilder5.apiUrl = "";
        retrofit.converter.Converter converter22 = requestBuilder5.converter;
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = request29.getBody();
        retrofit.mime.TypedOutput typedOutput31 = request29.getBody();
        java.util.List<retrofit.client.Header> headerList32 = request29.headers;
        requestBuilder24.setheaders(headerList32);
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.client.Header[] headerArray38 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList39 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList39, headerArray38);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList39, typedOutput41);
        requestBuilder35.setheaders((java.util.List<retrofit.client.Header>) headerList39);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.converter.Converter converter49 = requestBuilder48.getconverter();
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder48.headers;
        requestBuilder48.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList55 = null;
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("", "", headerList55, typedOutput56);
        java.lang.String str58 = request57.getUrl();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder48, request57 };
        requestBuilder35.setargs(objArray59);
        requestBuilder24.args = objArray59;
        requestBuilder5.setargs(objArray59);
        retrofit.RequestBuilder requestBuilder63 = requestBuilder3.args(objArray59);
        java.lang.String str64 = requestBuilder3.getapiUrl();
        java.lang.String str65 = requestBuilder3.apiUrl;
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertNull(typedOutput30);
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertNotNull(headerArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNull(headerList50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test3334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3334");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3335");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.method;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test3336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3336");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter86 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNull(converter86);
    }

    @Test
    public void test3337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3337");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        retrofit.converter.Converter converter92 = requestBuilder88.converter;
        retrofit.RequestBuilder requestBuilder94 = requestBuilder88.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList95 = requestBuilder94.headers;
        retrofit.converter.Converter converter96 = requestBuilder94.converter;
        retrofit.converter.Converter converter97 = requestBuilder94.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNull(converter92);
        org.junit.Assert.assertNotNull(requestBuilder94);
        org.junit.Assert.assertNotNull(headerList95);
        org.junit.Assert.assertNull(converter96);
        org.junit.Assert.assertNull(converter97);
    }

    @Test
    public void test3338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3338");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        retrofit.converter.Converter converter8 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(objArray6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNull(converter8);
    }

    @Test
    public void test3339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3339");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3340");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.lang.String str13 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3341");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        java.lang.String str37 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder1.getheaders();
        requestBuilder1.apiUrl = "";
        java.lang.String str41 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter42 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(headerList38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(converter42);
    }

    @Test
    public void test3342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3342");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.lang.String str10 = request4.method;
        java.lang.String str11 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3343");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.method;
        java.lang.String str11 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3344");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        java.lang.String str36 = request35.url;
        java.lang.String str37 = request35.getMethod();
        retrofit.mime.TypedOutput typedOutput38 = request35.getBody();
        java.lang.String str39 = request35.getMethod();
        java.util.List<retrofit.client.Header> headerList40 = request35.headers;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "", headerList40, typedOutput41);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(headerList40);
    }

    @Test
    public void test3345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3345");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test3346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3346");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput12 = request6.body;
        java.lang.String str13 = request6.url;
        java.lang.String str14 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput15 = request6.body;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(typedOutput15);
    }

    @Test
    public void test3347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3347");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        java.lang.String str14 = request12.getMethod();
        java.lang.String str15 = request12.url;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3348");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        java.lang.String str14 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput15 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput16 = request4.body;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = typedOutput16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test3349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3349");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.lang.String str42 = requestBuilder37.apiUrl;
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder37.headers;
        java.lang.String str44 = requestBuilder37.getapiUrl();
        java.lang.String str45 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        java.lang.String str73 = requestBuilder47.getapiUrl();
        retrofit.client.Header[] headerArray76 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList77 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList77, headerArray76);
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        requestBuilder47.setheaders(headerList81);
        java.lang.Object[] objArray83 = requestBuilder47.getargs();
        retrofit.RequestBuilder requestBuilder84 = requestBuilder37.args(objArray83);
        requestBuilder1.setargs(objArray83);
        java.util.List<retrofit.client.Header> headerList86 = requestBuilder1.getheaders();
        java.lang.Object[] objArray87 = requestBuilder1.args;
        java.lang.String str88 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList89 = requestBuilder1.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(headerArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(headerList86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(headerList89);
    }

    @Test
    public void test3350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3350");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList18 = null;
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = request20.getBody();
        retrofit.mime.TypedOutput typedOutput22 = request20.getBody();
        java.lang.String str23 = request20.getMethod();
        java.lang.String str24 = request20.method;
        java.lang.String str25 = request20.method;
        java.util.List<retrofit.client.Header> headerList26 = request20.headers;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "hi!", headerList26, typedOutput27);
        requestBuilder1.setheaders(headerList26);
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        java.lang.String str41 = requestBuilder32.getapiUrl();
        retrofit.RequestBuilder requestBuilder43 = requestBuilder32.apiUrl("");
        java.lang.Object[] objArray44 = requestBuilder32.getargs();
        retrofit.converter.Converter converter45 = requestBuilder32.getconverter();
        java.lang.Object[] objArray46 = requestBuilder32.getargs();
        retrofit.converter.Converter converter47 = requestBuilder32.getconverter();
        java.util.List<retrofit.client.Header> headerList48 = requestBuilder32.headers;
        requestBuilder1.headers = headerList48;
        java.lang.Object[] objArray50 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList51 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNull(objArray44);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(objArray46);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertNull(objArray50);
        org.junit.Assert.assertNotNull(headerList51);
    }

    @Test
    public void test3351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3351");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        java.lang.String str15 = requestBuilder14.apiUrl;
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        retrofit.converter.Converter converter34 = requestBuilder33.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder33.headers;
        requestBuilder33.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        java.lang.String str43 = request42.getUrl();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder33, request42 };
        requestBuilder20.setargs(objArray44);
        java.lang.Object[] objArray46 = requestBuilder20.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder17.args(objArray46);
        requestBuilder14.setargs(objArray46);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        java.lang.String str51 = requestBuilder50.apiUrl;
        retrofit.converter.Converter converter52 = null;
        retrofit.RequestBuilder requestBuilder53 = new retrofit.RequestBuilder(converter52);
        retrofit.converter.Converter converter54 = requestBuilder53.getconverter();
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.client.Header[] headerArray59 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList60 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList60, headerArray59);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList60, typedOutput62);
        requestBuilder56.setheaders((java.util.List<retrofit.client.Header>) headerList60);
        retrofit.converter.Converter converter68 = null;
        retrofit.RequestBuilder requestBuilder69 = new retrofit.RequestBuilder(converter68);
        retrofit.converter.Converter converter70 = requestBuilder69.getconverter();
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder69.headers;
        requestBuilder69.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList76 = null;
        retrofit.mime.TypedOutput typedOutput77 = null;
        retrofit.client.Request request78 = new retrofit.client.Request("", "", headerList76, typedOutput77);
        java.lang.String str79 = request78.getUrl();
        java.lang.Object[] objArray80 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder69, request78 };
        requestBuilder56.setargs(objArray80);
        java.lang.Object[] objArray82 = requestBuilder56.getargs();
        retrofit.RequestBuilder requestBuilder83 = requestBuilder53.args(objArray82);
        requestBuilder50.setargs(objArray82);
        retrofit.RequestBuilder requestBuilder85 = requestBuilder14.args(objArray82);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder3.args(objArray82);
        java.lang.String str87 = requestBuilder86.getapiUrl();
        java.util.List<retrofit.client.Header> headerList88 = requestBuilder86.getheaders();
        retrofit.mime.TypedOutput typedOutput89 = null;
        retrofit.client.Request request90 = new retrofit.client.Request("hi!", "", headerList88, typedOutput89);
        java.lang.String str91 = request90.method;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(headerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNull(headerList71);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test3352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3352");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        java.lang.String str6 = request4.method;
        java.lang.String str7 = request4.method;
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3353");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        java.lang.String str10 = request8.url;
        java.lang.String str11 = request8.method;
        java.util.List<retrofit.client.Header> headerList12 = request8.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList12, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "", headerList12, typedOutput15);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test3354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3354");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder42.apiUrl("");
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder42.headers;
        requestBuilder1.setheaders(headerList70);
        java.util.List<retrofit.client.Header> headerList72 = requestBuilder1.headers;
        java.lang.Object[] objArray73 = requestBuilder1.getargs();
        java.lang.Class<?> wildcardClass74 = objArray73.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(headerList72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test3355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3355");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        retrofit.mime.TypedOutput typedOutput16 = request12.body;
        retrofit.mime.TypedOutput typedOutput17 = request12.body;
        java.lang.String str18 = request12.getMethod();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test3356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3356");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test3357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3357");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        requestBuilder13.apiUrl = "";
        retrofit.RequestBuilder requestBuilder42 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        retrofit.mime.TypedOutput typedOutput51 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder44.setheaders(headerList52);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder13.headers(headerList52);
        java.util.List<retrofit.client.Header> headerList55 = requestBuilder13.getheaders();
        requestBuilder1.headers = headerList55;
        retrofit.RequestBuilder requestBuilder58 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter59 = requestBuilder58.converter;
        java.lang.String str60 = requestBuilder58.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNotNull(headerList55);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test3358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3358");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.lang.String str13 = request4.getUrl();
        java.lang.String str14 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3359");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter35 = requestBuilder1.converter;
        retrofit.converter.Converter converter36 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder1.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertNull(headerList38);
    }

    @Test
    public void test3360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3360");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.lang.String str13 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3361");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        retrofit.mime.TypedOutput typedOutput16 = request12.body;
        java.lang.String str17 = request12.getUrl();
        java.lang.String str18 = request12.getMethod();
        retrofit.mime.TypedOutput typedOutput19 = request12.body;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(typedOutput19);
    }

    @Test
    public void test3362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3362");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test3363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3363");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.headers;
        java.lang.String str16 = request14.url;
        java.lang.String str17 = request14.getMethod();
        retrofit.mime.TypedOutput typedOutput18 = request14.body;
        java.util.List<retrofit.client.Header> headerList19 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.getHeaders();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList22);
    }

    @Test
    public void test3364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3364");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        requestBuilder13.setapiUrl("hi!");
        retrofit.converter.Converter converter16 = requestBuilder13.getconverter();
        java.lang.String str17 = requestBuilder13.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test3365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3365");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder3.getheaders();
        java.lang.String str13 = requestBuilder3.apiUrl;
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder3.getheaders();
        requestBuilder3.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList17 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList17, typedOutput18);
        java.lang.Class<?> wildcardClass20 = request19.getClass();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3366");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3367");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request45 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(headerList44);
    }

    @Test
    public void test3368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3368");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.body;
        java.util.List<retrofit.client.Header> headerList8 = request6.headers;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", headerList8, typedOutput9);
        java.lang.String str11 = request10.method;
        java.lang.String str12 = request10.getMethod();
        java.lang.String str13 = request10.url;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test3369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3369");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.lang.String str33 = requestBuilder1.getapiUrl();
        java.lang.String str34 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.apiUrl = "";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test3370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3370");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter35 = requestBuilder1.converter;
        retrofit.converter.Converter converter36 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(converter36);
    }

    @Test
    public void test3371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3371");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3372");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.method;
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.lang.String str13 = request6.getMethod();
        java.lang.String str14 = request6.getUrl();
        java.lang.String str15 = request6.getMethod();
        java.lang.String str16 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test3373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3373");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        retrofit.converter.Converter converter40 = requestBuilder39.getconverter();
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        java.lang.Object[] objArray68 = requestBuilder42.getargs();
        retrofit.RequestBuilder requestBuilder69 = requestBuilder39.args(objArray68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder37.args(objArray68);
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder37.headers;
        retrofit.RequestBuilder requestBuilder73 = requestBuilder37.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder75 = requestBuilder37.apiUrl("hi!");
        java.lang.String str76 = requestBuilder75.getapiUrl();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(headerList71);
        org.junit.Assert.assertNotNull(requestBuilder73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
    }

    @Test
    public void test3374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3374");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request23.body;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder10, typedOutput25 };
        requestBuilder3.setargs(objArray26);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        requestBuilder44.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        java.lang.Object[] objArray55 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder44, request53 };
        requestBuilder31.setargs(objArray55);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder31.apiUrl("");
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder31.headers;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder3.headers(headerList59);
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "hi!", headerList59, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.String str66 = request64.url;
        retrofit.mime.TypedOutput typedOutput67 = request64.body;
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNull(typedOutput67);
    }

    @Test
    public void test3375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3375");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.method;
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "", headerList13, typedOutput14);
        java.lang.String str16 = request15.getMethod();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test3376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3376");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3377");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.url;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.lang.String str13 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request6.headers;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        java.lang.String str18 = request16.getUrl();
        java.lang.String str19 = request16.url;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test3378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3378");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder1.getheaders();
        java.lang.Object[] objArray58 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList61 = null;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList61, typedOutput62);
        retrofit.mime.TypedOutput typedOutput64 = request63.getBody();
        retrofit.mime.TypedOutput typedOutput65 = request63.getBody();
        java.lang.String str66 = request63.getMethod();
        retrofit.mime.TypedOutput typedOutput67 = request63.body;
        java.util.List<retrofit.client.Header> headerList68 = request63.headers;
        java.lang.String str69 = request63.getMethod();
        retrofit.mime.TypedOutput typedOutput70 = request63.getBody();
        java.util.List<retrofit.client.Header> headerList71 = request63.headers;
        requestBuilder1.headers = headerList71;
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNull(typedOutput64);
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(typedOutput70);
        org.junit.Assert.assertNotNull(headerList71);
    }

    @Test
    public void test3379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3379");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.url;
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        java.lang.String str14 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3380");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        java.lang.String str82 = request80.url;
        java.util.List<retrofit.client.Header> headerList83 = request80.getHeaders();
        retrofit.mime.TypedOutput typedOutput84 = request80.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertNull(typedOutput84);
    }

    @Test
    public void test3381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3381");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.client.Header[] headerArray40 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList41 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList41, headerArray40);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList41, typedOutput43);
        requestBuilder37.setheaders((java.util.List<retrofit.client.Header>) headerList41);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.converter.Converter converter51 = requestBuilder50.getconverter();
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder50.headers;
        requestBuilder50.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList57 = null;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        java.lang.String str60 = request59.getUrl();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder50, request59 };
        requestBuilder37.setargs(objArray61);
        requestBuilder37.apiUrl = "";
        retrofit.RequestBuilder requestBuilder66 = requestBuilder37.apiUrl("hi!");
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        retrofit.mime.TypedOutput typedOutput74 = request73.getBody();
        retrofit.mime.TypedOutput typedOutput75 = request73.getBody();
        java.util.List<retrofit.client.Header> headerList76 = request73.headers;
        requestBuilder68.setheaders(headerList76);
        retrofit.RequestBuilder requestBuilder78 = requestBuilder37.headers(headerList76);
        java.lang.Object[] objArray79 = requestBuilder37.getargs();
        retrofit.RequestBuilder requestBuilder80 = requestBuilder34.args(objArray79);
        requestBuilder34.apiUrl = "";
        java.lang.String str83 = requestBuilder34.getapiUrl();
        retrofit.converter.Converter converter84 = requestBuilder34.converter;
        java.lang.String str85 = requestBuilder34.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(headerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNull(headerList52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNull(typedOutput75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(converter84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test3382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3382");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        java.lang.String str18 = request14.method;
        retrofit.mime.TypedOutput typedOutput19 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput20 = request14.getBody();
        java.util.List<retrofit.client.Header> headerList21 = request14.getHeaders();
        java.lang.String str22 = request14.url;
        java.util.List<retrofit.client.Header> headerList23 = request14.getHeaders();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(headerList23);
    }

    @Test
    public void test3383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3383");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        requestBuilder11.setheaders((java.util.List<retrofit.client.Header>) headerList15);
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.converter.Converter converter25 = requestBuilder24.getconverter();
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder24.headers;
        requestBuilder24.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder24, request33 };
        requestBuilder11.setargs(objArray35);
        java.lang.String str37 = requestBuilder11.getapiUrl();
        retrofit.client.Header[] headerArray40 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList41 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList41, headerArray40);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList41, typedOutput43);
        java.util.List<retrofit.client.Header> headerList45 = request44.getHeaders();
        requestBuilder11.setheaders(headerList45);
        java.lang.Object[] objArray47 = requestBuilder11.getargs();
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.args(objArray47);
        java.lang.String str49 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder1.getheaders();
        java.lang.String str51 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(headerList26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(headerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNull(headerList50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test3384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3384");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        java.lang.String str42 = request41.url;
        java.lang.String str43 = request41.url;
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        java.util.List<retrofit.client.Header> headerList45 = request41.getHeaders();
        retrofit.RequestBuilder requestBuilder46 = requestBuilder1.headers(headerList45);
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(requestBuilder46);
    }

    @Test
    public void test3385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3385");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("");
        requestBuilder1.apiUrl = "";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(headerList26);
    }

    @Test
    public void test3386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3386");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        java.util.List<retrofit.client.Header> headerList34 = requestBuilder3.getheaders();
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.RequestBuilder requestBuilder36 = requestBuilder3.headers(headerList35);
        retrofit.converter.Converter converter37 = requestBuilder36.getconverter();
        retrofit.client.Header[] headerArray42 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList43 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList43, headerArray42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList43, typedOutput45);
        retrofit.mime.TypedOutput typedOutput47 = request46.getBody();
        retrofit.mime.TypedOutput typedOutput48 = request46.getBody();
        retrofit.mime.TypedOutput typedOutput49 = request46.body;
        java.util.List<retrofit.client.Header> headerList50 = request46.getHeaders();
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", headerList50, typedOutput51);
        requestBuilder36.headers = headerList50;
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "", headerList50, typedOutput54);
        java.lang.String str56 = request55.url;
        java.lang.String str57 = request55.url;
        java.lang.String str58 = request55.method;
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(headerList34);
        org.junit.Assert.assertNotNull(requestBuilder36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNotNull(headerArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(typedOutput47);
        org.junit.Assert.assertNull(typedOutput48);
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNotNull(headerList50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test3387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3387");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        retrofit.converter.Converter converter40 = requestBuilder39.getconverter();
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        java.lang.Object[] objArray68 = requestBuilder42.getargs();
        retrofit.RequestBuilder requestBuilder69 = requestBuilder39.args(objArray68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder37.args(objArray68);
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder37.headers;
        retrofit.RequestBuilder requestBuilder73 = requestBuilder37.apiUrl("hi!");
        java.lang.Class<?> wildcardClass74 = requestBuilder37.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(headerList71);
        org.junit.Assert.assertNotNull(requestBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test3388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3388");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder84.apiUrl("");
        retrofit.RequestBuilder requestBuilder88 = requestBuilder86.apiUrl("");
        retrofit.converter.Converter converter89 = requestBuilder86.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNull(converter89);
    }

    @Test
    public void test3389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3389");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.headers;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.method;
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList14 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request6.headers;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test3390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3390");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.Object[] objArray28 = null;
        requestBuilder1.args = objArray28;
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.client.Header[] headerArray38 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList39 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList39, headerArray38);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList39, typedOutput41);
        requestBuilder35.setheaders((java.util.List<retrofit.client.Header>) headerList39);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.converter.Converter converter49 = requestBuilder48.getconverter();
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder48.headers;
        requestBuilder48.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList55 = null;
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("", "", headerList55, typedOutput56);
        java.lang.String str58 = request57.getUrl();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder48, request57 };
        requestBuilder35.setargs(objArray59);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder35.apiUrl("");
        java.util.List<retrofit.client.Header> headerList63 = requestBuilder35.headers;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("hi!", "hi!", headerList63, typedOutput64);
        java.lang.String str66 = request65.url;
        retrofit.mime.TypedOutput typedOutput67 = request65.body;
        java.util.List<retrofit.client.Header> headerList68 = request65.getHeaders();
        retrofit.mime.TypedOutput typedOutput69 = null;
        retrofit.client.Request request70 = new retrofit.client.Request("", "", headerList68, typedOutput69);
        requestBuilder1.setheaders(headerList68);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(headerArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNull(headerList50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(headerList68);
    }

    @Test
    public void test3391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3391");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        java.lang.String str41 = request33.method;
        retrofit.mime.TypedOutput typedOutput42 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
    }

    @Test
    public void test3392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3392");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.method;
        retrofit.mime.TypedOutput typedOutput36 = request33.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNull(typedOutput36);
    }

    @Test
    public void test3393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3393");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        java.lang.String str15 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3394");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter12 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.client.Header[] headerArray19 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList20 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList20, headerArray19);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList20, typedOutput22);
        requestBuilder16.setheaders((java.util.List<retrofit.client.Header>) headerList20);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.converter.Converter converter30 = requestBuilder29.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder29.headers;
        requestBuilder29.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.lang.String str39 = request38.getUrl();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder29, request38 };
        requestBuilder16.setargs(objArray40);
        java.lang.Object[] objArray42 = requestBuilder16.getargs();
        java.lang.String str43 = requestBuilder16.apiUrl;
        java.util.List<retrofit.client.Header> headerList46 = null;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        java.lang.String str49 = request48.getUrl();
        retrofit.mime.TypedOutput typedOutput50 = request48.body;
        java.util.List<retrofit.client.Header> headerList51 = request48.getHeaders();
        requestBuilder16.setheaders(headerList51);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "hi!", headerList51, typedOutput53);
        retrofit.RequestBuilder requestBuilder55 = requestBuilder1.headers(headerList51);
        java.lang.Object[] objArray56 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder1.getheaders();
        java.lang.Class<?> wildcardClass58 = headerList57.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNotNull(headerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(requestBuilder55);
        org.junit.Assert.assertNull(objArray56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test3395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3395");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter33 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request34 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(converter33);
    }

    @Test
    public void test3396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3396");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.lang.String str6 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
    }

    @Test
    public void test3397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3397");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.lang.String str13 = request4.getUrl();
        java.lang.String str14 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3398");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder10 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray11 = requestBuilder1.getargs();
        java.lang.String str12 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.getBody();
        retrofit.mime.TypedOutput typedOutput19 = request17.getBody();
        java.lang.String str20 = request17.getMethod();
        java.lang.String str21 = request17.method;
        java.lang.String str22 = request17.method;
        java.util.List<retrofit.client.Header> headerList23 = request17.headers;
        retrofit.mime.TypedOutput typedOutput24 = request17.body;
        java.util.List<retrofit.client.Header> headerList25 = request17.getHeaders();
        requestBuilder1.setheaders(headerList25);
        java.lang.String str27 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNull(objArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNull(typedOutput24);
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test3399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3399");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3400");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList36 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(headerList36);
    }

    @Test
    public void test3401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3401");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList17 = null;
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList17, typedOutput18);
        java.lang.String str20 = request19.url;
        java.util.List<retrofit.client.Header> headerList21 = request19.getHeaders();
        java.util.List<retrofit.client.Header> headerList22 = request19.getHeaders();
        requestBuilder3.headers = headerList22;
        retrofit.RequestBuilder requestBuilder25 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray26 = null;
        retrofit.RequestBuilder requestBuilder27 = requestBuilder25.args(objArray26);
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder25.getheaders();
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "hi!", headerList28, typedOutput29);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(requestBuilder25);
        org.junit.Assert.assertNotNull(requestBuilder27);
        org.junit.Assert.assertNotNull(headerList28);
    }

    @Test
    public void test3402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3402");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        java.lang.String str15 = requestBuilder14.apiUrl;
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        retrofit.converter.Converter converter34 = requestBuilder33.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder33.headers;
        requestBuilder33.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        java.lang.String str43 = request42.getUrl();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder33, request42 };
        requestBuilder20.setargs(objArray44);
        java.lang.Object[] objArray46 = requestBuilder20.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder17.args(objArray46);
        requestBuilder14.setargs(objArray46);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        java.lang.String str51 = requestBuilder50.apiUrl;
        retrofit.converter.Converter converter52 = null;
        retrofit.RequestBuilder requestBuilder53 = new retrofit.RequestBuilder(converter52);
        retrofit.converter.Converter converter54 = requestBuilder53.getconverter();
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.client.Header[] headerArray59 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList60 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList60, headerArray59);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList60, typedOutput62);
        requestBuilder56.setheaders((java.util.List<retrofit.client.Header>) headerList60);
        retrofit.converter.Converter converter68 = null;
        retrofit.RequestBuilder requestBuilder69 = new retrofit.RequestBuilder(converter68);
        retrofit.converter.Converter converter70 = requestBuilder69.getconverter();
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder69.headers;
        requestBuilder69.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList76 = null;
        retrofit.mime.TypedOutput typedOutput77 = null;
        retrofit.client.Request request78 = new retrofit.client.Request("", "", headerList76, typedOutput77);
        java.lang.String str79 = request78.getUrl();
        java.lang.Object[] objArray80 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder69, request78 };
        requestBuilder56.setargs(objArray80);
        java.lang.Object[] objArray82 = requestBuilder56.getargs();
        retrofit.RequestBuilder requestBuilder83 = requestBuilder53.args(objArray82);
        requestBuilder50.setargs(objArray82);
        retrofit.RequestBuilder requestBuilder85 = requestBuilder14.args(objArray82);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder3.args(objArray82);
        java.lang.String str87 = requestBuilder86.getapiUrl();
        java.util.List<retrofit.client.Header> headerList88 = requestBuilder86.getheaders();
        retrofit.mime.TypedOutput typedOutput89 = null;
        retrofit.client.Request request90 = new retrofit.client.Request("hi!", "", headerList88, typedOutput89);
        java.util.List<retrofit.client.Header> headerList91 = request90.headers;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(headerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNull(headerList71);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNotNull(headerList91);
    }

    @Test
    public void test3403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3403");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.String str27 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder29 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder36 = requestBuilder34.apiUrl("hi!");
        java.lang.Object[] objArray37 = null;
        retrofit.RequestBuilder requestBuilder38 = requestBuilder36.args(objArray37);
        java.lang.Object[] objArray39 = requestBuilder38.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(requestBuilder29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(requestBuilder36);
        org.junit.Assert.assertNotNull(requestBuilder38);
        org.junit.Assert.assertNull(objArray39);
    }

    @Test
    public void test3404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3404");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("", "", headerList9, typedOutput10);
        java.lang.String str12 = request11.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request11.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request11.body;
        java.lang.String str15 = request11.method;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3405");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        retrofit.mime.TypedOutput typedOutput14 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request4.headers;
        java.util.List<retrofit.client.Header> headerList16 = request4.headers;
        java.lang.String str17 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test3406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3406");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3407");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.method;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.headers;
        java.lang.String str16 = request14.getUrl();
        java.lang.String str17 = request14.url;
        java.lang.String str18 = request14.url;
        java.lang.String str19 = request14.getMethod();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test3408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3408");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        requestBuilder3.setheaders(headerList40);
        requestBuilder3.apiUrl = "";
        java.lang.Object[] objArray45 = requestBuilder3.args;
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = request48.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNull(typedOutput49);
    }

    @Test
    public void test3409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3409");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.lang.String str14 = request4.url;
        retrofit.mime.TypedOutput typedOutput15 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput16 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test3410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3410");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.lang.String str13 = request12.url;
        java.util.List<retrofit.client.Header> headerList14 = request12.headers;
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        java.lang.Class<?> wildcardClass16 = request12.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3411");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.lang.String str13 = request4.getMethod();
        java.lang.String str14 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput15 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(typedOutput15);
    }

    @Test
    public void test3412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3412");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request4.getBody();
        java.lang.String str15 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3413");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        java.lang.String str11 = request6.method;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test3414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3414");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.lang.String str13 = request12.url;
        java.util.List<retrofit.client.Header> headerList14 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = request12.body;
        java.util.List<retrofit.client.Header> headerList17 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList17, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList17, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "", headerList17, typedOutput24);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test3415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3415");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        java.lang.String str8 = requestBuilder7.apiUrl;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.converter.Converter converter11 = requestBuilder10.getconverter();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        java.lang.Object[] objArray39 = requestBuilder13.getargs();
        retrofit.RequestBuilder requestBuilder40 = requestBuilder10.args(objArray39);
        requestBuilder7.setargs(objArray39);
        requestBuilder1.setargs(objArray39);
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray45 = requestBuilder1.args;
        retrofit.converter.Converter converter46 = requestBuilder1.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNull(converter46);
    }

    @Test
    public void test3416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3416");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput35 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test3417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3417");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.Object[] objArray4 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.converter.Converter converter9 = requestBuilder8.getconverter();
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        requestBuilder11.setheaders((java.util.List<retrofit.client.Header>) headerList15);
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.converter.Converter converter25 = requestBuilder24.getconverter();
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder24.headers;
        requestBuilder24.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder24, request33 };
        requestBuilder11.setargs(objArray35);
        java.lang.Object[] objArray37 = requestBuilder11.getargs();
        retrofit.RequestBuilder requestBuilder38 = requestBuilder8.args(objArray37);
        requestBuilder38.setapiUrl("");
        retrofit.converter.Converter converter41 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder38.getheaders();
        java.lang.String str43 = requestBuilder38.apiUrl;
        java.lang.Object[] objArray44 = requestBuilder38.getargs();
        requestBuilder1.setargs(objArray44);
        retrofit.converter.Converter converter46 = requestBuilder1.getconverter();
        java.lang.String str47 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        retrofit.converter.Converter converter63 = null;
        retrofit.RequestBuilder requestBuilder64 = new retrofit.RequestBuilder(converter63);
        retrofit.converter.Converter converter65 = requestBuilder64.getconverter();
        java.util.List<retrofit.client.Header> headerList66 = requestBuilder64.headers;
        requestBuilder64.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        java.lang.String str74 = request73.getUrl();
        java.lang.Object[] objArray75 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder64, request73 };
        requestBuilder51.setargs(objArray75);
        requestBuilder51.apiUrl = "";
        retrofit.converter.Converter converter79 = null;
        retrofit.RequestBuilder requestBuilder80 = new retrofit.RequestBuilder(converter79);
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        retrofit.mime.TypedOutput typedOutput86 = request85.getBody();
        retrofit.mime.TypedOutput typedOutput87 = request85.getBody();
        java.util.List<retrofit.client.Header> headerList88 = request85.headers;
        requestBuilder80.setheaders(headerList88);
        requestBuilder51.setheaders(headerList88);
        requestBuilder51.apiUrl = "";
        java.lang.Object[] objArray93 = requestBuilder51.args;
        java.util.List<retrofit.client.Header> headerList94 = requestBuilder51.getheaders();
        retrofit.mime.TypedOutput typedOutput95 = null;
        retrofit.client.Request request96 = new retrofit.client.Request("hi!", "hi!", headerList94, typedOutput95);
        requestBuilder1.headers = headerList94;
        java.lang.Object[] objArray98 = requestBuilder1.args;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(headerList26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(headerList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(headerList66);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertNotNull(headerList94);
        org.junit.Assert.assertNotNull(objArray98);
    }

    @Test
    public void test3418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3418");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder47.apiUrl("");
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder47.headers;
        requestBuilder1.headers = headerList75;
        requestBuilder1.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder80 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        java.lang.String str86 = request85.getUrl();
        retrofit.mime.TypedOutput typedOutput87 = request85.body;
        java.lang.String str88 = request85.getUrl();
        java.util.List<retrofit.client.Header> headerList89 = request85.headers;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder1.headers(headerList89);
        requestBuilder1.apiUrl = "";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertNotNull(requestBuilder90);
    }

    @Test
    public void test3419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3419");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.method;
        java.lang.String str11 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3420");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray61 = requestBuilder60.getargs();
        retrofit.RequestBuilder requestBuilder63 = requestBuilder60.apiUrl("hi!");
        retrofit.client.Header[] headerArray70 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList71 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList71, headerArray70);
        retrofit.mime.TypedOutput typedOutput73 = null;
        retrofit.client.Request request74 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList71, typedOutput73);
        java.lang.String str75 = request74.method;
        java.util.List<retrofit.client.Header> headerList76 = request74.headers;
        retrofit.mime.TypedOutput typedOutput77 = null;
        retrofit.client.Request request78 = new retrofit.client.Request("", "hi!", headerList76, typedOutput77);
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("hi!", "", headerList76, typedOutput79);
        requestBuilder63.headers = headerList76;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertNotNull(headerArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(headerList76);
    }

    @Test
    public void test3421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3421");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.lang.String str11 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test3422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3422");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.String str36 = request33.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test3423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3423");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "hi!", headerList11, typedOutput12);
        java.util.List<retrofit.client.Header> headerList14 = request13.headers;
        retrofit.mime.TypedOutput typedOutput15 = request13.body;
        retrofit.mime.TypedOutput typedOutput16 = request13.body;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test3424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3424");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder14 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder14.getheaders();
        retrofit.RequestBuilder requestBuilder17 = requestBuilder14.apiUrl("hi!");
        java.lang.Object[] objArray18 = requestBuilder14.getargs();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(requestBuilder17);
        org.junit.Assert.assertNull(objArray18);
    }

    @Test
    public void test3425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3425");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        java.lang.String str8 = request6.url;
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test3426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3426");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.body;
        java.util.List<retrofit.client.Header> headerList8 = request6.headers;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", headerList8, typedOutput9);
        java.lang.String str11 = request10.method;
        java.lang.String str12 = request10.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request10.body;
        java.lang.String str14 = request10.getUrl();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test3427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3427");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.url;
        java.lang.String str11 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.util.List<retrofit.client.Header> headerList13 = request6.headers;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test3428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3428");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", headerList33, typedOutput36);
        java.util.List<retrofit.client.Header> headerList38 = request37.getHeaders();
        java.lang.String str39 = request37.method;
        java.lang.String str40 = request37.url;
        java.util.List<retrofit.client.Header> headerList41 = request37.getHeaders();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test3429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3429");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        retrofit.RequestBuilder requestBuilder75 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        retrofit.client.Header[] headerArray80 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList81 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList81, headerArray80);
        retrofit.mime.TypedOutput typedOutput83 = null;
        retrofit.client.Request request84 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList81, typedOutput83);
        requestBuilder77.setheaders((java.util.List<retrofit.client.Header>) headerList81);
        java.util.List<retrofit.client.Header> headerList86 = requestBuilder77.getheaders();
        retrofit.RequestBuilder requestBuilder87 = requestBuilder75.headers(headerList86);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput88 = requestBuilder87.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNotNull(headerArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(headerList86);
        org.junit.Assert.assertNotNull(requestBuilder87);
    }

    @Test
    public void test3430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3430");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList30 = null;
        requestBuilder3.headers = headerList30;
        retrofit.converter.Converter converter32 = requestBuilder3.getconverter();
        java.lang.Object[] objArray33 = requestBuilder3.args;
        java.lang.String str34 = requestBuilder3.apiUrl;
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder3.getheaders();
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        retrofit.mime.TypedOutput typedOutput41 = request40.getBody();
        retrofit.mime.TypedOutput typedOutput42 = request40.getBody();
        java.lang.String str43 = request40.getUrl();
        java.util.List<retrofit.client.Header> headerList44 = request40.headers;
        requestBuilder3.setheaders(headerList44);
        java.lang.String str46 = requestBuilder3.apiUrl;
        requestBuilder3.setapiUrl("hi!");
        java.lang.Object[] objArray49 = requestBuilder3.args;
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "", headerList50, typedOutput51);
        java.util.List<retrofit.client.Header> headerList53 = request52.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(headerList50);
        org.junit.Assert.assertNotNull(headerList53);
    }

    @Test
    public void test3431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3431");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder14 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder14.getheaders();
        retrofit.RequestBuilder requestBuilder17 = requestBuilder14.apiUrl("hi!");
        java.lang.String str18 = requestBuilder14.getapiUrl();
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = request25.getBody();
        retrofit.mime.TypedOutput typedOutput27 = request25.getBody();
        java.util.List<retrofit.client.Header> headerList28 = request25.headers;
        java.util.List<retrofit.client.Header> headerList29 = request25.getHeaders();
        java.lang.String str30 = request25.method;
        java.lang.String str31 = request25.url;
        java.lang.String str32 = request25.getMethod();
        retrofit.mime.TypedOutput typedOutput33 = request25.getBody();
        retrofit.mime.TypedOutput typedOutput34 = request25.body;
        java.util.List<retrofit.client.Header> headerList35 = request25.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        requestBuilder14.setheaders(headerList35);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(requestBuilder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(typedOutput26);
        org.junit.Assert.assertNull(typedOutput27);
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(typedOutput33);
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(headerList35);
    }

    @Test
    public void test3432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3432");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.getMethod();
        java.lang.String str35 = request33.url;
        java.lang.String str36 = request33.getUrl();
        java.lang.String str37 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput38 = request33.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(typedOutput38);
    }

    @Test
    public void test3433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3433");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter32 = requestBuilder1.converter;
        java.lang.String str33 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.apiUrl("hi!");
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList42, typedOutput43);
        retrofit.mime.TypedOutput typedOutput45 = request44.getBody();
        retrofit.mime.TypedOutput typedOutput46 = request44.getBody();
        java.util.List<retrofit.client.Header> headerList47 = request44.headers;
        requestBuilder39.setheaders(headerList47);
        retrofit.converter.Converter converter49 = requestBuilder39.getconverter();
        java.util.List<retrofit.client.Header> headerList50 = null;
        requestBuilder39.setheaders(headerList50);
        requestBuilder39.apiUrl = "hi!";
        requestBuilder39.apiUrl = "";
        retrofit.converter.Converter converter56 = requestBuilder39.converter;
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        java.util.List<retrofit.client.Header> headerList61 = null;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList61, typedOutput62);
        retrofit.mime.TypedOutput typedOutput64 = request63.getBody();
        retrofit.mime.TypedOutput typedOutput65 = request63.getBody();
        java.util.List<retrofit.client.Header> headerList66 = request63.headers;
        requestBuilder58.setheaders(headerList66);
        retrofit.converter.Converter converter68 = null;
        retrofit.RequestBuilder requestBuilder69 = new retrofit.RequestBuilder(converter68);
        retrofit.client.Header[] headerArray72 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList73 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList73, headerArray72);
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList73, typedOutput75);
        requestBuilder69.setheaders((java.util.List<retrofit.client.Header>) headerList73);
        retrofit.converter.Converter converter81 = null;
        retrofit.RequestBuilder requestBuilder82 = new retrofit.RequestBuilder(converter81);
        retrofit.converter.Converter converter83 = requestBuilder82.getconverter();
        java.util.List<retrofit.client.Header> headerList84 = requestBuilder82.headers;
        requestBuilder82.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList89 = null;
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("", "", headerList89, typedOutput90);
        java.lang.String str92 = request91.getUrl();
        java.lang.Object[] objArray93 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder82, request91 };
        requestBuilder69.setargs(objArray93);
        requestBuilder58.args = objArray93;
        requestBuilder39.setargs(objArray93);
        retrofit.RequestBuilder requestBuilder97 = requestBuilder37.args(objArray93);
        requestBuilder1.setargs(objArray93);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request99 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(typedOutput45);
        org.junit.Assert.assertNull(typedOutput46);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(typedOutput64);
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertNotNull(headerList66);
        org.junit.Assert.assertNotNull(headerArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(converter83);
        org.junit.Assert.assertNull(headerList84);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertNotNull(requestBuilder97);
    }

    @Test
    public void test3434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3434");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = request32.getBody();
        retrofit.mime.TypedOutput typedOutput34 = request32.getBody();
        java.util.List<retrofit.client.Header> headerList35 = request32.headers;
        requestBuilder27.setheaders(headerList35);
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.converter.Converter converter39 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder38.headers;
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        requestBuilder45.setheaders((java.util.List<retrofit.client.Header>) headerList49);
        java.util.List<retrofit.client.Header> headerList56 = null;
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("", "", headerList56, typedOutput57);
        java.lang.String str59 = request58.getUrl();
        retrofit.mime.TypedOutput typedOutput60 = request58.body;
        java.lang.Object[] objArray61 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder45, typedOutput60 };
        requestBuilder38.setargs(objArray61);
        retrofit.RequestBuilder requestBuilder63 = requestBuilder27.args(objArray61);
        requestBuilder1.setargs(objArray61);
        java.lang.String str65 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList66 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.lang.String str73 = request71.url;
        retrofit.mime.TypedOutput typedOutput74 = request71.body;
        java.util.List<retrofit.client.Header> headerList75 = request71.getHeaders();
        java.util.List<retrofit.client.Header> headerList76 = request71.headers;
        requestBuilder1.setheaders(headerList76);
        java.lang.Class<?> wildcardClass78 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(typedOutput33);
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(headerList40);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(typedOutput60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(headerList66);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3435");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        java.util.List<retrofit.client.Header> headerList55 = request54.getHeaders();
        requestBuilder47.setheaders(headerList55);
        java.lang.String str57 = requestBuilder47.apiUrl;
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder47.headers;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("hi!", "hi!", headerList58, typedOutput59);
        java.lang.String str61 = request60.getMethod();
        java.lang.String str62 = request60.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(headerList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test3436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3436");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test3437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3437");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.getUrl();
        java.lang.String str9 = request6.method;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test3438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3438");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        retrofit.client.Header[] headerArray37 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList38 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList38, headerArray37);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput40);
        requestBuilder34.setheaders((java.util.List<retrofit.client.Header>) headerList38);
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.converter.Converter converter48 = requestBuilder47.getconverter();
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder47.headers;
        requestBuilder47.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "", headerList54, typedOutput55);
        java.lang.String str57 = request56.getUrl();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder47, request56 };
        requestBuilder34.setargs(objArray58);
        java.lang.Object[] objArray60 = requestBuilder34.getargs();
        retrofit.RequestBuilder requestBuilder61 = requestBuilder31.args(objArray60);
        requestBuilder61.setapiUrl("");
        retrofit.converter.Converter converter64 = requestBuilder61.getconverter();
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder61.getheaders();
        java.lang.String str66 = requestBuilder61.apiUrl;
        java.lang.Object[] objArray67 = requestBuilder61.getargs();
        requestBuilder1.setargs(objArray67);
        java.lang.String str69 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.apiUrl("");
        java.lang.Class<?> wildcardClass73 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(headerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(requestBuilder61);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(headerList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(headerList70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test3439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3439");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.lang.String str30 = requestBuilder3.apiUrl;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.client.Header[] headerArray53 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList54 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList54, headerArray53);
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList54, typedOutput56);
        requestBuilder50.setheaders((java.util.List<retrofit.client.Header>) headerList54);
        java.util.List<retrofit.client.Header> headerList61 = null;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList61, typedOutput62);
        java.lang.String str64 = request63.getUrl();
        retrofit.mime.TypedOutput typedOutput65 = request63.body;
        java.lang.Object[] objArray66 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder50, typedOutput65 };
        requestBuilder43.setargs(objArray66);
        retrofit.RequestBuilder requestBuilder68 = requestBuilder32.args(objArray66);
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder68.headers;
        requestBuilder3.headers = headerList69;
        retrofit.mime.TypedOutput typedOutput71 = null;
        retrofit.client.Request request72 = new retrofit.client.Request("", "hi!", headerList69, typedOutput71);
        java.lang.String str73 = request72.method;
        java.lang.String str74 = request72.url;
        java.util.List<retrofit.client.Header> headerList75 = request72.getHeaders();
        java.lang.String str76 = request72.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertNotNull(headerArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder68);
        org.junit.Assert.assertNotNull(headerList69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
    }

    @Test
    public void test3440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3440");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.method;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.method;
        java.lang.String str12 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3441");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = request12.body;
        java.util.List<retrofit.client.Header> headerList17 = request12.headers;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test3442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3442");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        java.lang.String str31 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder1.apiUrl("");
        java.lang.Class<?> wildcardClass34 = requestBuilder33.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test3443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3443");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        java.lang.String str10 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.lang.String str13 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test3444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3444");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList17 = null;
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList17, typedOutput18);
        java.lang.String str20 = request19.url;
        java.util.List<retrofit.client.Header> headerList21 = request19.getHeaders();
        java.util.List<retrofit.client.Header> headerList22 = request19.getHeaders();
        requestBuilder3.headers = headerList22;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList22, typedOutput24);
        java.lang.String str26 = request25.getMethod();
        java.lang.String str27 = request25.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test3445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3445");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput9);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test3446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3446");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        java.lang.String str4 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder6 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter7 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request12 = requestBuilder11.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(requestBuilder6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNotNull(requestBuilder11);
    }

    @Test
    public void test3447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3447");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.lang.String str30 = requestBuilder3.apiUrl;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.client.Header[] headerArray53 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList54 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList54, headerArray53);
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList54, typedOutput56);
        requestBuilder50.setheaders((java.util.List<retrofit.client.Header>) headerList54);
        java.util.List<retrofit.client.Header> headerList61 = null;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList61, typedOutput62);
        java.lang.String str64 = request63.getUrl();
        retrofit.mime.TypedOutput typedOutput65 = request63.body;
        java.lang.Object[] objArray66 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder50, typedOutput65 };
        requestBuilder43.setargs(objArray66);
        retrofit.RequestBuilder requestBuilder68 = requestBuilder32.args(objArray66);
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder68.headers;
        requestBuilder3.headers = headerList69;
        retrofit.mime.TypedOutput typedOutput71 = null;
        retrofit.client.Request request72 = new retrofit.client.Request("hi!", "", headerList69, typedOutput71);
        java.lang.String str73 = request72.url;
        java.lang.String str74 = request72.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertNotNull(headerArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder68);
        org.junit.Assert.assertNotNull(headerList69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test3448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3448");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.lang.String str11 = request4.url;
        java.lang.String str12 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3449");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getMethod();
        java.lang.String str12 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3450");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.headers;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "", headerList19, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.headers;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.headers(headerList22);
        java.lang.Object[] objArray24 = requestBuilder1.args;
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNull(objArray24);
    }

    @Test
    public void test3451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3451");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList33, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.body;
        java.util.List<retrofit.client.Header> headerList40 = request37.getHeaders();
        retrofit.mime.TypedOutput typedOutput41 = request37.body;
        java.lang.String str42 = request37.getUrl();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test3452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3452");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        requestBuilder1.setapiUrl("");
        java.lang.String str12 = requestBuilder1.apiUrl;
        java.lang.Class<?> wildcardClass13 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3453");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.method;
        java.lang.String str12 = request6.method;
        java.lang.String str13 = request6.getUrl();
        java.lang.String str14 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test3454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3454");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList17 = null;
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList17, typedOutput18);
        java.lang.String str20 = request19.url;
        java.util.List<retrofit.client.Header> headerList21 = request19.getHeaders();
        java.util.List<retrofit.client.Header> headerList22 = request19.getHeaders();
        requestBuilder3.headers = headerList22;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList22, typedOutput24);
        java.lang.String str26 = request25.getMethod();
        retrofit.mime.TypedOutput typedOutput27 = request25.getBody();
        java.lang.String str28 = request25.url;
        retrofit.mime.TypedOutput typedOutput29 = request25.getBody();
        java.util.List<retrofit.client.Header> headerList30 = request25.getHeaders();
        java.util.List<retrofit.client.Header> headerList31 = request25.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(typedOutput27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(typedOutput29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerList31);
    }

    @Test
    public void test3455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3455");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList17 = null;
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList17, typedOutput18);
        java.lang.String str20 = request19.url;
        java.util.List<retrofit.client.Header> headerList21 = request19.getHeaders();
        java.util.List<retrofit.client.Header> headerList22 = request19.getHeaders();
        requestBuilder3.headers = headerList22;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList22, typedOutput24);
        java.lang.String str26 = request25.getMethod();
        retrofit.mime.TypedOutput typedOutput27 = request25.getBody();
        java.util.List<retrofit.client.Header> headerList28 = request25.getHeaders();
        java.lang.String str29 = request25.url;
        java.util.List<retrofit.client.Header> headerList30 = request25.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = request25.body;
        java.lang.String str32 = request25.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(typedOutput27);
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test3456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3456");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter13 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(converter13);
    }

    @Test
    public void test3457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3457");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder84.apiUrl("");
        retrofit.RequestBuilder requestBuilder88 = requestBuilder86.apiUrl("");
        requestBuilder86.setapiUrl("hi!");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(requestBuilder88);
    }

    @Test
    public void test3458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3458");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        java.util.List<retrofit.client.Header> headerList14 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList17, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList20, typedOutput21);
        java.lang.String str23 = request22.url;
        java.util.List<retrofit.client.Header> headerList24 = request22.headers;
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(headerList24);
    }

    @Test
    public void test3459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3459");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        java.lang.Object[] objArray35 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "", headerList38, typedOutput39);
        java.util.List<retrofit.client.Header> headerList41 = request40.headers;
        requestBuilder1.setheaders(headerList41);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test3460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3460");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test3461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3461");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        java.lang.Object[] objArray57 = requestBuilder1.args;
        retrofit.RequestBuilder requestBuilder59 = requestBuilder1.apiUrl("hi!");
        java.lang.String str60 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray61 = requestBuilder1.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(requestBuilder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(objArray61);
    }

    @Test
    public void test3462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3462");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        requestBuilder88.apiUrl = "";
        retrofit.RequestBuilder requestBuilder95 = requestBuilder88.apiUrl("");
        retrofit.RequestBuilder requestBuilder97 = requestBuilder88.apiUrl("hi!");
        java.lang.Object[] objArray98 = requestBuilder97.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder95);
        org.junit.Assert.assertNotNull(requestBuilder97);
        org.junit.Assert.assertNull(objArray98);
    }

    @Test
    public void test3463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3463");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.method;
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.lang.String str13 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput14 = request6.body;
        java.lang.String str15 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test3464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3464");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        requestBuilder45.setheaders((java.util.List<retrofit.client.Header>) headerList49);
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.converter.Converter converter59 = requestBuilder58.getconverter();
        java.util.List<retrofit.client.Header> headerList60 = requestBuilder58.headers;
        requestBuilder58.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList65 = null;
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("", "", headerList65, typedOutput66);
        java.lang.String str68 = request67.getUrl();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder58, request67 };
        requestBuilder45.setargs(objArray69);
        requestBuilder45.apiUrl = "";
        retrofit.RequestBuilder requestBuilder74 = requestBuilder45.apiUrl("hi!");
        retrofit.converter.Converter converter75 = null;
        retrofit.RequestBuilder requestBuilder76 = new retrofit.RequestBuilder(converter75);
        java.util.List<retrofit.client.Header> headerList79 = null;
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("", "", headerList79, typedOutput80);
        retrofit.mime.TypedOutput typedOutput82 = request81.getBody();
        retrofit.mime.TypedOutput typedOutput83 = request81.getBody();
        java.util.List<retrofit.client.Header> headerList84 = request81.headers;
        requestBuilder76.setheaders(headerList84);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder45.headers(headerList84);
        java.lang.Object[] objArray87 = requestBuilder45.getargs();
        java.lang.Object[] objArray88 = requestBuilder45.getargs();
        requestBuilder1.args = objArray88;
        java.lang.String str90 = requestBuilder1.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput91 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(headerList60);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNotNull(headerList84);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
    }

    @Test
    public void test3465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3465");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        requestBuilder88.apiUrl = "";
        retrofit.RequestBuilder requestBuilder95 = requestBuilder88.apiUrl("");
        retrofit.converter.Converter converter96 = requestBuilder88.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder95);
        org.junit.Assert.assertNull(converter96);
    }

    @Test
    public void test3466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3466");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        java.lang.String str13 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3467");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        requestBuilder1.apiUrl = "hi!";
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder1.headers;
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.converter.Converter converter36 = requestBuilder35.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder35.headers;
        requestBuilder35.setapiUrl("hi!");
        retrofit.converter.Converter converter40 = requestBuilder35.converter;
        retrofit.RequestBuilder requestBuilder42 = requestBuilder35.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder44 = requestBuilder42.apiUrl("hi!");
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.converter.Converter converter47 = requestBuilder46.getconverter();
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        java.lang.Object[] objArray75 = requestBuilder49.getargs();
        retrofit.RequestBuilder requestBuilder76 = requestBuilder46.args(objArray75);
        java.lang.String str77 = requestBuilder46.getapiUrl();
        java.lang.String str78 = requestBuilder46.apiUrl;
        retrofit.RequestBuilder requestBuilder80 = requestBuilder46.apiUrl("");
        java.lang.Object[] objArray81 = new java.lang.Object[] {};
        requestBuilder46.setargs(objArray81);
        java.util.List<retrofit.client.Header> headerList85 = null;
        retrofit.mime.TypedOutput typedOutput86 = null;
        retrofit.client.Request request87 = new retrofit.client.Request("", "", headerList85, typedOutput86);
        java.lang.String str88 = request87.getUrl();
        retrofit.mime.TypedOutput typedOutput89 = request87.body;
        java.util.List<retrofit.client.Header> headerList90 = request87.getHeaders();
        java.util.List<retrofit.client.Header> headerList91 = request87.getHeaders();
        requestBuilder46.setheaders(headerList91);
        requestBuilder42.headers = headerList91;
        retrofit.RequestBuilder requestBuilder94 = requestBuilder1.headers(headerList91);
        java.lang.String str95 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(typedOutput89);
        org.junit.Assert.assertNotNull(headerList90);
        org.junit.Assert.assertNotNull(headerList91);
        org.junit.Assert.assertNotNull(requestBuilder94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
    }

    @Test
    public void test3468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3468");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request6.body;
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request6.headers;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test3469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3469");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.lang.String str4 = requestBuilder3.apiUrl;
        retrofit.converter.Converter converter5 = requestBuilder3.getconverter();
        java.lang.String str6 = requestBuilder3.apiUrl;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder3.apiUrl("");
        retrofit.converter.Converter converter9 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.lang.String str15 = request14.url;
        java.lang.String str16 = request14.url;
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        retrofit.mime.TypedOutput typedOutput18 = request14.body;
        java.util.List<retrofit.client.Header> headerList19 = request14.getHeaders();
        requestBuilder3.headers = headerList19;
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder3.headers;
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        retrofit.client.Header[] headerArray30 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList31 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList31, headerArray30);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList31, typedOutput33);
        requestBuilder27.setheaders((java.util.List<retrofit.client.Header>) headerList31);
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder40.headers;
        requestBuilder40.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        java.lang.String str50 = request49.getUrl();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder40, request49 };
        requestBuilder27.setargs(objArray51);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder27.apiUrl("");
        java.util.List<retrofit.client.Header> headerList55 = requestBuilder27.headers;
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("hi!", "hi!", headerList55, typedOutput56);
        java.lang.String str58 = request57.url;
        java.util.List<retrofit.client.Header> headerList59 = request57.headers;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        requestBuilder3.setheaders(headerList59);
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList59, typedOutput63);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(headerList42);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNotNull(headerList55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(headerList59);
    }

    @Test
    public void test3470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3470");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        requestBuilder5.setheaders(headerList13);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        java.lang.String str17 = requestBuilder16.apiUrl;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.client.Header[] headerArray25 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList26 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList26, headerArray25);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList26, typedOutput28);
        requestBuilder22.setheaders((java.util.List<retrofit.client.Header>) headerList26);
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.converter.Converter converter36 = requestBuilder35.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder35.headers;
        requestBuilder35.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList42, typedOutput43);
        java.lang.String str45 = request44.getUrl();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder35, request44 };
        requestBuilder22.setargs(objArray46);
        java.lang.Object[] objArray48 = requestBuilder22.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder19.args(objArray48);
        requestBuilder16.setargs(objArray48);
        retrofit.converter.Converter converter51 = null;
        retrofit.RequestBuilder requestBuilder52 = new retrofit.RequestBuilder(converter51);
        java.lang.String str53 = requestBuilder52.apiUrl;
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.client.Header[] headerArray61 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList62 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList62, headerArray61);
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList62, typedOutput64);
        requestBuilder58.setheaders((java.util.List<retrofit.client.Header>) headerList62);
        retrofit.converter.Converter converter70 = null;
        retrofit.RequestBuilder requestBuilder71 = new retrofit.RequestBuilder(converter70);
        retrofit.converter.Converter converter72 = requestBuilder71.getconverter();
        java.util.List<retrofit.client.Header> headerList73 = requestBuilder71.headers;
        requestBuilder71.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList78 = null;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "", headerList78, typedOutput79);
        java.lang.String str81 = request80.getUrl();
        java.lang.Object[] objArray82 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder71, request80 };
        requestBuilder58.setargs(objArray82);
        java.lang.Object[] objArray84 = requestBuilder58.getargs();
        retrofit.RequestBuilder requestBuilder85 = requestBuilder55.args(objArray84);
        requestBuilder52.setargs(objArray84);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder16.args(objArray84);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder5.args(objArray84);
        requestBuilder5.setapiUrl("hi!");
        java.lang.Object[] objArray91 = requestBuilder5.args;
        java.util.List<retrofit.client.Header> headerList92 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput93 = null;
        retrofit.client.Request request94 = new retrofit.client.Request("hi!", "hi!", headerList92, typedOutput93);
        retrofit.mime.TypedOutput typedOutput95 = null;
        retrofit.client.Request request96 = new retrofit.client.Request("hi!", "hi!", headerList92, typedOutput95);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNotNull(headerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNotNull(headerArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNull(headerList73);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertNotNull(headerList92);
    }

    @Test
    public void test3471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3471");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray29 = requestBuilder28.args;
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        java.lang.String str40 = requestBuilder31.getapiUrl();
        retrofit.RequestBuilder requestBuilder42 = requestBuilder31.apiUrl("");
        java.lang.Object[] objArray43 = requestBuilder31.getargs();
        retrofit.converter.Converter converter44 = requestBuilder31.getconverter();
        java.lang.Object[] objArray45 = requestBuilder31.getargs();
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        requestBuilder47.apiUrl = "";
        retrofit.converter.Converter converter75 = null;
        retrofit.RequestBuilder requestBuilder76 = new retrofit.RequestBuilder(converter75);
        java.util.List<retrofit.client.Header> headerList79 = null;
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("", "", headerList79, typedOutput80);
        retrofit.mime.TypedOutput typedOutput82 = request81.getBody();
        retrofit.mime.TypedOutput typedOutput83 = request81.getBody();
        java.util.List<retrofit.client.Header> headerList84 = request81.headers;
        requestBuilder76.setheaders(headerList84);
        requestBuilder47.setheaders(headerList84);
        requestBuilder47.apiUrl = "";
        java.lang.Object[] objArray89 = requestBuilder47.args;
        java.lang.Object[] objArray90 = requestBuilder47.args;
        requestBuilder31.args = objArray90;
        retrofit.RequestBuilder requestBuilder92 = requestBuilder28.args(objArray90);
        java.util.List<retrofit.client.Header> headerList93 = requestBuilder92.headers;
        java.lang.String str94 = requestBuilder92.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(objArray43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(objArray45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNotNull(headerList84);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertNotNull(requestBuilder92);
        org.junit.Assert.assertNotNull(headerList93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
    }

    @Test
    public void test3472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3472");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3473");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        java.lang.String str26 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder1.headers;
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.converter.Converter converter30 = requestBuilder29.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = null;
        requestBuilder29.headers = headerList31;
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder29.headers;
        retrofit.converter.Converter converter34 = requestBuilder29.converter;
        requestBuilder29.apiUrl = "";
        java.lang.Object[] objArray37 = requestBuilder29.getargs();
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        retrofit.client.Header[] headerArray42 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList43 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList43, headerArray42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList43, typedOutput45);
        requestBuilder39.setheaders((java.util.List<retrofit.client.Header>) headerList43);
        retrofit.converter.Converter converter51 = null;
        retrofit.RequestBuilder requestBuilder52 = new retrofit.RequestBuilder(converter51);
        retrofit.converter.Converter converter53 = requestBuilder52.getconverter();
        java.util.List<retrofit.client.Header> headerList54 = requestBuilder52.headers;
        requestBuilder52.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList59 = null;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        java.lang.String str62 = request61.getUrl();
        java.lang.Object[] objArray63 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder52, request61 };
        requestBuilder39.setargs(objArray63);
        java.lang.Object[] objArray65 = requestBuilder39.getargs();
        java.lang.Object[] objArray66 = requestBuilder39.getargs();
        requestBuilder29.args = objArray66;
        retrofit.RequestBuilder requestBuilder68 = requestBuilder1.args(objArray66);
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(headerList27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(objArray37);
        org.junit.Assert.assertNotNull(headerArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(headerList54);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder68);
    }

    @Test
    public void test3474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3474");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.url;
        java.lang.String str13 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput14 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(typedOutput14);
    }

    @Test
    public void test3475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3475");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        retrofit.mime.TypedOutput typedOutput36 = request33.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request33.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test3476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3476");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", headerList12, typedOutput13);
        java.lang.String str15 = request14.getUrl();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test3477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3477");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder1.headers;
        retrofit.converter.Converter converter45 = requestBuilder1.getconverter();
        java.lang.String str46 = requestBuilder1.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
    }

    @Test
    public void test3478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3478");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.util.List<retrofit.client.Header> headerList5 = request4.getHeaders();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.url;
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test3479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3479");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.lang.Class<?> wildcardClass14 = headerList13.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test3480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3480");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter12 = requestBuilder1.getconverter();
        java.lang.Object[] objArray13 = requestBuilder1.args;
        java.lang.String str14 = requestBuilder1.getapiUrl();
        java.lang.String str15 = requestBuilder1.getapiUrl();
        java.lang.String str16 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test3481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3481");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder13.headers;
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder20, typedOutput35 };
        requestBuilder13.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.getBody();
        retrofit.mime.TypedOutput typedOutput44 = request42.getBody();
        java.lang.String str45 = request42.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request42.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder13.headers(headerList46);
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.headers(headerList46);
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder1.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertNotNull(headerList49);
    }

    @Test
    public void test3482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3482");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.Object[] objArray30 = requestBuilder1.args;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        requestBuilder1.setargs(objArray56);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter61 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput62 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNull(converter61);
    }

    @Test
    public void test3483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3483");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter12 = requestBuilder1.getconverter();
        java.lang.Object[] objArray13 = requestBuilder1.args;
        java.lang.String str14 = requestBuilder1.getapiUrl();
        java.lang.String str15 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = request24.getBody();
        java.lang.String str26 = request24.url;
        java.lang.String str27 = request24.getUrl();
        retrofit.mime.TypedOutput typedOutput28 = request24.body;
        java.lang.String str29 = request24.url;
        java.util.List<retrofit.client.Header> headerList30 = request24.getHeaders();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.headers(headerList30);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request32 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNull(typedOutput28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(requestBuilder31);
    }

    @Test
    public void test3484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3484");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        requestBuilder1.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder41 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.RequestBuilder requestBuilder43 = requestBuilder41.headers(headerList42);
        retrofit.converter.Converter converter44 = requestBuilder41.converter;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(requestBuilder41);
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNull(converter44);
    }

    @Test
    public void test3485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3485");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.method;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test3486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3486");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.RequestBuilder requestBuilder37 = requestBuilder34.apiUrl("");
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder34.getheaders();
        requestBuilder34.setapiUrl("");
        java.lang.Object[] objArray41 = requestBuilder34.getargs();
        java.lang.Object[] objArray42 = requestBuilder34.args;
        java.lang.Class<?> wildcardClass43 = requestBuilder34.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(headerList38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test3487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3487");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        java.util.List<retrofit.client.Header> headerList36 = request35.getHeaders();
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "hi!", headerList36, typedOutput37);
        java.util.List<retrofit.client.Header> headerList39 = request38.getHeaders();
        retrofit.mime.TypedOutput typedOutput40 = request38.body;
        retrofit.mime.TypedOutput typedOutput41 = request38.body;
        java.lang.String str42 = request38.getMethod();
        java.util.List<retrofit.client.Header> headerList43 = request38.getHeaders();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(headerList43);
    }

    @Test
    public void test3488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3488");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.Object[] objArray4 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "hi!";
        retrofit.converter.Converter converter7 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList8 = requestBuilder1.headers;
        java.lang.String str9 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test3489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3489");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.method;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test3490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3490");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.url;
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        java.lang.String str12 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        java.lang.String str14 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        java.lang.Class<?> wildcardClass18 = headerList15.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3491");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray46 = new java.lang.Object[] {};
        requestBuilder1.args = objArray46;
        java.lang.Object[] objArray48 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.client.Header[] headerArray62 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList63 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList63, headerArray62);
        retrofit.mime.TypedOutput typedOutput65 = null;
        retrofit.client.Request request66 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList63, typedOutput65);
        requestBuilder59.setheaders((java.util.List<retrofit.client.Header>) headerList63);
        retrofit.converter.Converter converter71 = null;
        retrofit.RequestBuilder requestBuilder72 = new retrofit.RequestBuilder(converter71);
        retrofit.converter.Converter converter73 = requestBuilder72.getconverter();
        java.util.List<retrofit.client.Header> headerList74 = requestBuilder72.headers;
        requestBuilder72.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList79 = null;
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("", "", headerList79, typedOutput80);
        java.lang.String str82 = request81.getUrl();
        java.lang.Object[] objArray83 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder72, request81 };
        requestBuilder59.setargs(objArray83);
        java.lang.Object[] objArray85 = requestBuilder59.getargs();
        retrofit.RequestBuilder requestBuilder86 = requestBuilder56.args(objArray85);
        retrofit.converter.Converter converter87 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList90 = null;
        retrofit.mime.TypedOutput typedOutput91 = null;
        retrofit.client.Request request92 = new retrofit.client.Request("", "", headerList90, typedOutput91);
        retrofit.mime.TypedOutput typedOutput93 = request92.getBody();
        java.util.List<retrofit.client.Header> headerList94 = request92.headers;
        requestBuilder56.setheaders(headerList94);
        retrofit.mime.TypedOutput typedOutput96 = null;
        retrofit.client.Request request97 = new retrofit.client.Request("", "", headerList94, typedOutput96);
        java.util.List<retrofit.client.Header> headerList98 = request97.getHeaders();
        retrofit.RequestBuilder requestBuilder99 = requestBuilder52.headers(headerList98);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNotNull(headerArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNull(headerList74);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNull(converter87);
        org.junit.Assert.assertNull(typedOutput93);
        org.junit.Assert.assertNotNull(headerList94);
        org.junit.Assert.assertNotNull(headerList98);
        org.junit.Assert.assertNotNull(requestBuilder99);
    }

    @Test
    public void test3492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3492");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        java.lang.String str6 = requestBuilder5.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput7 = requestBuilder5.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test3493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3493");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.Object[] objArray4 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList9 = requestBuilder1.getheaders();
        java.lang.String str10 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter13 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(converter13);
    }

    @Test
    public void test3494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3494");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        requestBuilder11.setheaders((java.util.List<retrofit.client.Header>) headerList15);
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.converter.Converter converter25 = requestBuilder24.getconverter();
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder24.headers;
        requestBuilder24.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder24, request33 };
        requestBuilder11.setargs(objArray35);
        java.lang.Object[] objArray37 = requestBuilder11.getargs();
        java.lang.String str38 = requestBuilder11.apiUrl;
        retrofit.converter.Converter converter39 = requestBuilder11.converter;
        retrofit.RequestBuilder requestBuilder41 = requestBuilder11.apiUrl("");
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder11.headers;
        java.lang.String str43 = requestBuilder11.apiUrl;
        java.lang.Object[] objArray44 = requestBuilder11.args;
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.args(objArray44);
        retrofit.converter.Converter converter46 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter47 = requestBuilder1.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(headerList26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNotNull(requestBuilder41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(converter47);
    }

    @Test
    public void test3495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3495");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.lang.String str3 = requestBuilder1.getapiUrl();
        java.lang.String str4 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray5 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(objArray5);
    }

    @Test
    public void test3496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3496");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        retrofit.mime.TypedOutput typedOutput66 = request64.body;
        java.lang.Object[] objArray67 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder51, typedOutput66 };
        requestBuilder44.setargs(objArray67);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder33.args(objArray67);
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder69.headers;
        retrofit.RequestBuilder requestBuilder71 = requestBuilder1.headers(headerList70);
        retrofit.converter.Converter converter72 = requestBuilder71.converter;
        retrofit.RequestBuilder requestBuilder74 = requestBuilder71.apiUrl("");
        retrofit.converter.Converter converter75 = requestBuilder74.getconverter();
        retrofit.RequestBuilder requestBuilder77 = requestBuilder74.apiUrl("hi!");
        retrofit.converter.Converter converter78 = requestBuilder74.converter;
        java.lang.Object[] objArray79 = requestBuilder74.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNull(converter75);
        org.junit.Assert.assertNotNull(requestBuilder77);
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNotNull(objArray79);
    }

    @Test
    public void test3497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3497");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.String str30 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        requestBuilder35.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(requestBuilder35);
    }

    @Test
    public void test3498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3498");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        requestBuilder5.setheaders(headerList13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = request18.body;
        java.util.List<retrofit.client.Header> headerList20 = request18.getHeaders();
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        java.lang.String str22 = request18.method;
        java.lang.String str23 = request18.method;
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test3499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3499");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        java.util.List<retrofit.client.Header> headerList53 = requestBuilder52.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput54 = requestBuilder52.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNull(headerList53);
    }

    @Test
    public void test3500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3500");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder47.apiUrl("");
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder47.headers;
        requestBuilder1.headers = headerList75;
        requestBuilder1.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder80 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder82 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray83 = requestBuilder1.args;
        requestBuilder1.setapiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertNotNull(requestBuilder82);
        org.junit.Assert.assertNotNull(objArray83);
    }
}

