/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 02 05:28:35 GMT 2021
 */

package retrofit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.Gson;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import retrofit.RequestBuilder;
import retrofit.RestMethodInfo;
import retrofit.client.Header;
import retrofit.converter.Converter;
import retrofit.converter.GsonConverter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RequestBuilder_ESTest extends RequestBuilder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      String string0 = "!/";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder1.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      assertNotNull(requestBuilder1);
      assertEquals(0, linkedList0.size());
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      RestMethodInfo restMethodInfo0 = null;
      RequestBuilder requestBuilder2 = requestBuilder1.methodInfo(restMethodInfo0);
      assertNotNull(requestBuilder2);
      assertEquals(0, linkedList0.size());
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      
      Object[] objectArray0 = new Object[4];
      RequestBuilder requestBuilder3 = requestBuilder2.args(objectArray0);
      assertNotNull(requestBuilder3);
      assertEquals(0, linkedList0.size());
      assertEquals(4, objectArray0.length);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      
      String string0 = " not annotated with request type (e.g., GET, POST).";
      RequestBuilder requestBuilder4 = requestBuilder3.apiUrl(string0);
      assertNotNull(requestBuilder4);
      assertEquals(0, linkedList0.size());
      assertEquals(4, objectArray0.length);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder3);
      assertSame(requestBuilder1, requestBuilder4);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder3);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder4, requestBuilder3);
      
      // Undeclared exception!
      try { 
        requestBuilder3.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      String string0 = "Method ";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      Object[] objectArray0 = new Object[0];
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      assertNotNull(requestBuilder1);
      assertEquals(0, objectArray0.length);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      String string0 = null;
      RequestBuilder requestBuilder2 = requestBuilder1.apiUrl(string0);
      assertNotNull(requestBuilder2);
      assertEquals(0, objectArray0.length);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      List<Header> list0 = null;
      RequestBuilder requestBuilder1 = requestBuilder0.headers(list0);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      RestMethodInfo restMethodInfo0 = null;
      RequestBuilder requestBuilder1 = requestBuilder0.methodInfo(restMethodInfo0);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      RequestBuilder requestBuilder1 = requestBuilder0.headers(linkedList0);
      assertNotNull(requestBuilder1);
      assertEquals(0, linkedList0.size());
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        requestBuilder1.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      String string0 = null;
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      RequestBuilder requestBuilder2 = requestBuilder1.headers(linkedList0);
      assertNotNull(requestBuilder2);
      assertEquals(0, linkedList0.size());
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder2);
      assertSame(requestBuilder1, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      Gson gson0 = null;
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      String string0 = "!Yi~s*I_}8`:CCK";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder1.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      Converter converter0 = null;
      RequestBuilder requestBuilder0 = new RequestBuilder(converter0);
      assertNotNull(requestBuilder0);
      
      String string0 = "/";
      RequestBuilder requestBuilder1 = requestBuilder0.apiUrl(string0);
      assertNotNull(requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      // Undeclared exception!
      try { 
        requestBuilder1.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RequestBuilder requestBuilder0 = new RequestBuilder(gsonConverter0);
      assertNotNull(requestBuilder0);
      
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) requestBuilder0;
      objectArray0[1] = (Object) requestBuilder0;
      objectArray0[2] = (Object) gson0;
      objectArray0[3] = (Object) gsonConverter0;
      objectArray0[4] = (Object) gsonConverter0;
      objectArray0[5] = (Object) requestBuilder0;
      objectArray0[6] = (Object) gsonConverter0;
      objectArray0[7] = (Object) requestBuilder0;
      objectArray0[8] = (Object) gsonConverter0;
      RequestBuilder requestBuilder1 = requestBuilder0.args(objectArray0);
      assertNotNull(requestBuilder1);
      assertEquals(9, objectArray0.length);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder1, requestBuilder0);
      
      String string0 = ":L95I/";
      RequestBuilder requestBuilder2 = requestBuilder0.apiUrl(string0);
      assertNotNull(requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      
      LinkedList<Header> linkedList0 = new LinkedList<Header>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      RequestBuilder requestBuilder3 = requestBuilder2.headers(linkedList0);
      assertNotNull(requestBuilder3);
      assertEquals(0, linkedList0.size());
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      
      RequestBuilder requestBuilder4 = requestBuilder3.apiUrl(string0);
      assertNotNull(requestBuilder4);
      assertEquals(0, linkedList0.size());
      assertSame(requestBuilder3, requestBuilder2);
      assertSame(requestBuilder3, requestBuilder0);
      assertSame(requestBuilder3, requestBuilder4);
      assertSame(requestBuilder3, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder1);
      assertSame(requestBuilder4, requestBuilder0);
      assertSame(requestBuilder4, requestBuilder3);
      assertSame(requestBuilder4, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      
      RequestBuilder requestBuilder5 = requestBuilder2.apiUrl(string0);
      assertNotNull(requestBuilder5);
      assertSame(requestBuilder0, requestBuilder1);
      assertSame(requestBuilder0, requestBuilder4);
      assertSame(requestBuilder0, requestBuilder3);
      assertSame(requestBuilder0, requestBuilder2);
      assertSame(requestBuilder0, requestBuilder5);
      assertSame(requestBuilder5, requestBuilder2);
      assertSame(requestBuilder5, requestBuilder3);
      assertSame(requestBuilder5, requestBuilder0);
      assertSame(requestBuilder5, requestBuilder4);
      assertSame(requestBuilder5, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder0);
      assertSame(requestBuilder2, requestBuilder5);
      assertSame(requestBuilder2, requestBuilder4);
      assertSame(requestBuilder2, requestBuilder1);
      assertSame(requestBuilder2, requestBuilder3);
      
      // Undeclared exception!
      try { 
        requestBuilder2.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("retrofit.RequestBuilder", e);
      }
  }
}
