import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test00001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00001");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response(0, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00002");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        java.util.concurrent.Executor executor2 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder3 = builder0.setExecutors(executor1, executor2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00003");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder2 = builder0.setLog(log1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00004");
        retrofit.RestAdapter.LogLevel logLevel0 = retrofit.RestAdapter.LogLevel.NONE;
        java.lang.Class<?> wildcardClass1 = logLevel0.getClass();
        org.junit.Assert.assertTrue("'" + logLevel0 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel0.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test00005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00005");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder2 = builder0.setConverter(converter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00006");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test00007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00007");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter1 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00008");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((-1), "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00009");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Profiler profiler1 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder2 = builder0.setProfiler(profiler1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00010");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder2 = builder0.setErrorHandler(errorHandler1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00011");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder2 = builder0.setClient(provider1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00012");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedInput typedInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response4 = new retrofit.client.Response(0, "hi!", headerList2, typedInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00013");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedInput typedInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response4 = new retrofit.client.Response((int) (byte) -1, "hi!", headerList2, typedInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00014");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) '4', "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 52");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00015");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.client.Client client5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setClient(client5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00016");
        retrofit.RestAdapter.LogLevel logLevel0 = retrofit.RestAdapter.LogLevel.BASIC;
        java.lang.Class<?> wildcardClass1 = logLevel0.getClass();
        org.junit.Assert.assertTrue("'" + logLevel0 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel0.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test00017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00017");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client client1 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder2 = builder0.setClient(client1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00018");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.client.Client client3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setClient(client3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00019");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.Server server3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder2.setServer(server3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00020");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.converter.Converter converter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setConverter(converter5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00021");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response(0, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00022");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response(10, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 10");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00023");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) 'a', "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 97");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00024");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.Profiler profiler3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setProfiler(profiler3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00025");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.client.Client.Provider provider3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder2.setClient(provider3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00026");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00027");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.ErrorHandler errorHandler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder2.setErrorHandler(errorHandler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00028");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder2 = builder0.setServer(server1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00029");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.converter.Converter converter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setConverter(converter5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00030");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.client.Client client5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setClient(client5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00031");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.client.Client.Provider provider5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setClient(provider5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00032");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response(1, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00033");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.Profiler profiler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setProfiler(profiler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00034");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setRequestInterceptor(requestInterceptor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00035");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.converter.Converter converter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder4.setConverter(converter11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00036");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.Profiler profiler13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder4.setProfiler(profiler13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00037");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) 100, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00038");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) 1, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00039");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder12.setRequestInterceptor(requestInterceptor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00040");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder2.setRequestInterceptor(requestInterceptor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00041");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.ErrorHandler errorHandler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setErrorHandler(errorHandler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00042");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) '#', "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 35");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00043");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response(1, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00044");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.client.Client client11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder4.setClient(client11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00045");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.Profiler profiler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder2.setProfiler(profiler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00046");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.Server server19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder4.setServer(server19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test00047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00047");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.converter.Converter converter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder12.setConverter(converter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00048");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.Server server11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder4.setServer(server11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00049");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter13 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00050");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.client.Client.Provider provider13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder12.setClient(provider13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00051");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response(10, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 10");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00052");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) -1, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00053");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.Profiler profiler19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder4.setProfiler(profiler19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test00054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00054");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.converter.Converter converter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setConverter(converter5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00055");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.converter.Converter converter3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setConverter(converter3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00056");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        java.util.concurrent.Executor executor5 = null;
        java.util.concurrent.Executor executor6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder4.setExecutors(executor5, executor6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00057");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.ErrorHandler errorHandler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setErrorHandler(errorHandler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00058");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        java.lang.Class<?> wildcardClass13 = builder12.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test00059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00059");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.Server server13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder12.setServer(server13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00060");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RequestInterceptor requestInterceptor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setRequestInterceptor(requestInterceptor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00061");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.Profiler profiler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setProfiler(profiler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00062");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.client.Client.Provider provider19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder4.setClient(provider19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test00063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00063");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) 'a', "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 97");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00064");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response(100, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00065");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder22.setExecutors(executor23, executor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00066");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.ErrorHandler errorHandler13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder4.setErrorHandler(errorHandler13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00067");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.client.Client.Provider provider3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setClient(provider3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00068");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.ErrorHandler errorHandler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder2.setErrorHandler(errorHandler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00069");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        java.lang.Class<?> wildcardClass21 = logLevel19.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test00070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00070");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.Profiler profiler19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder18.setProfiler(profiler19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test00071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00071");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.Server server23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder0.setServer(server23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00072");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.Profiler profiler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setProfiler(profiler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00073");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = builder2.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00074");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setClient(provider11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00075");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) ' ', "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 32");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00076");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) ' ', "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 32");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00077");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder0.setExecutors(executor23, executor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00078");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.RequestInterceptor requestInterceptor21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder20.setRequestInterceptor(requestInterceptor21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00079");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.RequestInterceptor requestInterceptor21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder4.setRequestInterceptor(requestInterceptor21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00080");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.Profiler profiler23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder0.setProfiler(profiler23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00081");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.converter.Converter converter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder6.setConverter(converter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00082");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        java.lang.Class<?> wildcardClass7 = builder6.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test00083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00083");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.client.Client client5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setClient(client5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00084");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder9 = builder4.setExecutors(executor7, executor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00085");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Log log19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder18.setLog(log19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test00086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00086");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.ErrorHandler errorHandler7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder6.setErrorHandler(errorHandler7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00087");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.client.Client.Provider provider13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder4.setClient(provider13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00088");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Log log19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder4.setLog(log19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test00089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00089");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RequestInterceptor requestInterceptor32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder31.setRequestInterceptor(requestInterceptor32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test00090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00090");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter11 = builder10.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00091");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        java.lang.Class<?> wildcardClass29 = builder28.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test00092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00092");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) 0, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00093");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder31.setClient(provider32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test00094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00094");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.Profiler profiler7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder4.setProfiler(profiler7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00095");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder23.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder0.setLog(log42);
        retrofit.client.Client.Provider provider47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder46.setClient(provider47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00096");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.client.Client client32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder31.setClient(client32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test00097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00097");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) 1, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00098");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.converter.Converter converter19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder4.setConverter(converter19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test00099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00099");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.Profiler profiler3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder2.setProfiler(profiler3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00100");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder23.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder0.setLog(log42);
        retrofit.ErrorHandler errorHandler47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder0.setErrorHandler(errorHandler47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00101");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        java.lang.Class<?> wildcardClass27 = restAdapter25.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test00102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00102");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.client.Client.Provider provider21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder20.setClient(provider21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00103");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder45 = builder42.setExecutors(executor43, executor44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00104");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.client.Client client15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder16 = builder14.setClient(client15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test00105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00105");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.Server server5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setServer(server5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00106");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        java.lang.Class<?> wildcardClass5 = builder4.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test00107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00107");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.client.Client client7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder4.setClient(client7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00108");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.converter.Converter converter29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder28.setConverter(converter29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00109");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.converter.Converter converter32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder31.setConverter(converter32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test00110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00110");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder55.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel68);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder64.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = builder52.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder29.setLog(log71);
        retrofit.RestAdapter.Builder builder76 = builder4.setLog(log71);
        retrofit.client.Client.Provider provider77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder76.setClient(provider77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test00111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00111");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        retrofit.client.Client.Provider provider29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder4.setClient(provider29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00112");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        retrofit.Server server29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder4.setServer(server29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00113");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.Server server21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder4.setServer(server21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00114");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RequestInterceptor requestInterceptor23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder22.setRequestInterceptor(requestInterceptor23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00115");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.converter.Converter converter43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder42.setConverter(converter43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00116");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RequestInterceptor requestInterceptor7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder6.setRequestInterceptor(requestInterceptor7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00117");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder9 = builder6.setExecutors(executor7, executor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00118");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.ErrorHandler errorHandler21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder4.setErrorHandler(errorHandler21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00119");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        java.lang.Class<?> wildcardClass5 = builder4.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test00120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00120");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter43 = builder42.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00121");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter50 = builder49.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00122");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.ErrorHandler errorHandler19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder4.setErrorHandler(errorHandler19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test00123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00123");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) 100, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00124");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) 10, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 10");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00125");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        log16.log("hi!");
        java.lang.Class<?> wildcardClass21 = log16.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test00126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00126");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RequestInterceptor requestInterceptor32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder4.setRequestInterceptor(requestInterceptor32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test00127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00127");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder27 = builder22.setExecutors(executor25, executor26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00128");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder55.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel68);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder64.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = builder52.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder29.setLog(log71);
        retrofit.RestAdapter.Builder builder76 = builder4.setLog(log71);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter77 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test00129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00129");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.Server server11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setServer(server11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00130");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.Profiler profiler43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder42.setProfiler(profiler43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00131");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00132");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) 0, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00133");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter25.getLogLevel();
        java.lang.Class<?> wildcardClass28 = restAdapter25.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test00134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00134");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.Server server11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setServer(server11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00135");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.Server server5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setServer(server5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00136");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.client.Client client13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder12.setClient(client13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00137");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.client.Client client11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder0.setClient(client11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00138");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.converter.Converter converter25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder0.setConverter(converter25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00139");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder55.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel68);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder64.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = builder52.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder29.setLog(log71);
        retrofit.RestAdapter.Builder builder76 = builder4.setLog(log71);
        java.lang.Class<?> wildcardClass77 = builder76.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test00140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00140");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder13 = builder10.setExecutors(executor11, executor12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00141");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.Profiler profiler21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder4.setProfiler(profiler21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00142");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        java.lang.Class<?> wildcardClass41 = builder40.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test00143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00143");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RequestInterceptor requestInterceptor43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder42.setRequestInterceptor(requestInterceptor43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00144");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.client.Client client43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder0.setClient(client43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00145");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.Profiler profiler41 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder42 = builder40.setProfiler(profiler41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test00146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00146");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter29 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00147");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder4.setLog(log55);
        retrofit.Server server58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder57.setServer(server58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00148");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RequestInterceptor requestInterceptor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setRequestInterceptor(requestInterceptor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00149");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((-1), "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00150");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.Server server41 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder42 = builder40.setServer(server41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test00151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00151");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        java.util.concurrent.Executor executor5 = null;
        java.util.concurrent.Executor executor6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder4.setExecutors(executor5, executor6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00152");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.client.Client client21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder4.setClient(client21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00153");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.client.Client.Provider provider17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder18 = builder16.setClient(provider17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test00154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00154");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RequestInterceptor requestInterceptor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setRequestInterceptor(requestInterceptor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00155");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.ErrorHandler errorHandler23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder0.setErrorHandler(errorHandler23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00156");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.Server server26 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder27 = builder24.setServer(server26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
    }

    @Test
    public void test00157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00157");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.Server server43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder0.setServer(server43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00158");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter11 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00159");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder55.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel68);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder64.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = builder52.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder29.setLog(log71);
        retrofit.RestAdapter.Builder builder76 = builder4.setLog(log71);
        retrofit.client.Client.Provider provider77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder4.setClient(provider77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test00160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00160");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) -1, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00161");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.Profiler profiler25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setProfiler(profiler25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00162");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.client.Client.Provider provider29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder28.setClient(provider29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00163");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.Server server25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setServer(server25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00164");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) 10, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 10");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00165");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) -1, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00166");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.converter.Converter converter21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder20.setConverter(converter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00167");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder10.setClient(provider58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00168");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.ErrorHandler errorHandler58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder10.setErrorHandler(errorHandler58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00169");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        retrofit.Server server97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder96.setServer(server97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test00170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00170");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedInput typedInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response4 = new retrofit.client.Response((int) (short) 1, "hi!", headerList2, typedInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00171");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) '#', "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 35");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00172");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder31 = builder4.setExecutors(executor29, executor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00173");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder23.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder0.setLog(log42);
        retrofit.Server server47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder0.setServer(server47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00174");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        java.lang.Class<?> wildcardClass18 = builder17.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test00175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00175");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.Server server29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder28.setServer(server29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00176");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.converter.Converter converter58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder57.setConverter(converter58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00177");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.converter.Converter converter27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder28 = builder24.setConverter(converter27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(restAdapter26);
    }

    @Test
    public void test00178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00178");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedInput typedInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response4 = new retrofit.client.Response((int) ' ', "hi!", headerList2, typedInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 32");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00179");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) 10, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 10");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00180");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder27.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder31.setLogLevel(logLevel39);
        restAdapter25.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean44 = logLevel43.log();
        restAdapter25.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter25.getLogLevel();
        java.lang.Class<?> wildcardClass47 = restAdapter25.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test00181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00181");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.Server server13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder4.setServer(server13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00182");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder31 = builder28.setExecutors(executor29, executor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00183");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        log19.log("");
        java.lang.Class<?> wildcardClass25 = log19.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test00184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00184");
        retrofit.RestAdapter.LogLevel logLevel0 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean1 = logLevel0.log();
        java.lang.Class<?> wildcardClass2 = logLevel0.getClass();
        org.junit.Assert.assertTrue("'" + logLevel0 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel0.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test00185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00185");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.client.Client.Provider provider7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder6.setClient(provider7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00186");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder22.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        log33.log("hi!");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log33);
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder38.setExecutors(executor39, executor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test00187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00187");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        retrofit.RestAdapter.LogLevel logLevel97 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean98 = logLevel97.log();
        retrofit.RestAdapter.Builder builder99 = builder96.setLogLevel(logLevel97);
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(builder99);
    }

    @Test
    public void test00188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00188");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.ErrorHandler errorHandler43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder42.setErrorHandler(errorHandler43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00189");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder7.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log23);
        log23.log("hi!");
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log23);
        retrofit.Profiler profiler29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder4.setProfiler(profiler29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00190");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.client.Client.Provider provider9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder8.setClient(provider9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00191");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.ErrorHandler errorHandler25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setErrorHandler(errorHandler25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00192");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RequestInterceptor requestInterceptor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder2.setRequestInterceptor(requestInterceptor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00193");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder23.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder0.setLog(log42);
        retrofit.Server server47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder46.setServer(server47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00194");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.RequestInterceptor requestInterceptor29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder22.setRequestInterceptor(requestInterceptor29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00195");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.Server server22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder23 = builder4.setServer(server22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test00196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00196");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.Server server18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder17.setServer(server18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test00197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00197");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder37 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder40.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = builder44.setLogLevel(logLevel52);
        restAdapter38.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder56 = builder12.setLogLevel(logLevel52);
        retrofit.RequestInterceptor requestInterceptor57 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder58 = builder12.setRequestInterceptor(requestInterceptor57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test00198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00198");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter29 = builder28.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00199");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        boolean boolean5 = logLevel3.log();
        java.lang.Class<?> wildcardClass6 = logLevel3.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test00200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00200");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.converter.Converter converter16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder17 = builder4.setConverter(converter16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test00201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00201");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.converter.Converter converter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder6.setConverter(converter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00202");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder23 = builder20.setExecutors(executor21, executor22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00203");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder13 = builder10.setExecutors(executor11, executor12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00204");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        java.lang.Class<?> wildcardClass41 = logLevel37.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test00205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00205");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.converter.Converter converter59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder58.setConverter(converter59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test00206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00206");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder22.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        log33.log("hi!");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log33);
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder4.setExecutors(executor39, executor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test00207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00207");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.client.Client client29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder22.setClient(client29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00208");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.converter.Converter converter32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder4.setConverter(converter32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test00209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00209");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.client.Client client21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder20.setClient(client21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00210");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.client.Client.Provider provider50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder4.setClient(provider50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00211");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.ErrorHandler errorHandler59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder58.setErrorHandler(errorHandler59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test00212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00212");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.client.Client.Provider provider25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setClient(provider25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00213");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.Server server50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder4.setServer(server50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00214");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter32 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test00215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00215");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder7.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log23);
        log23.log("hi!");
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log23);
        retrofit.client.Client client29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder28.setClient(client29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00216");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder4.setLog(log55);
        retrofit.ErrorHandler errorHandler58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder4.setErrorHandler(errorHandler58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00217");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder4.setLog(log55);
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder4.setExecutors(executor58, executor59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00218");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.client.Client client21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder18.setClient(client21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00219");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter97 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test00220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00220");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.client.Client client59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder58.setClient(client59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test00221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00221");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.Profiler profiler60 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder61 = builder59.setProfiler(profiler60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test00222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00222");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) '4', "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 52");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00223");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder43 = builder40.setExecutors(executor41, executor42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test00224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00224");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        java.lang.Class<?> wildcardClass19 = log16.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test00225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00225");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder4.setRequestInterceptor(requestInterceptor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00226");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        java.util.concurrent.Executor executor97 = null;
        java.util.concurrent.Executor executor98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder99 = builder4.setExecutors(executor97, executor98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test00227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00227");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        restAdapter25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter25.getLogLevel();
        java.lang.Class<?> wildcardClass30 = restAdapter25.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test00228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00228");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder23.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder0.setLog(log42);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter47 = builder46.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00229");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder23.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder0.setLog(log42);
        retrofit.Profiler profiler47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder0.setProfiler(profiler47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00230");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.Server server23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder4.setServer(server23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
    }

    @Test
    public void test00231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00231");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.Server server7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder6.setServer(server7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00232");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) 10, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 10");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00233");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.converter.Converter converter23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder22.setConverter(converter23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00234");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.client.Client client60 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder61 = builder10.setClient(client60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test00235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00235");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.converter.Converter converter21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder18.setConverter(converter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00236");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        java.lang.Class<?> wildcardClass3 = logLevel1.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test00237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00237");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        java.lang.Class<?> wildcardClass29 = builder22.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test00238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00238");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder23.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder0.setLog(log42);
        retrofit.RestAdapter.Log log47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder46.setLog(log47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00239");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder22.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        log33.log("hi!");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log33);
        retrofit.Profiler profiler39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder40 = builder38.setProfiler(profiler39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test00240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00240");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        retrofit.converter.Converter converter97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder96.setConverter(converter97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test00241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00241");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.client.Client.Provider provider5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder2.setClient(provider5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00242");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder7.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log23);
        log23.log("hi!");
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log23);
        retrofit.Server server29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder4.setServer(server29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00243");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder37 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder40.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = builder44.setLogLevel(logLevel52);
        restAdapter38.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder56 = builder12.setLogLevel(logLevel52);
        boolean boolean57 = logLevel52.log();
        java.lang.Class<?> wildcardClass58 = logLevel52.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test00244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00244");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        retrofit.Server server97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder4.setServer(server97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test00245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00245");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.client.Client client22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder23 = builder21.setClient(client22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test00246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00246");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder22.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        log33.log("hi!");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log33);
        retrofit.client.Client.Provider provider39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder40 = builder4.setClient(provider39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test00247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00247");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.Profiler profiler18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder4.setProfiler(profiler18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test00248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00248");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder52 = builder49.setExecutors(executor50, executor51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00249");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder3 = builder1.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLogLevel(logLevel5);
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder8 = builder4.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder9.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder13.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder8.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder1.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel27);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter31 = builder30.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test00250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00250");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder18.setRequestInterceptor(requestInterceptor21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00251");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder23 = builder4.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder4.setRequestInterceptor(requestInterceptor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test00252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00252");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.client.Client client43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder42.setClient(client43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00253");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.Profiler profiler41 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder42 = builder24.setProfiler(profiler41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test00254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00254");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter23 = builder22.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00255");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.ErrorHandler errorHandler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder4.setErrorHandler(errorHandler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00256");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.Server server58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder10.setServer(server58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00257");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder23.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder0.setLog(log42);
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder49 = builder46.setExecutors(executor47, executor48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00258");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response(100, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00259");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean61 = logLevel60.log();
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder10.setLogLevel(logLevel60);
        retrofit.RequestInterceptor requestInterceptor64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder10.setRequestInterceptor(requestInterceptor64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test00260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00260");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder7.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log23);
        log23.log("hi!");
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log23);
        retrofit.RequestInterceptor requestInterceptor29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder28.setRequestInterceptor(requestInterceptor29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00261");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.client.Client client9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder8.setClient(client9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00262");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.Profiler profiler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setProfiler(profiler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00263");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.Server server61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder60.setServer(server61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test00264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00264");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder37 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder40.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = builder44.setLogLevel(logLevel52);
        restAdapter38.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder56 = builder12.setLogLevel(logLevel52);
        retrofit.RequestInterceptor requestInterceptor57 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder58 = builder56.setRequestInterceptor(requestInterceptor57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test00265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00265");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        java.lang.Class<?> wildcardClass23 = log19.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test00266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00266");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RequestInterceptor requestInterceptor1 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder2 = builder0.setRequestInterceptor(requestInterceptor1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00267");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.Profiler profiler59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder12.setProfiler(profiler59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test00268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00268");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.client.Client.Provider provider61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder58.setClient(provider61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test00269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00269");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.Server server15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder16 = builder4.setServer(server15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test00270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00270");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        boolean boolean11 = logLevel8.log();
        java.lang.Class<?> wildcardClass12 = logLevel8.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test00271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00271");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter59 = builder58.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test00272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00272");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder17 = builder15.setClient(provider16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test00273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00273");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.Profiler profiler23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder20.setProfiler(profiler23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00274");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.client.Client.Provider provider5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder2.setClient(provider5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00275");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RequestInterceptor requestInterceptor50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder49.setRequestInterceptor(requestInterceptor50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00276");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder16.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder15.setLog(log35);
        log35.log("hi!");
        retrofit.RestAdapter.Builder builder42 = builder10.setLog(log35);
        retrofit.converter.Converter converter43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder42.setConverter(converter43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00277");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder72.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder71.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder64.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder63.setLog(log83);
        retrofit.RestAdapter.Builder builder88 = builder12.setLog(log83);
        retrofit.RequestInterceptor requestInterceptor89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder12.setRequestInterceptor(requestInterceptor89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test00278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00278");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter15 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test00279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00279");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        restAdapter25.setLogLevel(logLevel26);
        java.lang.Class<?> wildcardClass29 = restAdapter25.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test00280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00280");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.Server server61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder58.setServer(server61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test00281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00281");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        restAdapter25.setLogLevel(logLevel28);
        java.lang.Class<?> wildcardClass31 = restAdapter25.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test00282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00282");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder7.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log23);
        log23.log("hi!");
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log23);
        retrofit.ErrorHandler errorHandler29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder28.setErrorHandler(errorHandler29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00283");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean61 = logLevel60.log();
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder10.setLogLevel(logLevel60);
        retrofit.Server server64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder63.setServer(server64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test00284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00284");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder18.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder22.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder17.setLog(log29);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        boolean boolean43 = logLevel40.log();
        retrofit.RestAdapter.Builder builder44 = builder17.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder45.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel53);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder49.setLog(log56);
        log56.log("hi!");
        log56.log("");
        retrofit.RestAdapter.Builder builder62 = builder17.setLog(log56);
        log56.log("");
        retrofit.RestAdapter.Builder builder65 = builder12.setLog(log56);
        retrofit.ErrorHandler errorHandler66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder12.setErrorHandler(errorHandler66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test00285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00285");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder23 = builder4.setServer("hi!");
        retrofit.Profiler profiler24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder23.setProfiler(profiler24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test00286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00286");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder59.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = builder63.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder58.setLogLevel(logLevel71);
        retrofit.ErrorHandler errorHandler75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder74.setErrorHandler(errorHandler75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test00287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00287");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.client.Client client19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder18.setClient(client19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test00288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00288");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) 0, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00289");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder22.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel44);
        boolean boolean47 = logLevel44.log();
        retrofit.RestAdapter.Builder builder48 = builder21.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder49.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log60);
        log60.log("hi!");
        log60.log("");
        retrofit.RestAdapter.Builder builder66 = builder21.setLog(log60);
        log60.log("hi!");
        retrofit.RestAdapter.Builder builder69 = builder4.setLog(log60);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean73 = logLevel72.log();
        restAdapter70.setLogLevel(logLevel72);
        java.lang.Class<?> wildcardClass75 = restAdapter70.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test00290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00290");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder58.setRequestInterceptor(requestInterceptor61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test00291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00291");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel25);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder21.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = builder16.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = builder9.setLog(log28);
        retrofit.RestAdapter.Builder builder33 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Builder builder39 = builder2.setLogLevel(logLevel38);
        retrofit.Profiler profiler40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder2.setProfiler(profiler40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test00292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00292");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder55.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel68);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder64.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = builder52.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder29.setLog(log71);
        retrofit.RestAdapter.Builder builder76 = builder4.setLog(log71);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter77 = builder76.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test00293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00293");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.Profiler profiler58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder57.setProfiler(profiler58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00294");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder40.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder35.setLogLevel(logLevel48);
        retrofit.RestAdapter restAdapter52 = builder35.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder56.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder61.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel69);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder65.setLog(log72);
        retrofit.RestAdapter.Builder builder74 = builder60.setLog(log72);
        retrofit.RestAdapter.Builder builder75 = builder53.setLog(log72);
        retrofit.RestAdapter.Builder builder77 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder83 = builder79.setLogLevel(logLevel82);
        boolean boolean84 = logLevel82.log();
        restAdapter78.setLogLevel(logLevel82);
        restAdapter52.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder87 = builder0.setLogLevel(logLevel82);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter88 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test00295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00295");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) 1, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00296");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder22.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        log33.log("hi!");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log33);
        retrofit.ErrorHandler errorHandler39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder40 = builder4.setErrorHandler(errorHandler39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test00297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00297");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.Server server9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder2.setServer(server9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00298");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder4.setRequestInterceptor(requestInterceptor18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test00299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00299");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.Server server23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder22.setServer(server23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00300");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.ErrorHandler errorHandler25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setErrorHandler(errorHandler25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00301");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel25);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder21.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = builder16.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = builder9.setLog(log28);
        retrofit.RestAdapter.Builder builder33 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Builder builder39 = builder2.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder2.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor42 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder43 = builder2.setRequestInterceptor(requestInterceptor42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
    }

    @Test
    public void test00302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00302");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean61 = logLevel60.log();
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder10.setLogLevel(logLevel60);
        retrofit.converter.Converter converter64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder10.setConverter(converter64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test00303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00303");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder59.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = builder63.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder58.setLogLevel(logLevel71);
        retrofit.RequestInterceptor requestInterceptor75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder58.setRequestInterceptor(requestInterceptor75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test00304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00304");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.converter.Converter converter50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder49.setConverter(converter50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00305");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder3 = builder1.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLogLevel(logLevel5);
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder8 = builder4.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder9.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder13.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder8.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder1.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean45 = logLevel44.log();
        retrofit.RestAdapter.Builder builder46 = builder35.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder30.setLogLevel(logLevel44);
        retrofit.converter.Converter converter48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder49 = builder47.setConverter(converter48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test00306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00306");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.Profiler profiler21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder20.setProfiler(profiler21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00307");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.Server server9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder6.setServer(server9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00308");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.client.Client.Provider provider21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder18.setClient(provider21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00309");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder6.setExecutors(executor9, executor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00310");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.converter.Converter converter41 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder42 = builder40.setConverter(converter41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test00311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00311");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.client.Client client60 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder61 = builder59.setClient(client60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test00312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00312");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.ErrorHandler errorHandler23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder20.setErrorHandler(errorHandler23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00313");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel25);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder21.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = builder16.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = builder9.setLog(log28);
        retrofit.RestAdapter.Builder builder33 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Builder builder39 = builder2.setLogLevel(logLevel38);
        retrofit.Profiler profiler40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder39.setProfiler(profiler40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test00314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00314");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedInput typedInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response4 = new retrofit.client.Response((int) (short) 10, "", headerList2, typedInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 10");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00315");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.Profiler profiler43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder0.setProfiler(profiler43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00316");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.converter.Converter converter22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder23 = builder4.setConverter(converter22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test00317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00317");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.RestAdapter.Builder builder24 = builder4.setServer("hi!");
        retrofit.converter.Converter converter25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setConverter(converter25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00318");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder22.setExecutors(executor23, executor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00319");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder23 = builder4.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder23.setRequestInterceptor(requestInterceptor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test00320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00320");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.Server server16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder17 = builder4.setServer(server16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test00321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00321");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder4.setLog(log55);
        retrofit.client.Client.Provider provider58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder57.setClient(provider58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00322");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter60 = builder59.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test00323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00323");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) -1, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00324");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder58 = builder54.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder59.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel67);
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder71 = builder63.setLog(log70);
        retrofit.RestAdapter.Builder builder72 = builder58.setLog(log70);
        retrofit.RestAdapter.Builder builder73 = builder51.setLog(log70);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder74.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder80 = builder50.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder83 = builder81.setLogLevel(logLevel82);
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder85 = builder81.setLogLevel(logLevel84);
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder88 = builder86.setLogLevel(logLevel87);
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder85.setLogLevel(logLevel89);
        retrofit.RestAdapter.Log log92 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder93 = builder85.setLog(log92);
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean95 = logLevel94.log();
        retrofit.RestAdapter.Builder builder96 = builder85.setLogLevel(logLevel94);
        retrofit.RestAdapter.Builder builder97 = builder80.setLogLevel(logLevel94);
        retrofit.RestAdapter.Builder builder98 = builder4.setLogLevel(logLevel94);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter99 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test00325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00325");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder47 = builder0.setExecutors(executor45, executor46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test00326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00326");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.client.Client client5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder2.setClient(client5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00327");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        retrofit.Profiler profiler45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder44.setProfiler(profiler45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test00328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00328");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.Server server18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder4.setServer(server18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test00329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00329");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedInput typedInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response4 = new retrofit.client.Response((-1), "", headerList2, typedInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test00330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00330");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) 100, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00331");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder27.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder31.setLogLevel(logLevel39);
        restAdapter25.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean44 = logLevel43.log();
        restAdapter25.setLogLevel(logLevel43);
        java.lang.Class<?> wildcardClass46 = logLevel43.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test00332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00332");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        log43.log("hi!");
        log43.log("");
        java.lang.Class<?> wildcardClass54 = log43.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test00333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00333");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder55.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel68);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder64.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = builder52.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder29.setLog(log71);
        retrofit.RestAdapter.Builder builder76 = builder4.setLog(log71);
        java.util.concurrent.Executor executor77 = null;
        java.util.concurrent.Executor executor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder76.setExecutors(executor77, executor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test00334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00334");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.client.Client client9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder8.setClient(client9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00335");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.Server server25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setServer(server25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00336");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder44.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder49.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder41.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder72.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder71.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder64.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder41.setLog(log83);
        log83.log("");
        retrofit.RestAdapter.Builder builder90 = builder24.setLog(log83);
        java.lang.Class<?> wildcardClass91 = builder90.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00337");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder4.setServer("hi!");
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder15 = builder4.setExecutors(executor13, executor14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00338");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter50 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00339");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        log19.log("");
        log19.log("");
        java.lang.Class<?> wildcardClass27 = log19.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test00340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00340");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.RestAdapter restAdapter41 = builder24.build();
        retrofit.Profiler profiler42 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder43 = builder24.setProfiler(profiler42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
    }

    @Test
    public void test00341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00341");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder44.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder49.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder41.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder72.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder71.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder64.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder41.setLog(log83);
        log83.log("");
        retrofit.RestAdapter.Builder builder90 = builder24.setLog(log83);
        retrofit.ErrorHandler errorHandler91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder90.setErrorHandler(errorHandler91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test00342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00342");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        java.lang.Class<?> wildcardClass43 = builder0.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test00343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00343");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder23 = builder4.setServer("hi!");
        retrofit.Profiler profiler24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder4.setProfiler(profiler24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test00344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00344");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder22.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel44);
        boolean boolean47 = logLevel44.log();
        retrofit.RestAdapter.Builder builder48 = builder21.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder49.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log60);
        log60.log("hi!");
        log60.log("");
        retrofit.RestAdapter.Builder builder66 = builder21.setLog(log60);
        log60.log("hi!");
        retrofit.RestAdapter.Builder builder69 = builder4.setLog(log60);
        retrofit.converter.Converter converter70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder4.setConverter(converter70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test00345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00345");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) 1, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00346");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder8.setClient(provider9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00347");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        retrofit.Server server45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder0.setServer(server45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test00348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00348");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (byte) 100, "", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 100");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00349");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.ErrorHandler errorHandler25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder22.setErrorHandler(errorHandler25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00350");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder37 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder40.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = builder44.setLogLevel(logLevel52);
        restAdapter38.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder56 = builder12.setLogLevel(logLevel52);
        retrofit.converter.Converter converter57 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder58 = builder12.setConverter(converter57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test00351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00351");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean61 = logLevel60.log();
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder10.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder64.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder69.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = builder68.setLog(log80);
        log80.log("hi!");
        log80.log("hi!");
        log80.log("");
        retrofit.RestAdapter.Builder builder89 = builder10.setLog(log80);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter90 = builder89.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test00352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00352");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder29.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder34.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder26.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = builder25.setLog(log45);
        retrofit.RestAdapter.Builder builder50 = builder20.setLog(log45);
        retrofit.client.Client client51 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder52 = builder20.setClient(client51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test00353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00353");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder23 = builder4.setServer("hi!");
        retrofit.client.Client.Provider provider24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder23.setClient(provider24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test00354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00354");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        boolean boolean18 = logLevel16.log();
        boolean boolean19 = logLevel16.log();
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder4.setClient(provider21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00355");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        log69.log("hi!");
        log69.log("");
        retrofit.RestAdapter.Builder builder75 = builder10.setLog(log69);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter76 = builder10.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test00356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00356");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = builder23.setLog(log42);
        retrofit.RestAdapter.Builder builder46 = builder0.setLog(log42);
        retrofit.converter.Converter converter47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder46.setConverter(converter47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00357");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.converter.Converter converter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setConverter(converter11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00358");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel25);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder21.setLog(log28);
        retrofit.RestAdapter.Builder builder30 = builder16.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = builder9.setLog(log28);
        retrofit.RestAdapter.Builder builder33 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Builder builder39 = builder2.setLogLevel(logLevel38);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter40 = builder2.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test00359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00359");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder16.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder15.setLog(log35);
        log35.log("hi!");
        retrofit.RestAdapter.Builder builder42 = builder10.setLog(log35);
        retrofit.client.Client client43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder10.setClient(client43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00360");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel44);
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder48 = builder40.setLog(log47);
        retrofit.RestAdapter.Builder builder49 = builder35.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = builder28.setLog(log47);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder55 = builder51.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder27.setLogLevel(logLevel54);
        restAdapter25.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder67 = builder63.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder68.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel76);
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder72.setLog(log79);
        retrofit.RestAdapter.Builder builder81 = builder67.setLog(log79);
        retrofit.RestAdapter.Builder builder82 = builder60.setLog(log79);
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder85 = builder83.setLogLevel(logLevel84);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder87 = builder83.setLogLevel(logLevel86);
        retrofit.RestAdapter.Builder builder88 = builder82.setLogLevel(logLevel86);
        retrofit.RestAdapter.Builder builder89 = builder59.setLogLevel(logLevel86);
        restAdapter25.setLogLevel(logLevel86);
        java.lang.Class<?> wildcardClass91 = restAdapter25.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00361");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder22.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        log33.log("hi!");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log33);
        retrofit.client.Client.Provider provider39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder40 = builder38.setClient(provider39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test00362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00362");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = builder4.build();
        retrofit.client.Client.Provider provider18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder4.setClient(provider18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(restAdapter17);
    }

    @Test
    public void test00363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00363");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder10 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder16.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder15.setLog(log35);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder43.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder47.setLog(log59);
        retrofit.RestAdapter.Builder builder62 = builder40.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder66.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder71.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log82);
        retrofit.RestAdapter.Builder builder84 = builder70.setLog(log82);
        retrofit.RestAdapter.Builder builder85 = builder63.setLog(log82);
        retrofit.RestAdapter.Builder builder86 = builder40.setLog(log82);
        retrofit.RestAdapter.Builder builder87 = builder15.setLog(log82);
        retrofit.RestAdapter.Builder builder88 = builder2.setLog(log82);
        java.lang.Class<?> wildcardClass89 = builder2.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00364");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean61 = logLevel60.log();
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder10.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder64.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder69.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = builder68.setLog(log80);
        log80.log("hi!");
        log80.log("hi!");
        log80.log("");
        retrofit.RestAdapter.Builder builder89 = builder10.setLog(log80);
        java.lang.Class<?> wildcardClass90 = builder89.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test00365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00365");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder17.setRequestInterceptor(requestInterceptor18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test00366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00366");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        retrofit.Server server45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder44.setServer(server45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test00367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00367");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder18.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder22.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder17.setLog(log29);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        boolean boolean43 = logLevel40.log();
        retrofit.RestAdapter.Builder builder44 = builder17.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder45.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel53);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder49.setLog(log56);
        log56.log("hi!");
        log56.log("");
        retrofit.RestAdapter.Builder builder62 = builder17.setLog(log56);
        log56.log("");
        retrofit.RestAdapter.Builder builder65 = builder12.setLog(log56);
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder65.setExecutors(executor66, executor67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test00368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00368");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder4.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLogLevel(logLevel7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder6.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder11.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        boolean boolean36 = logLevel33.log();
        retrofit.RestAdapter.Builder builder37 = builder10.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder42.setLog(log49);
        log49.log("hi!");
        log49.log("");
        retrofit.RestAdapter.Builder builder55 = builder10.setLog(log49);
        log49.log("hi!");
        log49.log("");
        retrofit.RestAdapter.Builder builder60 = builder4.setLog(log49);
        java.lang.Class<?> wildcardClass61 = log49.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test00369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00369");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder0.setRequestInterceptor(requestInterceptor45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test00370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00370");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        retrofit.ErrorHandler errorHandler45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder44.setErrorHandler(errorHandler45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test00371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00371");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.ErrorHandler errorHandler3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setErrorHandler(errorHandler3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00372");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder3 = builder1.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLogLevel(logLevel5);
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder8 = builder4.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder9.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder13.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder8.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder1.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel27);
        retrofit.Profiler profiler31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder32 = builder30.setProfiler(profiler31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test00373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00373");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.ErrorHandler errorHandler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setErrorHandler(errorHandler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00374");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder7.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log23);
        log23.log("hi!");
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log23);
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder31 = builder4.setExecutors(executor29, executor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00375");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder44.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder49.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder41.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder72.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder71.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder64.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder41.setLog(log83);
        log83.log("");
        retrofit.RestAdapter.Builder builder90 = builder24.setLog(log83);
        retrofit.RestAdapter restAdapter91 = builder24.build();
        retrofit.Server server92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder24.setServer(server92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(restAdapter91);
    }

    @Test
    public void test00376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00376");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder18.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel31);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder27.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder22.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        boolean boolean48 = logLevel45.log();
        retrofit.RestAdapter.Builder builder49 = builder22.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder50.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log61);
        log61.log("hi!");
        log61.log("");
        retrofit.RestAdapter.Builder builder67 = builder22.setLog(log61);
        log61.log("hi!");
        retrofit.RestAdapter.Builder builder70 = builder4.setLog(log61);
        retrofit.converter.Converter converter71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder70.setConverter(converter71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test00377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00377");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        boolean boolean31 = logLevel29.log();
        restAdapter25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder33.setLog(log52);
        retrofit.RestAdapter.Builder builder57 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.getLogLevel();
        restAdapter25.setLogLevel(logLevel60);
        java.lang.Class<?> wildcardClass62 = restAdapter25.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test00378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00378");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder52.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel65);
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder61.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = builder56.setLog(log68);
        retrofit.RestAdapter.Builder builder71 = builder29.setLog(log68);
        log68.log("hi!");
        retrofit.RestAdapter.Builder builder74 = builder22.setLog(log68);
        retrofit.Profiler profiler75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder74.setProfiler(profiler75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test00379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00379");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.Server server3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setServer(server3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00380");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder9 = builder7.setServer("hi!");
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.converter.Converter converter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder4.setConverter(converter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00381");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        java.lang.Class<?> wildcardClass5 = builder4.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test00382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00382");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedInput typedInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response6 = new retrofit.client.Response((int) (short) 0, "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test00383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00383");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder7.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log23);
        log23.log("hi!");
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log23);
        retrofit.client.Client.Provider provider29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder4.setClient(provider29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00384");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        log69.log("hi!");
        log69.log("");
        retrofit.RestAdapter.Builder builder75 = builder10.setLog(log69);
        retrofit.converter.Converter converter76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder75.setConverter(converter76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test00385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00385");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder4.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLogLevel(logLevel7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder6.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder11.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        boolean boolean36 = logLevel33.log();
        retrofit.RestAdapter.Builder builder37 = builder10.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder42.setLog(log49);
        log49.log("hi!");
        log49.log("");
        retrofit.RestAdapter.Builder builder55 = builder10.setLog(log49);
        log49.log("hi!");
        log49.log("");
        retrofit.RestAdapter.Builder builder60 = builder4.setLog(log49);
        retrofit.Profiler profiler61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder60.setProfiler(profiler61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test00386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00386");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.Profiler profiler22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder23 = builder21.setProfiler(profiler22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test00387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00387");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.client.Client client9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder6.setClient(client9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00388");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder15 = builder12.setExecutors(executor13, executor14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00389");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.client.Client client23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder4.setClient(client23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
    }

    @Test
    public void test00390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00390");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder9 = builder7.setServer("hi!");
        retrofit.RestAdapter.Log log10 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLog(log10);
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log10);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder4.setRequestInterceptor(requestInterceptor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00391");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        log69.log("hi!");
        log69.log("");
        retrofit.RestAdapter.Builder builder75 = builder10.setLog(log69);
        retrofit.RequestInterceptor requestInterceptor76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder75.setRequestInterceptor(requestInterceptor76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test00392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00392");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.RestAdapter.Builder builder24 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder28 = builder24.setRequestInterceptor(requestInterceptor27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test00393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00393");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder4.setServer("hi!");
        retrofit.client.Client client13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder12.setClient(client13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test00394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00394");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder3 = builder1.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLogLevel(logLevel5);
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder8 = builder4.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder9.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder13.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder8.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder1.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean45 = logLevel44.log();
        retrofit.RestAdapter.Builder builder46 = builder35.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder30.setLogLevel(logLevel44);
        retrofit.Server server48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder49 = builder30.setServer(server48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test00395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00395");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        java.lang.Class<?> wildcardClass3 = builder2.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test00396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00396");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder45.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder50.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log61);
        log61.log("hi!");
        log61.log("hi!");
        retrofit.RestAdapter.Builder builder68 = builder0.setLog(log61);
        retrofit.client.Client client69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder68.setClient(client69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test00397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00397");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder72.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder71.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder64.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder63.setLog(log83);
        retrofit.RestAdapter.Builder builder88 = builder12.setLog(log83);
        retrofit.Profiler profiler89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder88.setProfiler(profiler89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test00398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00398");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder4.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLogLevel(logLevel7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder6.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder11.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        boolean boolean36 = logLevel33.log();
        retrofit.RestAdapter.Builder builder37 = builder10.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder42.setLog(log49);
        log49.log("hi!");
        log49.log("");
        retrofit.RestAdapter.Builder builder55 = builder10.setLog(log49);
        log49.log("hi!");
        log49.log("");
        retrofit.RestAdapter.Builder builder60 = builder4.setLog(log49);
        retrofit.client.Client client61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder60.setClient(client61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test00399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00399");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder8.setExecutors(executor9, executor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00400");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.Profiler profiler21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder18.setProfiler(profiler21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00401");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.Profiler profiler17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder18 = builder4.setProfiler(profiler17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test00402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00402");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.RestAdapter restAdapter41 = builder24.build();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder45.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder50.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = builder42.setLog(log61);
        retrofit.RestAdapter.Builder builder66 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = builder66.build();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder72 = builder68.setLogLevel(logLevel71);
        boolean boolean73 = logLevel71.log();
        restAdapter67.setLogLevel(logLevel71);
        restAdapter41.setLogLevel(logLevel71);
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter41.getLogLevel();
        java.lang.Class<?> wildcardClass77 = logLevel76.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test00403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00403");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.converter.Converter converter16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder17 = builder15.setConverter(converter16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test00404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00404");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = builder2.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test00405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00405");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RequestInterceptor requestInterceptor50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder4.setRequestInterceptor(requestInterceptor50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00406");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder10 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder34.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder43 = builder39.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel47);
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder43.setLog(log50);
        retrofit.RestAdapter.Builder builder52 = builder38.setLog(log50);
        retrofit.RestAdapter.Builder builder53 = builder11.setLog(log50);
        retrofit.RestAdapter.Builder builder55 = builder11.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder56.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder61.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel69);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder65.setLog(log72);
        retrofit.RestAdapter.Builder builder74 = builder60.setLog(log72);
        log72.log("hi!");
        log72.log("hi!");
        retrofit.RestAdapter.Builder builder79 = builder11.setLog(log72);
        retrofit.RestAdapter.Builder builder80 = builder10.setLog(log72);
        retrofit.converter.Converter converter81 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder82 = builder10.setConverter(converter81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test00407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00407");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.RestAdapter.Builder builder24 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder30.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder29.setLog(log41);
        log41.log("");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log41);
        retrofit.converter.Converter converter47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder24.setConverter(converter47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00408");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder18.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder22.setLog(log29);
        retrofit.RestAdapter.Builder builder31 = builder17.setLog(log29);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        boolean boolean43 = logLevel40.log();
        retrofit.RestAdapter.Builder builder44 = builder17.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder45.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel53);
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder49.setLog(log56);
        log56.log("hi!");
        log56.log("");
        retrofit.RestAdapter.Builder builder62 = builder17.setLog(log56);
        log56.log("");
        retrofit.RestAdapter.Builder builder65 = builder12.setLog(log56);
        retrofit.Server server66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder12.setServer(server66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test00409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00409");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = builder9.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel17);
        retrofit.Profiler profiler21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder20.setProfiler(profiler21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00410");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder15.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder20.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = builder15.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder29.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder34.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder26.setLog(log45);
        retrofit.RestAdapter.Builder builder50 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = builder50.build();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder57.setLogLevel(logLevel65);
        restAdapter51.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean70 = logLevel69.log();
        restAdapter51.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder25.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder73 = builder4.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider74 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder75 = builder73.setClient(provider74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test00411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00411");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder3 = builder1.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLogLevel(logLevel5);
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder8 = builder4.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder9.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder13.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder8.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder1.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel27);
        retrofit.client.Client client31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder32 = builder30.setClient(client31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test00412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00412");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.client.Client client22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder23 = builder4.setClient(client22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test00413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00413");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder24.setRequestInterceptor(requestInterceptor25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00414");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean61 = logLevel60.log();
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder10.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder68 = builder64.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder73 = builder69.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel77);
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder73.setLog(log80);
        retrofit.RestAdapter.Builder builder82 = builder68.setLog(log80);
        log80.log("hi!");
        log80.log("hi!");
        log80.log("");
        retrofit.RestAdapter.Builder builder89 = builder10.setLog(log80);
        java.util.concurrent.Executor executor90 = null;
        java.util.concurrent.Executor executor91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder89.setExecutors(executor90, executor91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test00415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00415");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.ErrorHandler errorHandler9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder8.setErrorHandler(errorHandler9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00416");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.client.Client.Provider provider50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder49.setClient(provider50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00417");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.RestAdapter.Builder builder24 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder30.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder29.setLog(log41);
        log41.log("");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log41);
        retrofit.Profiler profiler47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder24.setProfiler(profiler47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00418");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = builder4.build();
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder4.setExecutors(executor18, executor19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(restAdapter17);
    }

    @Test
    public void test00419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00419");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = builder4.build();
        retrofit.ErrorHandler errorHandler18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder4.setErrorHandler(errorHandler18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(restAdapter17);
    }

    @Test
    public void test00420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00420");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder72.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder71.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder64.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder63.setLog(log83);
        retrofit.RestAdapter.Builder builder88 = builder12.setLog(log83);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter89 = builder88.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test00421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00421");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        boolean boolean18 = logLevel16.log();
        boolean boolean19 = logLevel16.log();
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder25.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder37 = builder25.setServer("hi!");
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder43.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder42.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel65);
        boolean boolean68 = logLevel65.log();
        retrofit.RestAdapter.Builder builder69 = builder42.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder70.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder80 = builder74.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder74.setLog(log81);
        log81.log("hi!");
        log81.log("");
        retrofit.RestAdapter.Builder builder87 = builder42.setLog(log81);
        log81.log("hi!");
        retrofit.RestAdapter.Builder builder90 = builder25.setLog(log81);
        retrofit.RestAdapter restAdapter91 = builder90.build();
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.getLogLevel();
        retrofit.RestAdapter.Builder builder93 = builder20.setLogLevel(logLevel92);
        retrofit.client.Client client94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder20.setClient(client94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(restAdapter91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test00422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00422");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.ErrorHandler errorHandler15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder16 = builder4.setErrorHandler(errorHandler15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test00423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00423");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.RestAdapter.Builder builder24 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder30.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder29.setLog(log41);
        log41.log("");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log41);
        retrofit.converter.Converter converter47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder46.setConverter(converter47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00424");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.client.Client.Provider provider5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder4.setClient(provider5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test00425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00425");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RequestInterceptor requestInterceptor60 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder61 = builder59.setRequestInterceptor(requestInterceptor60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test00426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00426");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder10 = builder2.setServer("hi!");
        retrofit.converter.Converter converter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder2.setConverter(converter11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00427");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.converter.Converter converter58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder10.setConverter(converter58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00428");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder37 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder44 = builder40.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder53 = builder51.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = builder44.setLogLevel(logLevel52);
        restAdapter38.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder56 = builder12.setLogLevel(logLevel52);
        java.lang.Class<?> wildcardClass57 = builder56.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test00429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00429");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.Profiler profiler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setProfiler(profiler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00430");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Builder builder57 = builder4.setLog(log55);
        java.lang.Class<?> wildcardClass58 = builder57.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test00431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00431");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder45.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder50.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log61);
        log61.log("hi!");
        log61.log("hi!");
        retrofit.RestAdapter.Builder builder68 = builder0.setLog(log61);
        retrofit.client.Client.Provider provider69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder0.setClient(provider69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test00432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00432");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RequestInterceptor requestInterceptor11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder4.setRequestInterceptor(requestInterceptor11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00433");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder3 = builder1.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLogLevel(logLevel5);
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder8 = builder4.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder11 = builder9.setLogLevel(logLevel10);
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder13 = builder9.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel17);
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder13.setLog(log20);
        retrofit.RestAdapter.Builder builder22 = builder8.setLog(log20);
        retrofit.RestAdapter.Builder builder23 = builder1.setLog(log20);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder35 = builder31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder35.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean45 = logLevel44.log();
        retrofit.RestAdapter.Builder builder46 = builder35.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder30.setLogLevel(logLevel44);
        java.lang.Class<?> wildcardClass48 = builder47.getClass();
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test00434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00434");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.Server server58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder57.setServer(server58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test00435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00435");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.converter.Converter converter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder10.setConverter(converter11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00436");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder27.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder33.setLog(log52);
        retrofit.RestAdapter.Builder builder57 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder57.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder32.setLogLevel(logLevel63);
        retrofit.RestAdapter restAdapter67 = builder66.build();
        retrofit.Profiler profiler68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder69 = builder66.setProfiler(profiler68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(restAdapter67);
    }

    @Test
    public void test00437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00437");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter5 = builder4.build();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder8 = builder6.setLogLevel(logLevel7);
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder10 = builder6.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder11.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log22);
        retrofit.RestAdapter.Builder builder24 = builder10.setLog(log22);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        boolean boolean36 = logLevel33.log();
        retrofit.RestAdapter.Builder builder37 = builder10.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder42.setLog(log49);
        log49.log("hi!");
        log49.log("");
        retrofit.RestAdapter.Builder builder55 = builder10.setLog(log49);
        log49.log("hi!");
        log49.log("");
        retrofit.RestAdapter.Builder builder60 = builder4.setLog(log49);
        retrofit.client.Client.Provider provider61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder4.setClient(provider61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(restAdapter5);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test00438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00438");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder23 = builder4.setServer("hi!");
        retrofit.converter.Converter converter24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder4.setConverter(converter24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test00439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00439");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder49 = builder45.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder50.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log61);
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log61);
        log61.log("hi!");
        log61.log("hi!");
        retrofit.RestAdapter.Builder builder68 = builder0.setLog(log61);
        retrofit.RequestInterceptor requestInterceptor69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder0.setRequestInterceptor(requestInterceptor69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test00440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00440");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.client.Client client29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder28.setClient(client29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00441");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        java.lang.Class<?> wildcardClass97 = builder4.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00442");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder27.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLogLevel(logLevel30);
        retrofit.converter.Converter converter33 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder34 = builder24.setConverter(converter33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test00443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00443");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder59.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = builder63.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder58.setLogLevel(logLevel71);
        java.util.concurrent.Executor executor75 = null;
        java.util.concurrent.Executor executor76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder74.setExecutors(executor75, executor76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test00444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00444");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder19 = builder15.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder24 = builder20.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = builder15.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder29.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder34.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder26.setLog(log45);
        retrofit.RestAdapter.Builder builder50 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = builder50.build();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder57.setLogLevel(logLevel65);
        restAdapter51.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean70 = logLevel69.log();
        restAdapter51.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder25.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder73 = builder4.setLogLevel(logLevel69);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter74 = builder73.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test00445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00445");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder44.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder49.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder41.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder72.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder71.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder64.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder41.setLog(log83);
        log83.log("");
        retrofit.RestAdapter.Builder builder90 = builder24.setLog(log83);
        retrofit.Profiler profiler91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder90.setProfiler(profiler91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test00446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00446");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.client.Client client18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder4.setClient(client18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test00447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00447");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder33 = builder29.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder38 = builder34.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel42);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder38.setLog(log45);
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = builder26.setLog(log45);
        retrofit.RestAdapter.Builder builder49 = builder25.setLog(log45);
        retrofit.RestAdapter.Builder builder50 = builder20.setLog(log45);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter51 = builder50.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test00448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00448");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.RestAdapter.Builder builder24 = builder4.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder4.setRequestInterceptor(requestInterceptor25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test00449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00449");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder16.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder15.setLog(log35);
        log35.log("hi!");
        retrofit.RestAdapter.Builder builder42 = builder10.setLog(log35);
        retrofit.ErrorHandler errorHandler43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder10.setErrorHandler(errorHandler43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test00450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00450");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder52.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel65);
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder61.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = builder56.setLog(log68);
        retrofit.RestAdapter.Builder builder71 = builder29.setLog(log68);
        log68.log("hi!");
        retrofit.RestAdapter.Builder builder74 = builder22.setLog(log68);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter75 = builder22.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test00451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00451");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        boolean boolean18 = logLevel16.log();
        boolean boolean19 = logLevel16.log();
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel16);
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder23 = builder20.setExecutors(executor21, executor22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00452");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder59 = builder55.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel68);
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder72 = builder64.setLog(log71);
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.RestAdapter.Builder builder74 = builder52.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder29.setLog(log71);
        retrofit.RestAdapter.Builder builder76 = builder4.setLog(log71);
        retrofit.Profiler profiler77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder4.setProfiler(profiler77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test00453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00453");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        java.lang.Class<?> wildcardClass97 = builder96.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00454");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        retrofit.converter.Converter converter97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder4.setConverter(converter97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test00455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00455");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.Server server7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder4.setServer(server7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test00456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00456");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder56 = builder52.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel65);
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder69 = builder61.setLog(log68);
        retrofit.RestAdapter.Builder builder70 = builder56.setLog(log68);
        retrofit.RestAdapter.Builder builder71 = builder29.setLog(log68);
        log68.log("hi!");
        retrofit.RestAdapter.Builder builder74 = builder22.setLog(log68);
        retrofit.client.Client client75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder74.setClient(client75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test00457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00457");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        boolean boolean30 = logLevel27.log();
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder36.setLog(log43);
        log43.log("hi!");
        log43.log("");
        retrofit.RestAdapter.Builder builder49 = builder4.setLog(log43);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder53.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = builder50.setLog(log69);
        retrofit.RestAdapter.Builder builder74 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder81 = builder77.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder84 = builder82.setLogLevel(logLevel83);
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder90 = builder88.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder91 = builder81.setLogLevel(logLevel89);
        restAdapter75.setLogLevel(logLevel89);
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean94 = logLevel93.log();
        restAdapter75.setLogLevel(logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder4.setLogLevel(logLevel93);
        retrofit.client.Client client97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder96.setClient(client97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test00458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00458");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        log69.log("hi!");
        log69.log("");
        retrofit.RestAdapter.Builder builder75 = builder10.setLog(log69);
        retrofit.Profiler profiler76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder10.setProfiler(profiler76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test00459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00459");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder27.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder33.setLog(log52);
        retrofit.RestAdapter.Builder builder57 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder57.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder32.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder66.setLogLevel(logLevel73);
        retrofit.Server server77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder76.setServer(server77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test00460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00460");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder27.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder33.setLog(log52);
        retrofit.RestAdapter.Builder builder57 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder57.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder32.setLogLevel(logLevel63);
        retrofit.ErrorHandler errorHandler67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder32.setErrorHandler(errorHandler67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test00461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00461");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder29.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder24.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder48 = builder44.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder53 = builder49.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel57);
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder53.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder41.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder71 = builder67.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder76 = builder72.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder84 = builder76.setLog(log83);
        retrofit.RestAdapter.Builder builder85 = builder71.setLog(log83);
        retrofit.RestAdapter.Builder builder86 = builder64.setLog(log83);
        retrofit.RestAdapter.Builder builder87 = builder41.setLog(log83);
        log83.log("");
        retrofit.RestAdapter.Builder builder90 = builder24.setLog(log83);
        retrofit.client.Client client91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder90.setClient(client91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test00462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00462");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder10 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder16.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder15.setLog(log35);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder43.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder47.setLog(log59);
        retrofit.RestAdapter.Builder builder62 = builder40.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder66.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder71.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log82);
        retrofit.RestAdapter.Builder builder84 = builder70.setLog(log82);
        retrofit.RestAdapter.Builder builder85 = builder63.setLog(log82);
        retrofit.RestAdapter.Builder builder86 = builder40.setLog(log82);
        retrofit.RestAdapter.Builder builder87 = builder15.setLog(log82);
        retrofit.RestAdapter.Builder builder88 = builder2.setLog(log82);
        retrofit.client.Client client89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder2.setClient(client89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test00463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00463");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder10 = builder6.setRequestInterceptor(requestInterceptor9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00464");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel26);
        retrofit.ErrorHandler errorHandler29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder28.setErrorHandler(errorHandler29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00465");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.RestAdapter.Builder builder24 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.Server server27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder28 = builder26.setServer(server27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test00466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00466");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder11.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log22);
        log22.log("hi!");
        retrofit.RestAdapter.Builder builder26 = builder4.setLog(log22);
        retrofit.RequestInterceptor requestInterceptor27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder28 = builder4.setRequestInterceptor(requestInterceptor27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test00467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00467");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder58.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder67 = builder65.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel66);
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder70 = builder62.setLog(log69);
        log69.log("hi!");
        log69.log("");
        retrofit.RestAdapter.Builder builder75 = builder10.setLog(log69);
        retrofit.RequestInterceptor requestInterceptor76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder10.setRequestInterceptor(requestInterceptor76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test00468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00468");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder7.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log23);
        log23.log("hi!");
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log23);
        retrofit.client.Client.Provider provider29 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder28.setClient(provider29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test00469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00469");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean61 = logLevel60.log();
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder10.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder65 = builder10.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder65.setRequestInterceptor(requestInterceptor66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test00470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00470");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.client.Client.Provider provider18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder17.setClient(provider18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test00471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00471");
        retrofit.RestAdapter.Log log0 = retrofit.RestAdapter.Log.NONE;
        log0.log("hi!");
        java.lang.Class<?> wildcardClass3 = log0.getClass();
        org.junit.Assert.assertNotNull(log0);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test00472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00472");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.client.Client.Provider provider15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder16 = builder14.setClient(provider15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test00473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00473");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder40.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder35.setLogLevel(logLevel48);
        retrofit.RestAdapter restAdapter52 = builder35.build();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder56.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder61.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder70 = builder68.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel69);
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder73 = builder65.setLog(log72);
        retrofit.RestAdapter.Builder builder74 = builder60.setLog(log72);
        retrofit.RestAdapter.Builder builder75 = builder53.setLog(log72);
        retrofit.RestAdapter.Builder builder77 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder83 = builder79.setLogLevel(logLevel82);
        boolean boolean84 = logLevel82.log();
        restAdapter78.setLogLevel(logLevel82);
        restAdapter52.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder87 = builder0.setLogLevel(logLevel82);
        retrofit.Server server88 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder89 = builder0.setServer(server88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test00474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00474");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder59.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = builder63.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder58.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder58.setClient(provider75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test00475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00475");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder27.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder33.setLog(log52);
        retrofit.RestAdapter.Builder builder57 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder57.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder32.setLogLevel(logLevel63);
        retrofit.RequestInterceptor requestInterceptor67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder32.setRequestInterceptor(requestInterceptor67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test00476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00476");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter9 = builder2.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test00477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00477");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder32 = builder28.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder32.setLog(log39);
        retrofit.RestAdapter.Builder builder41 = builder27.setLog(log39);
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log39);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("hi!");
        java.lang.Class<?> wildcardClass45 = builder44.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test00478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00478");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder10 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder28 = builder24.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel32);
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder28.setLog(log35);
        retrofit.RestAdapter.Builder builder37 = builder23.setLog(log35);
        retrofit.RestAdapter.Builder builder38 = builder16.setLog(log35);
        retrofit.RestAdapter.Builder builder39 = builder15.setLog(log35);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder43.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder52 = builder48.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel56);
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = builder52.setLog(log59);
        retrofit.RestAdapter.Builder builder61 = builder47.setLog(log59);
        retrofit.RestAdapter.Builder builder62 = builder40.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder66.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder75 = builder71.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel79);
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder83 = builder75.setLog(log82);
        retrofit.RestAdapter.Builder builder84 = builder70.setLog(log82);
        retrofit.RestAdapter.Builder builder85 = builder63.setLog(log82);
        retrofit.RestAdapter.Builder builder86 = builder40.setLog(log82);
        retrofit.RestAdapter.Builder builder87 = builder15.setLog(log82);
        retrofit.RestAdapter.Builder builder88 = builder2.setLog(log82);
        retrofit.converter.Converter converter89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder2.setConverter(converter89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test00479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00479");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = builder4.build();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder18.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder27 = builder23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel31);
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder35 = builder27.setLog(log34);
        retrofit.RestAdapter.Builder builder36 = builder22.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        boolean boolean48 = logLevel45.log();
        retrofit.RestAdapter.Builder builder49 = builder22.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder54 = builder50.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLogLevel(logLevel56);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel58);
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder54.setLog(log61);
        log61.log("hi!");
        log61.log("");
        retrofit.RestAdapter.Builder builder67 = builder22.setLog(log61);
        log61.log("");
        log61.log("");
        retrofit.RestAdapter.Builder builder72 = builder4.setLog(log61);
        retrofit.converter.Converter converter73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder74 = builder72.setConverter(converter73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(restAdapter17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test00480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00480");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder6 = builder4.setLog(log5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder11 = builder7.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder16 = builder12.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder16.setLog(log23);
        retrofit.RestAdapter.Builder builder25 = builder11.setLog(log23);
        log23.log("hi!");
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log23);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder32.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder41 = builder37.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder46 = builder44.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel45);
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder41.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = builder29.setLog(log48);
        retrofit.RestAdapter.Builder builder53 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = builder53.build();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder58 = builder56.setLogLevel(logLevel57);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder60 = builder56.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder60.setLogLevel(logLevel68);
        restAdapter54.setLogLevel(logLevel68);
        boolean boolean72 = logLevel68.log();
        retrofit.RestAdapter.Builder builder73 = builder4.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder74.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLogLevel(logLevel80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder83 = builder79.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder86 = builder84.setLogLevel(logLevel85);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder88 = builder86.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder89 = builder83.setLogLevel(logLevel87);
        retrofit.RestAdapter.Log log90 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder91 = builder83.setLog(log90);
        retrofit.RestAdapter.Builder builder92 = builder78.setLog(log90);
        log90.log("hi!");
        log90.log("hi!");
        retrofit.RestAdapter.Builder builder97 = builder73.setLog(log90);
        retrofit.ErrorHandler errorHandler98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder99 = builder97.setErrorHandler(errorHandler98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(log90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test00481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00481");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder17.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLogLevel(logLevel23);
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder26 = builder22.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder26.setLog(log33);
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        log33.log("hi!");
        retrofit.RestAdapter.Builder builder38 = builder4.setLog(log33);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder41 = builder39.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder42.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLogLevel(logLevel48);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder51 = builder47.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder54 = builder52.setLogLevel(logLevel53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder51.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = builder46.setLog(log58);
        retrofit.RestAdapter.Builder builder61 = builder39.setLog(log58);
        log58.log("");
        retrofit.RestAdapter.Builder builder64 = builder38.setLog(log58);
        retrofit.client.Client.Provider provider65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder64.setClient(provider65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test00482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00482");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder23 = builder4.setServer("hi!");
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder4.setExecutors(executor24, executor25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test00483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00483");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder27.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder33.setLog(log52);
        retrofit.RestAdapter.Builder builder57 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder57.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder32.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder69 = builder67.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder71 = builder69.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder66.setLogLevel(logLevel73);
        retrofit.client.Client client77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder66.setClient(client77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test00484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00484");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = builder4.build();
        java.lang.Class<?> wildcardClass18 = restAdapter17.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(restAdapter17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test00485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00485");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.client.Client.Provider provider21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder20.setClient(provider21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00486");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        boolean boolean18 = logLevel16.log();
        boolean boolean19 = logLevel16.log();
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel16);
        retrofit.Server server21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder22 = builder4.setServer(server21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test00487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00487");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder0.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLogLevel(logLevel15);
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder18 = builder14.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder23.setLog(log30);
        retrofit.RestAdapter.Builder builder32 = builder18.setLog(log30);
        retrofit.RestAdapter.Builder builder33 = builder11.setLog(log30);
        retrofit.RestAdapter.Builder builder35 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder42.setLogLevel(logLevel50);
        restAdapter36.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean55 = logLevel54.log();
        restAdapter36.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder10.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder10.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean61 = logLevel60.log();
        boolean boolean62 = logLevel60.log();
        retrofit.RestAdapter.Builder builder63 = builder10.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder65 = builder10.setServer("hi!");
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder65.setExecutors(executor66, executor67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test00488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00488");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder20.setRequestInterceptor(requestInterceptor23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test00489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00489");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder17.setLog(log24);
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter.Builder builder27 = builder5.setLog(log24);
        retrofit.RestAdapter.Builder builder28 = builder4.setLog(log24);
        log24.log("hi!");
        java.lang.Class<?> wildcardClass31 = log24.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test00490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00490");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder10 = builder2.setServer("hi!");
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder13 = builder10.setExecutors(executor11, executor12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00491");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter.Builder builder15 = builder4.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder17 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder30 = builder26.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel34);
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder30.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log37);
        retrofit.RestAdapter.Builder builder40 = builder18.setLog(log37);
        retrofit.RestAdapter.Builder builder42 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.Builder builder49 = builder4.setLogLevel(logLevel48);
        retrofit.RequestInterceptor requestInterceptor50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder49.setRequestInterceptor(requestInterceptor50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test00492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00492");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder4.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder20 = builder16.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder25.setLog(log32);
        retrofit.RestAdapter.Builder builder34 = builder20.setLog(log32);
        retrofit.RestAdapter.Builder builder35 = builder13.setLog(log32);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder13.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder58 = builder12.setLog(log52);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLogLevel(logLevel60);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder63 = builder59.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = builder63.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder58.setLogLevel(logLevel71);
        retrofit.converter.Converter converter75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder74.setConverter(converter75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test00493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00493");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder31 = builder27.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = builder24.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder35 = builder33.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = builder33.setLog(log52);
        retrofit.RestAdapter.Builder builder57 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RestAdapter restAdapter59 = builder57.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder60.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder57.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder32.setLogLevel(logLevel63);
        retrofit.Profiler profiler67 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder68 = builder32.setProfiler(profiler67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test00494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00494");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder13.setLogLevel(logLevel16);
        boolean boolean18 = logLevel16.log();
        boolean boolean19 = logLevel16.log();
        retrofit.RestAdapter.Builder builder20 = builder4.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLogLevel(logLevel22);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder21.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder25.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder37 = builder25.setServer("hi!");
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder42 = builder38.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder45 = builder43.setLogLevel(logLevel44);
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder47 = builder43.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder52 = builder50.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel51);
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder47.setLog(log54);
        retrofit.RestAdapter.Builder builder56 = builder42.setLog(log54);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder59 = builder57.setLogLevel(logLevel58);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder61 = builder57.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel65);
        boolean boolean68 = logLevel65.log();
        retrofit.RestAdapter.Builder builder69 = builder42.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder72 = builder70.setLogLevel(logLevel71);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder74 = builder70.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder77 = builder75.setLogLevel(logLevel76);
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder80 = builder74.setLogLevel(logLevel78);
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder74.setLog(log81);
        log81.log("hi!");
        log81.log("");
        retrofit.RestAdapter.Builder builder87 = builder42.setLog(log81);
        log81.log("hi!");
        retrofit.RestAdapter.Builder builder90 = builder25.setLog(log81);
        retrofit.RestAdapter restAdapter91 = builder90.build();
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.getLogLevel();
        retrofit.RestAdapter.Builder builder93 = builder20.setLogLevel(logLevel92);
        retrofit.RequestInterceptor requestInterceptor94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder20.setRequestInterceptor(requestInterceptor94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(restAdapter91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test00495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00495");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder4 = builder2.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder10 = builder2.setServer("hi!");
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder13 = builder2.setExecutors(executor11, executor12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test00496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00496");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder4 = builder2.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean19 = logLevel18.log();
        retrofit.RestAdapter.Builder builder20 = builder9.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder4.setLogLevel(logLevel18);
        retrofit.RestAdapter restAdapter22 = builder4.build();
        retrofit.RestAdapter.Builder builder24 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLogLevel(logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder34 = builder30.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLogLevel(logLevel36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel38);
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder34.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = builder29.setLog(log41);
        log41.log("");
        retrofit.RestAdapter.Builder builder46 = builder24.setLog(log41);
        retrofit.client.Client client47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder24.setClient(client47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
    }

    @Test
    public void test00497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00497");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder5 = builder3.setLogLevel(logLevel4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder3.setLogLevel(logLevel6);
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLogLevel(logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder12 = builder8.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder12.setLog(log19);
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = builder0.setLog(log19);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter25.getLogLevel();
        boolean boolean31 = logLevel30.log();
        java.lang.Class<?> wildcardClass32 = logLevel30.getClass();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test00498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00498");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder5.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder12 = builder10.setLogLevel(logLevel11);
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder9.setLog(log16);
        retrofit.RestAdapter.Builder builder18 = builder4.setLog(log16);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder23 = builder19.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLogLevel(logLevel25);
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder32 = builder30.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder23.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder35 = builder23.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder40 = builder36.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLogLevel(logLevel42);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder45 = builder41.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder48 = builder46.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = builder45.setLog(log52);
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        log52.log("hi!");
        retrofit.RestAdapter.Builder builder57 = builder23.setLog(log52);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder60 = builder58.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLogLevel(logLevel62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder65 = builder61.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLogLevel(logLevel67);
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder70 = builder66.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder73 = builder71.setLogLevel(logLevel72);
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel74);
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder70.setLog(log77);
        retrofit.RestAdapter.Builder builder79 = builder65.setLog(log77);
        retrofit.RestAdapter.Builder builder80 = builder58.setLog(log77);
        log77.log("");
        retrofit.RestAdapter.Builder builder83 = builder57.setLog(log77);
        retrofit.RestAdapter.Builder builder84 = builder18.setLog(log77);
        retrofit.converter.Converter converter85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder84.setConverter(converter85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test00499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00499");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = builder4.setLogLevel(logLevel12);
        retrofit.ErrorHandler errorHandler15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder16 = builder14.setErrorHandler(errorHandler15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test00500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00500");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder4 = builder0.setLogLevel(logLevel3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder7 = builder5.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLogLevel(logLevel12);
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder11.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel19);
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder15.setLog(log22);
        log22.log("hi!");
        retrofit.RestAdapter.Builder builder26 = builder4.setLog(log22);
        retrofit.ErrorHandler errorHandler27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder28 = builder4.setErrorHandler(errorHandler27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
    }
}

