/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 05 17:03:19 GMT 2021
 */

package retrofit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.DecimalNode;
import com.google.gson.Gson;
import com.squareup.okhttp.OkHttpClient;
import java.lang.reflect.Type;
import java.net.ResponseCache;
import java.util.Vector;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.Callable;
import java.util.concurrent.Delayed;
import java.util.concurrent.Executor;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;
import retrofit.ErrorHandler;
import retrofit.Profiler;
import retrofit.RequestInterceptor;
import retrofit.RequestInterceptorTape;
import retrofit.RestAdapter;
import retrofit.Server;
import retrofit.client.ApacheClient;
import retrofit.client.Client;
import retrofit.client.Header;
import retrofit.client.OkClient;
import retrofit.client.UrlConnectionClient;
import retrofit.converter.Converter;
import retrofit.converter.GsonConverter;
import retrofit.converter.JacksonConverter;
import retrofit.converter.ProtoConverter;
import retrofit.converter.WireConverter;
import retrofit.mime.TypedByteArray;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RestAdapter_ESTest extends RestAdapter_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      RestAdapter.LogLevel[] restAdapter_LogLevelArray0 = RestAdapter.LogLevel.values();
      assertEquals(4, restAdapter_LogLevelArray0.length);
      assertNotNull(restAdapter_LogLevelArray0);
      
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      UrlConnectionClient urlConnectionClient0 = new UrlConnectionClient();
      assertNotNull(urlConnectionClient0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setClient((Client) urlConnectionClient0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      assertNotNull(forkJoinPool0);
      
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      assertNotNull(threadPoolExecutor_DiscardOldestPolicy0);
      
      Client.Provider client_Provider0 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      Executor executor0 = null;
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setExecutors(forkJoinPool0, executor0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      String string0 = " m,&L/h;J";
      Server server0 = new Server(string0);
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertEquals("default", server0.getName());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setServer(server0);
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertEquals("default", server0.getName());
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.FULL;
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder3.setLogLevel(restAdapter_LogLevel0);
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertEquals("default", server0.getName());
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      
      ProtoConverter protoConverter0 = new ProtoConverter();
      assertNotNull(protoConverter0);
      
      RestAdapter.Builder restAdapter_Builder5 = restAdapter_Builder3.setConverter(protoConverter0);
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertEquals("default", server0.getName());
      assertNotNull(restAdapter_Builder5);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      
      Client.Provider client_Provider1 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder6 = restAdapter_Builder3.setClient((Client) urlConnectionClient0);
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertEquals("default", server0.getName());
      assertNotNull(restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      
      RestAdapter.Builder restAdapter_Builder7 = restAdapter_Builder5.setClient(client_Provider1);
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertEquals("default", server0.getName());
      assertNotNull(restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder7, restAdapter_Builder6);
      assertSame(restAdapter_Builder7, restAdapter_Builder3);
      assertSame(restAdapter_Builder7, restAdapter_Builder1);
      assertSame(restAdapter_Builder7, restAdapter_Builder5);
      assertSame(restAdapter_Builder7, restAdapter_Builder2);
      assertSame(restAdapter_Builder7, restAdapter_Builder0);
      assertSame(restAdapter_Builder7, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder7);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      
      RestAdapter.Builder restAdapter_Builder8 = restAdapter_Builder3.setLog(restAdapter_Log0);
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertEquals("default", server0.getName());
      assertNotNull(restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder8, restAdapter_Builder0);
      assertSame(restAdapter_Builder8, restAdapter_Builder7);
      assertSame(restAdapter_Builder8, restAdapter_Builder2);
      assertSame(restAdapter_Builder8, restAdapter_Builder1);
      assertSame(restAdapter_Builder8, restAdapter_Builder4);
      assertSame(restAdapter_Builder8, restAdapter_Builder6);
      assertSame(restAdapter_Builder8, restAdapter_Builder3);
      assertSame(restAdapter_Builder8, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder8);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder7);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      
      boolean boolean0 = restAdapter_LogLevel0.log();
      assertTrue(boolean0);
      
      RestAdapter.Builder restAdapter_Builder9 = restAdapter_Builder5.setExecutors(forkJoinPool0, executor0);
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertEquals("default", server0.getName());
      assertNotNull(restAdapter_Builder9);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder8);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder9);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder9);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder9, restAdapter_Builder0);
      assertSame(restAdapter_Builder9, restAdapter_Builder7);
      assertSame(restAdapter_Builder9, restAdapter_Builder1);
      assertSame(restAdapter_Builder9, restAdapter_Builder2);
      assertSame(restAdapter_Builder9, restAdapter_Builder5);
      assertSame(restAdapter_Builder9, restAdapter_Builder6);
      assertSame(restAdapter_Builder9, restAdapter_Builder3);
      assertSame(restAdapter_Builder9, restAdapter_Builder8);
      assertSame(restAdapter_Builder9, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder9);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder8);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder7);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder9);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder10 = restAdapter_Builder0.setErrorHandler(errorHandler0);
      assertNotNull(restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder0);
      assertSame(restAdapter_Builder10, restAdapter_Builder7);
      assertSame(restAdapter_Builder10, restAdapter_Builder3);
      assertSame(restAdapter_Builder10, restAdapter_Builder5);
      assertSame(restAdapter_Builder10, restAdapter_Builder1);
      assertSame(restAdapter_Builder10, restAdapter_Builder4);
      assertSame(restAdapter_Builder10, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder8);
      assertSame(restAdapter_Builder10, restAdapter_Builder2);
      assertSame(restAdapter_Builder10, restAdapter_Builder6);
      
      RestAdapter restAdapter0 = restAdapter_Builder10.build();
      assertEquals(RestAdapter.LogLevel.FULL, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder0);
      assertSame(restAdapter_Builder10, restAdapter_Builder7);
      assertSame(restAdapter_Builder10, restAdapter_Builder3);
      assertSame(restAdapter_Builder10, restAdapter_Builder5);
      assertSame(restAdapter_Builder10, restAdapter_Builder1);
      assertSame(restAdapter_Builder10, restAdapter_Builder4);
      assertSame(restAdapter_Builder10, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder8);
      assertSame(restAdapter_Builder10, restAdapter_Builder2);
      assertSame(restAdapter_Builder10, restAdapter_Builder6);
      
      RestAdapter.LogLevel restAdapter_LogLevel1 = RestAdapter.LogLevel.NONE;
      restAdapter0.setLogLevel(restAdapter_LogLevel1);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertFalse(restAdapter_LogLevel1.equals((Object)restAdapter_LogLevel0));
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder0);
      assertSame(restAdapter_Builder10, restAdapter_Builder7);
      assertSame(restAdapter_Builder10, restAdapter_Builder3);
      assertSame(restAdapter_Builder10, restAdapter_Builder5);
      assertSame(restAdapter_Builder10, restAdapter_Builder1);
      assertSame(restAdapter_Builder10, restAdapter_Builder4);
      assertSame(restAdapter_Builder10, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder8);
      assertSame(restAdapter_Builder10, restAdapter_Builder2);
      assertSame(restAdapter_Builder10, restAdapter_Builder6);
      assertNotSame(restAdapter_LogLevel1, restAdapter_LogLevel0);
      
      restAdapter0.setLogLevel(restAdapter_LogLevel0);
      assertEquals(RestAdapter.LogLevel.FULL, restAdapter0.getLogLevel());
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel1));
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder0);
      assertSame(restAdapter_Builder10, restAdapter_Builder7);
      assertSame(restAdapter_Builder10, restAdapter_Builder3);
      assertSame(restAdapter_Builder10, restAdapter_Builder5);
      assertSame(restAdapter_Builder10, restAdapter_Builder1);
      assertSame(restAdapter_Builder10, restAdapter_Builder4);
      assertSame(restAdapter_Builder10, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder8);
      assertSame(restAdapter_Builder10, restAdapter_Builder2);
      assertSame(restAdapter_Builder10, restAdapter_Builder6);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel1);
      
      String string1 = "wK.";
      restAdapter_Log0.log(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      
      Class<Delayed> class0 = Delayed.class;
      Delayed delayed0 = restAdapter0.create(class0);
      assertEquals(RestAdapter.LogLevel.FULL, restAdapter0.getLogLevel());
      assertNotNull(delayed0);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder0);
      assertSame(restAdapter_Builder10, restAdapter_Builder7);
      assertSame(restAdapter_Builder10, restAdapter_Builder3);
      assertSame(restAdapter_Builder10, restAdapter_Builder5);
      assertSame(restAdapter_Builder10, restAdapter_Builder1);
      assertSame(restAdapter_Builder10, restAdapter_Builder4);
      assertSame(restAdapter_Builder10, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder8);
      assertSame(restAdapter_Builder10, restAdapter_Builder2);
      assertSame(restAdapter_Builder10, restAdapter_Builder6);
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      Client.Provider client_Provider0 = null;
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setClient(client_Provider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Client provider may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      // Undeclared exception!
      try { 
        restAdapter_Builder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Server may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      Profiler<Runnable> profiler0 = (Profiler<Runnable>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      Executor executor0 = null;
      Client.Provider client_Provider0 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.BASIC;
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setLogLevel(restAdapter_LogLevel0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      String string0 = "Content-Length: ";
      Server server0 = new Server(string0, string0);
      assertEquals("Content-Length: ", server0.getName());
      assertEquals("Content-Length: ", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setServer(server0);
      assertEquals("Content-Length: ", server0.getName());
      assertEquals("Content-Length: ", server0.getUrl());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      // Undeclared exception!
      try { 
        restAdapter_Builder2.setExecutors(executor0, executor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // HTTP executor may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      Profiler<Integer> profiler0 = (Profiler<Integer>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      ErrorHandler errorHandler0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setErrorHandler(errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Error handler may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RequestInterceptorTape requestInterceptorTape0 = new RequestInterceptorTape();
      assertNotNull(requestInterceptorTape0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setRequestInterceptor(requestInterceptorTape0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      String string0 = "";
      Server server0 = new Server(string0, string0);
      assertEquals("", server0.getUrl());
      assertEquals("", server0.getName());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setServer(server0);
      assertEquals("", server0.getUrl());
      assertEquals("", server0.getName());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setServer(server0);
      assertEquals("", server0.getUrl());
      assertEquals("", server0.getName());
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      
      RestAdapter restAdapter0 = restAdapter_Builder0.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      
      Class<Runnable> class0 = Runnable.class;
      Runnable runnable0 = restAdapter0.create(class0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(runnable0);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.NONE;
      restAdapter0.setLogLevel(restAdapter_LogLevel0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      
      RestAdapter.LogLevel restAdapter_LogLevel1 = RestAdapter.LogLevel.FULL;
      restAdapter0.setLogLevel(restAdapter_LogLevel1);
      assertEquals(RestAdapter.LogLevel.FULL, restAdapter0.getLogLevel());
      assertFalse(restAdapter_LogLevel1.equals((Object)restAdapter_LogLevel0));
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertNotSame(restAdapter_LogLevel1, restAdapter_LogLevel0);
      
      String string1 = "(";
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder0.setServer(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertNotSame(string1, string0);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      
      int int0 = (-2860);
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      PriorityBlockingQueue<Runnable> priorityBlockingQueue0 = new PriorityBlockingQueue<Runnable>();
      assertNotNull(priorityBlockingQueue0);
      
      // Undeclared exception!
      try { 
        restAdapter_Builder1.setServer(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Server may not be blank.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      Profiler<Runnable> profiler0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setProfiler(profiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Profiler may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = "R(F>0C:KE|Wt>%";
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setServer(string0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      int int0 = 2159;
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(int0);
      assertNotNull(scheduledThreadPoolExecutor0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setExecutors(scheduledThreadPoolExecutor0, scheduledThreadPoolExecutor0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      Profiler<JsonGenerator.Feature> profiler0 = (Profiler<JsonGenerator.Feature>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setServer(string0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder4 = new RestAdapter.Builder();
      assertFalse(restAdapter_Builder4.equals((Object)restAdapter_Builder3));
      assertFalse(restAdapter_Builder4.equals((Object)restAdapter_Builder1));
      assertFalse(restAdapter_Builder4.equals((Object)restAdapter_Builder0));
      assertFalse(restAdapter_Builder4.equals((Object)restAdapter_Builder2));
      assertNotNull(restAdapter_Builder4);
      
      RestAdapter restAdapter0 = restAdapter_Builder2.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertFalse(restAdapter_Builder0.equals((Object)restAdapter_Builder4));
      assertFalse(restAdapter_Builder1.equals((Object)restAdapter_Builder4));
      assertFalse(restAdapter_Builder2.equals((Object)restAdapter_Builder4));
      assertNotNull(restAdapter0);
      assertNotSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertNotSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertNotSame(restAdapter_Builder2, restAdapter_Builder4);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = restAdapter0.getLogLevel();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter_LogLevel0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertFalse(restAdapter_LogLevel0.log());
      assertFalse(restAdapter_Builder0.equals((Object)restAdapter_Builder4));
      assertFalse(restAdapter_Builder1.equals((Object)restAdapter_Builder4));
      assertFalse(restAdapter_Builder2.equals((Object)restAdapter_Builder4));
      assertNotSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertNotSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertNotSame(restAdapter_Builder2, restAdapter_Builder4);
      
      boolean boolean0 = restAdapter_LogLevel0.log();
      assertFalse(boolean0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertFalse(restAdapter_LogLevel0.log());
      assertFalse(restAdapter_Builder0.equals((Object)restAdapter_Builder4));
      assertFalse(restAdapter_Builder1.equals((Object)restAdapter_Builder4));
      assertFalse(restAdapter_Builder2.equals((Object)restAdapter_Builder4));
      assertNotSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertNotSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertNotSame(restAdapter_Builder2, restAdapter_Builder4);
      
      Class<String> class0 = String.class;
      ThreadFactory threadFactory0 = scheduledThreadPoolExecutor0.getThreadFactory();
      assertNotNull(threadFactory0);
      
      // Undeclared exception!
      try { 
        restAdapter0.create(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only interface endpoint definitions are supported.
         //
         verifyException("retrofit.RestAdapter", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      Converter converter0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setConverter(converter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Converter may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = "U";
      RestAdapter.LogLevel[] restAdapter_LogLevelArray0 = RestAdapter.LogLevel.values();
      assertEquals(4, restAdapter_LogLevelArray0.length);
      assertNotNull(restAdapter_LogLevelArray0);
      
      RequestInterceptor requestInterceptor0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setRequestInterceptor(requestInterceptor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Request interceptor may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      String string0 = "%(a.%]4U9NqCh[U.B7;";
      String string1 = "";
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      Client client0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setClient(client0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Client may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setLog(restAdapter_Log0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Log may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      WireConverter wireConverter0 = new WireConverter();
      assertNotNull(wireConverter0);
      
      Server server0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setServer(server0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Server may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      String string0 = "";
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setErrorHandler(errorHandler0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      Profiler<Callable<Object>> profiler0 = (Profiler<Callable<Object>>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setProfiler(profiler0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      Client.Provider client_Provider0 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setClient(client_Provider0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0, string0);
      assertNotNull(gsonConverter0);
      
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder3.setConverter(gsonConverter0);
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      
      String string1 = "paI.]|<xe?)pP7!^\"{";
      Server server0 = new Server(string1);
      assertEquals("default", server0.getName());
      assertEquals("paI.]|<xe?)pP7!^\"{", server0.getUrl());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder5 = restAdapter_Builder4.setServer(server0);
      assertEquals("default", server0.getName());
      assertEquals("paI.]|<xe?)pP7!^\"{", server0.getUrl());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(restAdapter_Builder5);
      assertNotSame(string0, string1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder5);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertNotSame(string1, string0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      
      String string2 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder5.setServer(string2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Server may not be blank.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setServer(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Server may not be blank.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = "/tG4$l8DT!";
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setServer(string0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      String string1 = "RKV!c:=th}\"/!^";
      restAdapter_Log0.log(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setLog(restAdapter_Log0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      OkHttpClient okHttpClient0 = new OkHttpClient();
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertTrue(okHttpClient0.getFollowProtocolRedirects());
      assertNotNull(okHttpClient0);
      
      OkClient okClient0 = new OkClient(okHttpClient0);
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertTrue(okHttpClient0.getFollowProtocolRedirects());
      assertNotNull(okClient0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder0.setClient((Client) okClient0);
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertTrue(okHttpClient0.getFollowProtocolRedirects());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.FULL;
      assertEquals(RestAdapter.LogLevel.FULL, restAdapter_LogLevel0);
      assertTrue(restAdapter_LogLevel0.log());
      
      boolean boolean0 = restAdapter_LogLevel0.log();
      assertTrue(boolean0);
      assertTrue(restAdapter_LogLevel0.log());
      
      RestAdapter.Builder restAdapter_Builder3 = new RestAdapter.Builder();
      assertFalse(restAdapter_Builder3.equals((Object)restAdapter_Builder1));
      assertFalse(restAdapter_Builder3.equals((Object)restAdapter_Builder2));
      assertFalse(restAdapter_Builder3.equals((Object)restAdapter_Builder0));
      assertNotNull(restAdapter_Builder3);
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      ApacheClient apacheClient0 = new ApacheClient();
      assertNotNull(apacheClient0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setClient((Client) apacheClient0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      Profiler<Bundle> profiler0 = null;
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      String string0 = null;
      GsonConverter gsonConverter0 = new GsonConverter(gson0, string0);
      assertNotNull(gsonConverter0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setConverter(gsonConverter0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      // Undeclared exception!
      try { 
        restAdapter_Builder1.setProfiler(profiler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Profiler may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      Profiler<com.squareup.wire.Message> profiler0 = (Profiler<com.squareup.wire.Message>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setProfiler(profiler0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      RequestInterceptor requestInterceptor0 = RequestInterceptor.NONE;
      assertNotNull(requestInterceptor0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setRequestInterceptor(requestInterceptor0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RequestInterceptor requestInterceptor0 = RequestInterceptor.NONE;
      assertNotNull(requestInterceptor0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setRequestInterceptor(requestInterceptor0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      assertNotNull(forkJoinPool0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setExecutors(forkJoinPool0, forkJoinPool0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      String string0 = "x;J";
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setServer(string0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      
      OkHttpClient okHttpClient0 = new OkHttpClient();
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertTrue(okHttpClient0.getFollowProtocolRedirects());
      assertNotNull(okHttpClient0);
      
      OkClient okClient0 = new OkClient(okHttpClient0);
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertTrue(okHttpClient0.getFollowProtocolRedirects());
      assertNotNull(okClient0);
      
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder3.setClient((Client) okClient0);
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertTrue(okHttpClient0.getFollowProtocolRedirects());
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      
      ErrorHandler errorHandler0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder4.setErrorHandler(errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Error handler may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setConverter(gsonConverter0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setErrorHandler(errorHandler0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setConverter(gsonConverter0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.BASIC;
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setLogLevel(restAdapter_LogLevel0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      // Undeclared exception!
      try { 
        restAdapter_Builder0.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Server may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RequestInterceptorTape requestInterceptorTape0 = new RequestInterceptorTape();
      assertNotNull(requestInterceptorTape0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setRequestInterceptor(requestInterceptorTape0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      String string0 = "!*^g=6)YLK_LQ";
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setServer(string0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      String string1 = "At`ypZ*=kqzdK9|n ue";
      Server server0 = new Server(string1, string1);
      assertEquals("At`ypZ*=kqzdK9|n ue", server0.getName());
      assertEquals("At`ypZ*=kqzdK9|n ue", server0.getUrl());
      assertFalse(string1.equals((Object)string0));
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setServer(server0);
      assertEquals("At`ypZ*=kqzdK9|n ue", server0.getName());
      assertEquals("At`ypZ*=kqzdK9|n ue", server0.getUrl());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertNotSame(string0, string1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertNotSame(string1, string0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      
      Converter converter0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder3.setConverter(converter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Converter may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = "Internal error: constructor for ";
      Server server0 = new Server(string0);
      assertEquals("default", server0.getName());
      assertEquals("Internal error: constructor for ", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setServer(server0);
      assertEquals("default", server0.getName());
      assertEquals("Internal error: constructor for ", server0.getUrl());
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      RestAdapter restAdapter0 = restAdapter_Builder1.build();
      assertEquals("default", server0.getName());
      assertEquals("Internal error: constructor for ", server0.getUrl());
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      Class<Bundle> class0 = Bundle.class;
      // Undeclared exception!
      try { 
        restAdapter0.create(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only interface endpoint definitions are supported.
         //
         verifyException("retrofit.RestAdapter", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = "Accepted";
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setServer(string0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setLog(restAdapter_Log0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      Profiler<JsonGenerator.Feature> profiler0 = (Profiler<JsonGenerator.Feature>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setProfiler(profiler0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      
      RequestInterceptorTape requestInterceptorTape0 = new RequestInterceptorTape();
      assertNotNull(requestInterceptorTape0);
      
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder3.setRequestInterceptor(requestInterceptorTape0);
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      
      RestAdapter restAdapter0 = restAdapter_Builder4.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.NONE;
      restAdapter0.setLogLevel(restAdapter_LogLevel0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.HEADERS;
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setLogLevel(restAdapter_LogLevel0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      String string0 = "";
      String string1 = "";
      Server server0 = new Server(string0, string1);
      assertEquals("", server0.getUrl());
      assertEquals("", server0.getName());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setServer(server0);
      assertEquals("", server0.getUrl());
      assertEquals("", server0.getName());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      Executor executor0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder2.setExecutors(executor0, executor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // HTTP executor may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = "com.fasterxml.jackson.databind.ser.std.StdSerializer";
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setServer(string0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      UrlConnectionClient urlConnectionClient0 = new UrlConnectionClient();
      assertNotNull(urlConnectionClient0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setClient((Client) urlConnectionClient0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      Gson gson0 = new Gson();
      assertNotNull(gson0);
      
      GsonConverter gsonConverter0 = new GsonConverter(gson0);
      assertNotNull(gsonConverter0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setConverter(gsonConverter0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      
      Server server0 = new Server(string0, string0);
      assertEquals("com.fasterxml.jackson.databind.ser.std.StdSerializer", server0.getName());
      assertEquals("com.fasterxml.jackson.databind.ser.std.StdSerializer", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder3.setServer(server0);
      assertEquals("com.fasterxml.jackson.databind.ser.std.StdSerializer", server0.getName());
      assertEquals("com.fasterxml.jackson.databind.ser.std.StdSerializer", server0.getUrl());
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      
      RestAdapter restAdapter0 = restAdapter_Builder4.build();
      assertEquals("com.fasterxml.jackson.databind.ser.std.StdSerializer", server0.getName());
      assertEquals("com.fasterxml.jackson.databind.ser.std.StdSerializer", server0.getUrl());
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      
      Class<TypedByteArray> class0 = TypedByteArray.class;
      // Undeclared exception!
      try { 
        restAdapter0.create(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only interface endpoint definitions are supported.
         //
         verifyException("retrofit.RestAdapter", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      String string0 = "XLB_OReA},A]AMBlNX";
      restAdapter_Log0.log(string0);
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      OkHttpClient okHttpClient0 = new OkHttpClient();
      assertTrue(okHttpClient0.getFollowProtocolRedirects());
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertNotNull(okHttpClient0);
      
      boolean boolean0 = false;
      OkHttpClient okHttpClient1 = okHttpClient0.setFollowProtocolRedirects(boolean0);
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertFalse(okHttpClient0.getFollowProtocolRedirects());
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertEquals(0, okHttpClient1.getReadTimeout());
      assertEquals(0, okHttpClient1.getConnectTimeout());
      assertFalse(okHttpClient1.getFollowProtocolRedirects());
      assertNotNull(okHttpClient1);
      assertSame(okHttpClient0, okHttpClient1);
      assertSame(okHttpClient1, okHttpClient0);
      
      OkClient okClient0 = new OkClient(okHttpClient1);
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertFalse(okHttpClient0.getFollowProtocolRedirects());
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertEquals(0, okHttpClient1.getReadTimeout());
      assertEquals(0, okHttpClient1.getConnectTimeout());
      assertFalse(okHttpClient1.getFollowProtocolRedirects());
      assertNotNull(okClient0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setClient((Client) okClient0);
      assertEquals(0, okHttpClient0.getReadTimeout());
      assertFalse(okHttpClient0.getFollowProtocolRedirects());
      assertEquals(0, okHttpClient0.getConnectTimeout());
      assertEquals(0, okHttpClient1.getReadTimeout());
      assertEquals(0, okHttpClient1.getConnectTimeout());
      assertFalse(okHttpClient1.getFollowProtocolRedirects());
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(okHttpClient0, okHttpClient1);
      assertSame(okHttpClient1, okHttpClient0);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      String string1 = "";
      // Undeclared exception!
      try { 
        restAdapter_Builder1.setServer(string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Server may not be blank.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RequestInterceptor requestInterceptor0 = null;
      RestAdapter.Builder restAdapter_Builder1 = new RestAdapter.Builder();
      assertFalse(restAdapter_Builder1.equals((Object)restAdapter_Builder0));
      assertNotNull(restAdapter_Builder1);
      
      Client.Provider client_Provider0 = null;
      OkClient okClient0 = new OkClient();
      assertNotNull(okClient0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder0.setClient((Client) okClient0);
      assertFalse(restAdapter_Builder0.equals((Object)restAdapter_Builder1));
      assertFalse(restAdapter_Builder2.equals((Object)restAdapter_Builder1));
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertNotSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertNotSame(restAdapter_Builder2, restAdapter_Builder1);
      
      // Undeclared exception!
      try { 
        restAdapter_Builder1.setClient(client_Provider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Client provider may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      Client.Provider client_Provider0 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setClient(client_Provider0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      int int0 = 795;
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      SynchronousQueue<Runnable> synchronousQueue0 = new SynchronousQueue<Runnable>();
      assertNotNull(synchronousQueue0);
      
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(int0, int0, int0, timeUnit0, synchronousQueue0, threadFactory0);
      assertNotNull(threadPoolExecutor0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setExecutors(threadPoolExecutor0, threadPoolExecutor0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      Profiler<Integer> profiler0 = (Profiler<Integer>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setProfiler(profiler0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setLog(restAdapter_Log0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      
      Server server0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder3.setServer(server0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Server may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      int int0 = 0;
      ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
      assertNotNull(threadPoolExecutor_AbortPolicy0);
      
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(int0, threadPoolExecutor_AbortPolicy0);
      assertNotNull(scheduledThreadPoolExecutor0);
      
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      assertNotNull(forkJoinPool0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setExecutors(scheduledThreadPoolExecutor0, forkJoinPool0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      String string0 = "Error handler returned null for wrapped exception.";
      String string1 = "8N4!2fBEYI>;00U";
      Server server0 = new Server(string0, string1);
      assertEquals("Error handler returned null for wrapped exception.", server0.getUrl());
      assertEquals("8N4!2fBEYI>;00U", server0.getName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setServer(server0);
      assertEquals("Error handler returned null for wrapped exception.", server0.getUrl());
      assertEquals("8N4!2fBEYI>;00U", server0.getName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      ObjectMapper objectMapper0 = new ObjectMapper();
      assertEquals(0, objectMapper0.mixInCount());
      assertNotNull(objectMapper0);
      
      JacksonConverter jacksonConverter0 = new JacksonConverter(objectMapper0);
      assertEquals(0, objectMapper0.mixInCount());
      assertNotNull(jacksonConverter0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setConverter(jacksonConverter0);
      assertEquals("Error handler returned null for wrapped exception.", server0.getUrl());
      assertEquals("8N4!2fBEYI>;00U", server0.getName());
      assertEquals(0, objectMapper0.mixInCount());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      
      RequestInterceptorTape requestInterceptorTape0 = new RequestInterceptorTape();
      assertNotNull(requestInterceptorTape0);
      
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder3.setRequestInterceptor(requestInterceptorTape0);
      assertEquals("Error handler returned null for wrapped exception.", server0.getUrl());
      assertEquals("8N4!2fBEYI>;00U", server0.getName());
      assertEquals(0, objectMapper0.mixInCount());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      
      RestAdapter.Log restAdapter_Log0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder4.setLog(restAdapter_Log0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Log may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = "qj=G";
      Server server0 = new Server(string0, string0);
      assertEquals("qj=G", server0.getName());
      assertEquals("qj=G", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setServer(server0);
      assertEquals("qj=G", server0.getName());
      assertEquals("qj=G", server0.getUrl());
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setLog(restAdapter_Log0);
      assertEquals("qj=G", server0.getName());
      assertEquals("qj=G", server0.getUrl());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      Client client0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder2.setClient(client0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Client may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RequestInterceptorTape requestInterceptorTape0 = new RequestInterceptorTape();
      assertNotNull(requestInterceptorTape0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setRequestInterceptor(requestInterceptorTape0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      String string0 = "";
      Server server0 = new Server(string0, string0);
      assertEquals("", server0.getName());
      assertEquals("", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setServer(server0);
      assertEquals("", server0.getName());
      assertEquals("", server0.getUrl());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setServer(server0);
      assertEquals("", server0.getName());
      assertEquals("", server0.getUrl());
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      restAdapter_Log0.log(string0);
      RestAdapter restAdapter0 = restAdapter_Builder0.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      
      Class<Runnable> class0 = Runnable.class;
      Runnable runnable0 = restAdapter0.create(class0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(runnable0);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.NONE;
      restAdapter0.setLogLevel(restAdapter_LogLevel0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      
      RestAdapter.LogLevel restAdapter_LogLevel1 = RestAdapter.LogLevel.FULL;
      restAdapter0.setLogLevel(restAdapter_LogLevel1);
      assertEquals(RestAdapter.LogLevel.FULL, restAdapter0.getLogLevel());
      assertFalse(restAdapter_LogLevel1.equals((Object)restAdapter_LogLevel0));
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertNotSame(restAdapter_LogLevel1, restAdapter_LogLevel0);
      
      String string1 = "(";
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder0.setServer(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(restAdapter_Builder4);
      assertNotSame(string1, string0);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      
      int int0 = (-2860);
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      PriorityBlockingQueue<Runnable> priorityBlockingQueue0 = new PriorityBlockingQueue<Runnable>();
      assertNotNull(priorityBlockingQueue0);
      
      // Undeclared exception!
      try { 
        restAdapter_Builder1.setServer(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Server may not be blank.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RequestInterceptor requestInterceptor0 = null;
      // Undeclared exception!
      try { 
        restAdapter_Builder0.setRequestInterceptor(requestInterceptor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Request interceptor may not be null.
         //
         verifyException("retrofit.RestAdapter$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = "";
      Server server0 = new Server(string0, string0);
      assertEquals("", server0.getName());
      assertEquals("", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setServer(server0);
      assertEquals("", server0.getName());
      assertEquals("", server0.getUrl());
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setErrorHandler(errorHandler0);
      assertEquals("", server0.getName());
      assertEquals("", server0.getUrl());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      RestAdapter restAdapter0 = restAdapter_Builder0.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.BASIC;
      restAdapter0.setLogLevel(restAdapter_LogLevel0);
      assertEquals(RestAdapter.LogLevel.BASIC, restAdapter0.getLogLevel());
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        restAdapter0.create(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only interface endpoint definitions are supported.
         //
         verifyException("retrofit.RestAdapter", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      Profiler<Object> profiler0 = (Profiler<Object>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setProfiler(profiler0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      RequestInterceptorTape requestInterceptorTape0 = new RequestInterceptorTape();
      assertNotNull(requestInterceptorTape0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setRequestInterceptor(requestInterceptorTape0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      ApacheClient apacheClient0 = new ApacheClient();
      assertNotNull(apacheClient0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder0.setClient((Client) apacheClient0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      
      String string0 = "9Tf-Pe]'C/ti]";
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder2.setServer(string0);
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      assertNotNull(forkJoinPool0);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.FULL;
      RestAdapter.Builder restAdapter_Builder5 = restAdapter_Builder4.setLogLevel(restAdapter_LogLevel0);
      assertNotNull(restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder5);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      
      RestAdapter.Builder restAdapter_Builder6 = restAdapter_Builder4.setExecutors(forkJoinPool0, forkJoinPool0);
      assertNotNull(restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder5);
      assertSame(restAdapter_Builder4, restAdapter_Builder6);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      
      RestAdapter restAdapter0 = restAdapter_Builder6.build();
      assertEquals(RestAdapter.LogLevel.FULL, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder5);
      assertSame(restAdapter_Builder4, restAdapter_Builder6);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      
      Class<Header> class0 = Header.class;
      // Undeclared exception!
      try { 
        restAdapter0.create(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only interface endpoint definitions are supported.
         //
         verifyException("retrofit.RestAdapter", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      assertNotNull(forkJoinPool0);
      
      int int0 = forkJoinPool0.getActiveThreadCount();
      assertEquals(1, int0);
      
      boolean boolean0 = forkJoinPool0.getAsyncMode();
      assertFalse(boolean0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setExecutors(forkJoinPool0, forkJoinPool0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      String string0 = "android.hardware.usb.accessory";
      restAdapter_Log0.log(string0);
      Server server0 = new Server(string0, string0);
      assertEquals("android.hardware.usb.accessory", server0.getName());
      assertEquals("android.hardware.usb.accessory", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder0.setServer(server0);
      assertEquals("android.hardware.usb.accessory", server0.getName());
      assertEquals("android.hardware.usb.accessory", server0.getUrl());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder0.setServer(server0.DEFAULT_NAME);
      assertEquals("android.hardware.usb.accessory", server0.getName());
      assertEquals("android.hardware.usb.accessory", server0.getUrl());
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      
      Profiler<JsonGenerator.Feature> profiler0 = (Profiler<JsonGenerator.Feature>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder2.setProfiler(profiler0);
      assertEquals("android.hardware.usb.accessory", server0.getName());
      assertEquals("android.hardware.usb.accessory", server0.getUrl());
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      
      Client.Provider client_Provider0 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder5 = restAdapter_Builder1.setClient(client_Provider0);
      assertNotNull(restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      
      RestAdapter restAdapter0 = restAdapter_Builder5.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = restAdapter0.getLogLevel();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter_LogLevel0);
      assertFalse(restAdapter_LogLevel0.log());
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.BASIC;
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setLogLevel(restAdapter_LogLevel0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setLog(restAdapter_Log0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      OkClient okClient0 = new OkClient();
      assertNotNull(okClient0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setClient((Client) okClient0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      
      String string0 = "7{A1O6mg";
      RestAdapter.LogLevel restAdapter_LogLevel1 = RestAdapter.LogLevel.NONE;
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder1.setLogLevel(restAdapter_LogLevel1);
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel1));
      assertFalse(restAdapter_LogLevel1.equals((Object)restAdapter_LogLevel0));
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertNotSame(restAdapter_LogLevel1, restAdapter_LogLevel0);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      
      Server server0 = new Server(string0, string0);
      assertEquals("7{A1O6mg", server0.getName());
      assertEquals("7{A1O6mg", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder5 = restAdapter_Builder3.setServer(server0);
      assertEquals("7{A1O6mg", server0.getName());
      assertEquals("7{A1O6mg", server0.getUrl());
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel1));
      assertNotNull(restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      
      Client.Provider client_Provider0 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder6 = restAdapter_Builder5.setClient(client_Provider0);
      assertEquals("7{A1O6mg", server0.getName());
      assertEquals("7{A1O6mg", server0.getUrl());
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel1));
      assertNotNull(restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      
      RestAdapter.LogLevel restAdapter_LogLevel2 = RestAdapter.LogLevel.HEADERS;
      RestAdapter.Builder restAdapter_Builder7 = restAdapter_Builder6.setLogLevel(restAdapter_LogLevel2);
      assertEquals("7{A1O6mg", server0.getName());
      assertEquals("7{A1O6mg", server0.getUrl());
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel2));
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel1));
      assertFalse(restAdapter_LogLevel2.equals((Object)restAdapter_LogLevel1));
      assertFalse(restAdapter_LogLevel2.equals((Object)restAdapter_LogLevel0));
      assertNotNull(restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel2);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder7);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder7);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertNotSame(restAdapter_LogLevel2, restAdapter_LogLevel1);
      assertNotSame(restAdapter_LogLevel2, restAdapter_LogLevel0);
      assertSame(restAdapter_Builder7, restAdapter_Builder1);
      assertSame(restAdapter_Builder7, restAdapter_Builder6);
      assertSame(restAdapter_Builder7, restAdapter_Builder4);
      assertSame(restAdapter_Builder7, restAdapter_Builder2);
      assertSame(restAdapter_Builder7, restAdapter_Builder5);
      assertSame(restAdapter_Builder7, restAdapter_Builder3);
      assertSame(restAdapter_Builder7, restAdapter_Builder0);
      
      RestAdapter restAdapter0 = restAdapter_Builder3.build();
      assertEquals(RestAdapter.LogLevel.HEADERS, restAdapter0.getLogLevel());
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel2));
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel1));
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel2);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder7);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      
      RestAdapter.LogLevel restAdapter_LogLevel3 = restAdapter0.getLogLevel();
      assertEquals(RestAdapter.LogLevel.HEADERS, restAdapter_LogLevel3);
      assertEquals(RestAdapter.LogLevel.HEADERS, restAdapter0.getLogLevel());
      assertTrue(restAdapter_LogLevel3.log());
      assertFalse(restAdapter_LogLevel3.equals((Object)restAdapter_LogLevel0));
      assertFalse(restAdapter_LogLevel3.equals((Object)restAdapter_LogLevel1));
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel2));
      assertFalse(restAdapter_LogLevel0.equals((Object)restAdapter_LogLevel1));
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertNotSame(restAdapter_LogLevel3, restAdapter_LogLevel0);
      assertNotSame(restAdapter_LogLevel3, restAdapter_LogLevel1);
      assertSame(restAdapter_LogLevel3, restAdapter_LogLevel2);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel2);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel1);
      assertNotSame(restAdapter_LogLevel0, restAdapter_LogLevel3);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder7);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      RestAdapter.LogLevel[] restAdapter_LogLevelArray0 = RestAdapter.LogLevel.values();
      assertEquals(4, restAdapter_LogLevelArray0.length);
      assertNotNull(restAdapter_LogLevelArray0);
      
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setLog(restAdapter_Log0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      UrlConnectionClient urlConnectionClient0 = new UrlConnectionClient();
      assertNotNull(urlConnectionClient0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setClient((Client) urlConnectionClient0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      assertNotNull(forkJoinPool0);
      
      int int0 = 1;
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      assertNotNull(threadPoolExecutor_DiscardOldestPolicy0);
      
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(int0, threadPoolExecutor_DiscardOldestPolicy0);
      assertNotNull(scheduledThreadPoolExecutor0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder0.setExecutors(forkJoinPool0, scheduledThreadPoolExecutor0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      
      Client.Provider client_Provider0 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder0.setClient(client_Provider0);
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      
      Executor executor0 = null;
      RestAdapter.Builder restAdapter_Builder5 = restAdapter_Builder2.setExecutors(forkJoinPool0, executor0);
      assertNotNull(restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      
      String string0 = " m,&L/h;J";
      Server server0 = new Server(string0);
      assertEquals("default", server0.getName());
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder6 = restAdapter_Builder5.setServer(server0);
      assertEquals("default", server0.getName());
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertNotNull(restAdapter_Builder6);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.FULL;
      RestAdapter.Builder restAdapter_Builder7 = restAdapter_Builder6.setLogLevel(restAdapter_LogLevel0);
      assertEquals("default", server0.getName());
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertNotNull(restAdapter_Builder7);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder7);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder7, restAdapter_Builder0);
      assertSame(restAdapter_Builder7, restAdapter_Builder4);
      assertSame(restAdapter_Builder7, restAdapter_Builder3);
      assertSame(restAdapter_Builder7, restAdapter_Builder6);
      assertSame(restAdapter_Builder7, restAdapter_Builder2);
      assertSame(restAdapter_Builder7, restAdapter_Builder1);
      assertSame(restAdapter_Builder7, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      
      ProtoConverter protoConverter0 = new ProtoConverter();
      assertNotNull(protoConverter0);
      
      RestAdapter.Builder restAdapter_Builder8 = restAdapter_Builder6.setConverter(protoConverter0);
      assertEquals("default", server0.getName());
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertNotNull(restAdapter_Builder8);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder8);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder7);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder8, restAdapter_Builder1);
      assertSame(restAdapter_Builder8, restAdapter_Builder5);
      assertSame(restAdapter_Builder8, restAdapter_Builder4);
      assertSame(restAdapter_Builder8, restAdapter_Builder0);
      assertSame(restAdapter_Builder8, restAdapter_Builder7);
      assertSame(restAdapter_Builder8, restAdapter_Builder3);
      assertSame(restAdapter_Builder8, restAdapter_Builder6);
      assertSame(restAdapter_Builder8, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder8);
      assertSame(restAdapter_Builder5, restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      
      Client.Provider client_Provider1 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder9 = restAdapter_Builder6.setClient((Client) urlConnectionClient0);
      assertEquals("default", server0.getName());
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertNotNull(restAdapter_Builder9);
      assertSame(restAdapter_Builder6, restAdapter_Builder9);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder8);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder7);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder9);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder9);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder9, restAdapter_Builder8);
      assertSame(restAdapter_Builder9, restAdapter_Builder7);
      assertSame(restAdapter_Builder9, restAdapter_Builder4);
      assertSame(restAdapter_Builder9, restAdapter_Builder1);
      assertSame(restAdapter_Builder9, restAdapter_Builder3);
      assertSame(restAdapter_Builder9, restAdapter_Builder6);
      assertSame(restAdapter_Builder9, restAdapter_Builder0);
      assertSame(restAdapter_Builder9, restAdapter_Builder5);
      assertSame(restAdapter_Builder9, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder9);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder8);
      assertSame(restAdapter_Builder5, restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      
      RestAdapter.Builder restAdapter_Builder10 = restAdapter_Builder8.setClient(client_Provider1);
      assertEquals("default", server0.getName());
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertNotNull(restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder1, restAdapter_Builder9);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder10);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder9);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder10);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder9);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder10);
      assertSame(restAdapter_Builder5, restAdapter_Builder8);
      assertSame(restAdapter_Builder5, restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder9);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder8);
      assertSame(restAdapter_Builder6, restAdapter_Builder10);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder7);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder8, restAdapter_Builder1);
      assertSame(restAdapter_Builder8, restAdapter_Builder5);
      assertSame(restAdapter_Builder8, restAdapter_Builder4);
      assertSame(restAdapter_Builder8, restAdapter_Builder0);
      assertSame(restAdapter_Builder8, restAdapter_Builder7);
      assertSame(restAdapter_Builder8, restAdapter_Builder10);
      assertSame(restAdapter_Builder8, restAdapter_Builder3);
      assertSame(restAdapter_Builder8, restAdapter_Builder9);
      assertSame(restAdapter_Builder8, restAdapter_Builder6);
      assertSame(restAdapter_Builder8, restAdapter_Builder2);
      assertSame(restAdapter_Builder10, restAdapter_Builder4);
      assertSame(restAdapter_Builder10, restAdapter_Builder2);
      assertSame(restAdapter_Builder10, restAdapter_Builder3);
      assertSame(restAdapter_Builder10, restAdapter_Builder6);
      assertSame(restAdapter_Builder10, restAdapter_Builder7);
      assertSame(restAdapter_Builder10, restAdapter_Builder1);
      assertSame(restAdapter_Builder10, restAdapter_Builder9);
      assertSame(restAdapter_Builder10, restAdapter_Builder0);
      assertSame(restAdapter_Builder10, restAdapter_Builder8);
      assertSame(restAdapter_Builder10, restAdapter_Builder5);
      
      RestAdapter.Builder restAdapter_Builder11 = restAdapter_Builder6.setLog(restAdapter_Log0);
      assertEquals("default", server0.getName());
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertNotNull(restAdapter_Builder11);
      assertSame(restAdapter_Builder6, restAdapter_Builder9);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder8);
      assertSame(restAdapter_Builder6, restAdapter_Builder11);
      assertSame(restAdapter_Builder6, restAdapter_Builder10);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder7);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder11);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder1, restAdapter_Builder11);
      assertSame(restAdapter_Builder1, restAdapter_Builder9);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder10);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder11);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder9);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder10);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder11, restAdapter_Builder5);
      assertSame(restAdapter_Builder11, restAdapter_Builder6);
      assertSame(restAdapter_Builder11, restAdapter_Builder8);
      assertSame(restAdapter_Builder11, restAdapter_Builder9);
      assertSame(restAdapter_Builder11, restAdapter_Builder2);
      assertSame(restAdapter_Builder11, restAdapter_Builder7);
      assertSame(restAdapter_Builder11, restAdapter_Builder4);
      assertSame(restAdapter_Builder11, restAdapter_Builder0);
      assertSame(restAdapter_Builder11, restAdapter_Builder3);
      assertSame(restAdapter_Builder11, restAdapter_Builder10);
      assertSame(restAdapter_Builder11, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder9);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder11);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder10);
      assertSame(restAdapter_Builder5, restAdapter_Builder8);
      assertSame(restAdapter_Builder5, restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      
      boolean boolean0 = restAdapter_LogLevel0.log();
      assertTrue(boolean0);
      
      RestAdapter.Builder restAdapter_Builder12 = restAdapter_Builder3.setConverter(protoConverter0);
      assertNotNull(restAdapter_Builder12);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder12);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder11);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder6);
      assertSame(restAdapter_Builder3, restAdapter_Builder11);
      assertSame(restAdapter_Builder3, restAdapter_Builder8);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder7);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder10);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder9);
      assertSame(restAdapter_Builder3, restAdapter_Builder12);
      assertSame(restAdapter_Builder12, restAdapter_Builder7);
      assertSame(restAdapter_Builder12, restAdapter_Builder2);
      assertSame(restAdapter_Builder12, restAdapter_Builder4);
      assertSame(restAdapter_Builder12, restAdapter_Builder6);
      assertSame(restAdapter_Builder12, restAdapter_Builder10);
      assertSame(restAdapter_Builder12, restAdapter_Builder3);
      assertSame(restAdapter_Builder12, restAdapter_Builder5);
      assertSame(restAdapter_Builder12, restAdapter_Builder1);
      assertSame(restAdapter_Builder12, restAdapter_Builder9);
      assertSame(restAdapter_Builder12, restAdapter_Builder0);
      assertSame(restAdapter_Builder12, restAdapter_Builder8);
      assertSame(restAdapter_Builder12, restAdapter_Builder11);
      
      RestAdapter.Builder restAdapter_Builder13 = restAdapter_Builder8.setClient((Client) urlConnectionClient0);
      assertEquals("default", server0.getName());
      assertEquals(" m,&L/h;J", server0.getUrl());
      assertNotNull(restAdapter_Builder13);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder13);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder12);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder11);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder1, restAdapter_Builder11);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder10);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder1, restAdapter_Builder9);
      assertSame(restAdapter_Builder1, restAdapter_Builder12);
      assertSame(restAdapter_Builder1, restAdapter_Builder13);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder6);
      assertSame(restAdapter_Builder2, restAdapter_Builder9);
      assertSame(restAdapter_Builder2, restAdapter_Builder12);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder10);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder5);
      assertSame(restAdapter_Builder2, restAdapter_Builder8);
      assertSame(restAdapter_Builder2, restAdapter_Builder11);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder7);
      assertSame(restAdapter_Builder2, restAdapter_Builder13);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder11);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder7);
      assertSame(restAdapter_Builder5, restAdapter_Builder13);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder9);
      assertSame(restAdapter_Builder5, restAdapter_Builder6);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder12);
      assertSame(restAdapter_Builder5, restAdapter_Builder10);
      assertSame(restAdapter_Builder5, restAdapter_Builder8);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder9);
      assertSame(restAdapter_Builder6, restAdapter_Builder12);
      assertSame(restAdapter_Builder6, restAdapter_Builder1);
      assertSame(restAdapter_Builder6, restAdapter_Builder7);
      assertSame(restAdapter_Builder6, restAdapter_Builder13);
      assertSame(restAdapter_Builder6, restAdapter_Builder5);
      assertSame(restAdapter_Builder6, restAdapter_Builder0);
      assertSame(restAdapter_Builder6, restAdapter_Builder8);
      assertSame(restAdapter_Builder6, restAdapter_Builder11);
      assertSame(restAdapter_Builder6, restAdapter_Builder10);
      assertSame(restAdapter_Builder6, restAdapter_Builder2);
      assertSame(restAdapter_Builder6, restAdapter_Builder4);
      assertSame(restAdapter_Builder6, restAdapter_Builder3);
      assertSame(restAdapter_Builder8, restAdapter_Builder1);
      assertSame(restAdapter_Builder8, restAdapter_Builder5);
      assertSame(restAdapter_Builder8, restAdapter_Builder11);
      assertSame(restAdapter_Builder8, restAdapter_Builder13);
      assertSame(restAdapter_Builder8, restAdapter_Builder0);
      assertSame(restAdapter_Builder8, restAdapter_Builder7);
      assertSame(restAdapter_Builder8, restAdapter_Builder9);
      assertSame(restAdapter_Builder8, restAdapter_Builder6);
      assertSame(restAdapter_Builder8, restAdapter_Builder4);
      assertSame(restAdapter_Builder8, restAdapter_Builder10);
      assertSame(restAdapter_Builder8, restAdapter_Builder3);
      assertSame(restAdapter_Builder8, restAdapter_Builder12);
      assertSame(restAdapter_Builder8, restAdapter_Builder2);
      assertSame(restAdapter_Builder13, restAdapter_Builder0);
      assertSame(restAdapter_Builder13, restAdapter_Builder11);
      assertSame(restAdapter_Builder13, restAdapter_Builder3);
      assertSame(restAdapter_Builder13, restAdapter_Builder5);
      assertSame(restAdapter_Builder13, restAdapter_Builder8);
      assertSame(restAdapter_Builder13, restAdapter_Builder4);
      assertSame(restAdapter_Builder13, restAdapter_Builder10);
      assertSame(restAdapter_Builder13, restAdapter_Builder6);
      assertSame(restAdapter_Builder13, restAdapter_Builder2);
      assertSame(restAdapter_Builder13, restAdapter_Builder12);
      assertSame(restAdapter_Builder13, restAdapter_Builder9);
      assertSame(restAdapter_Builder13, restAdapter_Builder7);
      assertSame(restAdapter_Builder13, restAdapter_Builder1);
      
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder14 = restAdapter_Builder1.setErrorHandler(errorHandler0);
      assertNotNull(restAdapter_Builder14);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder13);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder12);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder11);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder14);
      assertSame(restAdapter_Builder1, restAdapter_Builder11);
      assertSame(restAdapter_Builder1, restAdapter_Builder14);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder10);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder1, restAdapter_Builder9);
      assertSame(restAdapter_Builder1, restAdapter_Builder12);
      assertSame(restAdapter_Builder1, restAdapter_Builder13);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder14, restAdapter_Builder2);
      assertSame(restAdapter_Builder14, restAdapter_Builder7);
      assertSame(restAdapter_Builder14, restAdapter_Builder9);
      assertSame(restAdapter_Builder14, restAdapter_Builder13);
      assertSame(restAdapter_Builder14, restAdapter_Builder4);
      assertSame(restAdapter_Builder14, restAdapter_Builder8);
      assertSame(restAdapter_Builder14, restAdapter_Builder5);
      assertSame(restAdapter_Builder14, restAdapter_Builder1);
      assertSame(restAdapter_Builder14, restAdapter_Builder6);
      assertSame(restAdapter_Builder14, restAdapter_Builder11);
      assertSame(restAdapter_Builder14, restAdapter_Builder0);
      assertSame(restAdapter_Builder14, restAdapter_Builder12);
      assertSame(restAdapter_Builder14, restAdapter_Builder10);
      assertSame(restAdapter_Builder14, restAdapter_Builder3);
      
      RestAdapter restAdapter0 = restAdapter_Builder14.build();
      assertEquals(RestAdapter.LogLevel.FULL, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder13);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder12);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder11);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder14);
      assertSame(restAdapter_Builder1, restAdapter_Builder11);
      assertSame(restAdapter_Builder1, restAdapter_Builder14);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder10);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder1, restAdapter_Builder9);
      assertSame(restAdapter_Builder1, restAdapter_Builder12);
      assertSame(restAdapter_Builder1, restAdapter_Builder13);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder14, restAdapter_Builder2);
      assertSame(restAdapter_Builder14, restAdapter_Builder7);
      assertSame(restAdapter_Builder14, restAdapter_Builder9);
      assertSame(restAdapter_Builder14, restAdapter_Builder13);
      assertSame(restAdapter_Builder14, restAdapter_Builder4);
      assertSame(restAdapter_Builder14, restAdapter_Builder8);
      assertSame(restAdapter_Builder14, restAdapter_Builder5);
      assertSame(restAdapter_Builder14, restAdapter_Builder1);
      assertSame(restAdapter_Builder14, restAdapter_Builder6);
      assertSame(restAdapter_Builder14, restAdapter_Builder11);
      assertSame(restAdapter_Builder14, restAdapter_Builder0);
      assertSame(restAdapter_Builder14, restAdapter_Builder12);
      assertSame(restAdapter_Builder14, restAdapter_Builder10);
      assertSame(restAdapter_Builder14, restAdapter_Builder3);
      
      restAdapter0.setLogLevel(restAdapter_LogLevel0);
      assertEquals(RestAdapter.LogLevel.FULL, restAdapter0.getLogLevel());
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder8);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder13);
      assertSame(restAdapter_Builder0, restAdapter_Builder7);
      assertSame(restAdapter_Builder0, restAdapter_Builder12);
      assertSame(restAdapter_Builder0, restAdapter_Builder9);
      assertSame(restAdapter_Builder0, restAdapter_Builder6);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder11);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder10);
      assertSame(restAdapter_Builder0, restAdapter_Builder14);
      assertSame(restAdapter_Builder1, restAdapter_Builder11);
      assertSame(restAdapter_Builder1, restAdapter_Builder14);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder10);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder8);
      assertSame(restAdapter_Builder1, restAdapter_Builder9);
      assertSame(restAdapter_Builder1, restAdapter_Builder12);
      assertSame(restAdapter_Builder1, restAdapter_Builder13);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder7);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder6);
      assertSame(restAdapter_Builder14, restAdapter_Builder2);
      assertSame(restAdapter_Builder14, restAdapter_Builder7);
      assertSame(restAdapter_Builder14, restAdapter_Builder9);
      assertSame(restAdapter_Builder14, restAdapter_Builder13);
      assertSame(restAdapter_Builder14, restAdapter_Builder4);
      assertSame(restAdapter_Builder14, restAdapter_Builder8);
      assertSame(restAdapter_Builder14, restAdapter_Builder5);
      assertSame(restAdapter_Builder14, restAdapter_Builder1);
      assertSame(restAdapter_Builder14, restAdapter_Builder6);
      assertSame(restAdapter_Builder14, restAdapter_Builder11);
      assertSame(restAdapter_Builder14, restAdapter_Builder0);
      assertSame(restAdapter_Builder14, restAdapter_Builder12);
      assertSame(restAdapter_Builder14, restAdapter_Builder10);
      assertSame(restAdapter_Builder14, restAdapter_Builder3);
      
      String string1 = "wK.";
      restAdapter_Log0.log(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      String string0 = "R(F>0C:KE|Wt>%";
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setServer(string0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      int int0 = 2159;
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(int0);
      assertNotNull(scheduledThreadPoolExecutor0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setExecutors(scheduledThreadPoolExecutor0, scheduledThreadPoolExecutor0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      Profiler<JsonGenerator.Feature> profiler0 = (Profiler<JsonGenerator.Feature>) mock(Profiler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder1.setProfiler(profiler0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder3.setErrorHandler(errorHandler0);
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      
      RestAdapter restAdapter0 = restAdapter_Builder2.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = restAdapter0.getLogLevel();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter_LogLevel0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertFalse(restAdapter_LogLevel0.log());
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      boolean boolean0 = restAdapter_LogLevel0.log();
      assertFalse(boolean0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertFalse(restAdapter_LogLevel0.log());
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder4);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      Class<String> class0 = String.class;
      ThreadFactory threadFactory0 = scheduledThreadPoolExecutor0.getThreadFactory();
      assertNotNull(threadFactory0);
      
      // Undeclared exception!
      try { 
        restAdapter0.create(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only interface endpoint definitions are supported.
         //
         verifyException("retrofit.RestAdapter", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      String string0 = "C.@1";
      restAdapter_Log0.log(string0);
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      Server server0 = new Server(string0, string0);
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setServer(server0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      Client.Provider client_Provider0 = mock(Client.Provider.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder0.setClient(client_Provider0);
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder1.setLog(restAdapter_Log0);
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      
      RestAdapter.Builder restAdapter_Builder4 = restAdapter_Builder3.setServer(string0);
      assertNotNull(restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      
      ErrorHandler errorHandler0 = mock(ErrorHandler.class, new ViolatedAssumptionAnswer());
      RestAdapter.Builder restAdapter_Builder5 = restAdapter_Builder4.setErrorHandler(errorHandler0);
      assertNotNull(restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder5);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      
      RestAdapter restAdapter0 = restAdapter_Builder5.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder5);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.HEADERS;
      restAdapter0.setLogLevel(restAdapter_LogLevel0);
      assertEquals(RestAdapter.LogLevel.HEADERS, restAdapter0.getLogLevel());
      assertSame(restAdapter_Builder0, restAdapter_Builder5);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder4);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder4);
      assertSame(restAdapter_Builder1, restAdapter_Builder5);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder5);
      assertSame(restAdapter_Builder3, restAdapter_Builder4);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder3);
      assertSame(restAdapter_Builder4, restAdapter_Builder5);
      assertSame(restAdapter_Builder4, restAdapter_Builder0);
      assertSame(restAdapter_Builder4, restAdapter_Builder1);
      assertSame(restAdapter_Builder4, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder3);
      assertSame(restAdapter_Builder5, restAdapter_Builder1);
      assertSame(restAdapter_Builder5, restAdapter_Builder2);
      assertSame(restAdapter_Builder5, restAdapter_Builder0);
      assertSame(restAdapter_Builder5, restAdapter_Builder4);
      
      Class<TypedByteArray> class0 = TypedByteArray.class;
      // Undeclared exception!
      try { 
        restAdapter0.create(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only interface endpoint definitions are supported.
         //
         verifyException("retrofit.RestAdapter", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RequestInterceptorTape requestInterceptorTape0 = new RequestInterceptorTape();
      assertNotNull(requestInterceptorTape0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setRequestInterceptor(requestInterceptorTape0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      String string0 = "";
      Server server0 = new Server(string0, string0);
      assertEquals("", server0.getName());
      assertEquals("", server0.getUrl());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setServer(server0);
      assertEquals("", server0.getName());
      assertEquals("", server0.getUrl());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setServer(server0);
      assertEquals("", server0.getName());
      assertEquals("", server0.getUrl());
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      RestAdapter restAdapter0 = restAdapter_Builder0.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      
      Class<Runnable> class0 = Runnable.class;
      Runnable runnable0 = restAdapter0.create(class0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(runnable0);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.FULL;
      RestAdapter.LogLevel restAdapter_LogLevel1 = null;
      restAdapter0.setLogLevel(restAdapter_LogLevel1);
      assertNull(restAdapter0.getLogLevel());
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      
      RestAdapter.LogLevel restAdapter_LogLevel2 = RestAdapter.LogLevel.FULL;
      // Undeclared exception!
      try { 
        restAdapter0.setLogLevel(restAdapter_LogLevel2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Log level may not be null.
         //
         verifyException("retrofit.RestAdapter", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      RestAdapter.Builder restAdapter_Builder0 = new RestAdapter.Builder();
      assertNotNull(restAdapter_Builder0);
      
      RequestInterceptorTape requestInterceptorTape0 = new RequestInterceptorTape();
      assertNotNull(requestInterceptorTape0);
      
      RestAdapter.Builder restAdapter_Builder1 = restAdapter_Builder0.setRequestInterceptor(requestInterceptorTape0);
      assertNotNull(restAdapter_Builder1);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      
      String string0 = "";
      Server server0 = new Server(string0, string0);
      assertEquals("", server0.getUrl());
      assertEquals("", server0.getName());
      assertNotNull(server0);
      
      RestAdapter.Builder restAdapter_Builder2 = restAdapter_Builder1.setServer(server0);
      assertEquals("", server0.getUrl());
      assertEquals("", server0.getName());
      assertNotNull(restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      
      RestAdapter.Builder restAdapter_Builder3 = restAdapter_Builder2.setServer(server0);
      assertEquals("", server0.getUrl());
      assertEquals("", server0.getName());
      assertNotNull(restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      assertSame(restAdapter_Builder1, restAdapter_Builder0);
      assertSame(restAdapter_Builder1, restAdapter_Builder2);
      assertSame(restAdapter_Builder1, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder1);
      assertSame(restAdapter_Builder2, restAdapter_Builder3);
      assertSame(restAdapter_Builder2, restAdapter_Builder0);
      assertSame(restAdapter_Builder3, restAdapter_Builder2);
      assertSame(restAdapter_Builder3, restAdapter_Builder1);
      assertSame(restAdapter_Builder3, restAdapter_Builder0);
      
      RestAdapter.Log restAdapter_Log0 = RestAdapter.Log.NONE;
      assertNotNull(restAdapter_Log0);
      
      RestAdapter restAdapter0 = restAdapter_Builder0.build();
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(restAdapter0);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      
      Class<Runnable> class0 = Runnable.class;
      Runnable runnable0 = restAdapter0.create(class0);
      assertEquals(RestAdapter.LogLevel.NONE, restAdapter0.getLogLevel());
      assertNotNull(runnable0);
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      
      RestAdapter.LogLevel restAdapter_LogLevel0 = RestAdapter.LogLevel.FULL;
      RestAdapter.LogLevel restAdapter_LogLevel1 = null;
      restAdapter0.setLogLevel(restAdapter_LogLevel1);
      assertNull(restAdapter0.getLogLevel());
      assertSame(restAdapter_Builder0, restAdapter_Builder2);
      assertSame(restAdapter_Builder0, restAdapter_Builder3);
      assertSame(restAdapter_Builder0, restAdapter_Builder1);
      
      RestAdapter.LogLevel restAdapter_LogLevel2 = RestAdapter.LogLevel.FULL;
      // Undeclared exception!
      try { 
        restAdapter0.setLogLevel(restAdapter_LogLevel2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Log level may not be null.
         //
         verifyException("retrofit.RestAdapter", e);
      }
  }
}
