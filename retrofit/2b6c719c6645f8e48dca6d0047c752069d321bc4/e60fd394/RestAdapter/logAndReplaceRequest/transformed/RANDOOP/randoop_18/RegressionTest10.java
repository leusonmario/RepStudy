import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05001");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = request14.getBody();
        java.lang.String str19 = request14.getUrl();
        java.util.List<retrofit.client.Header> headerList20 = request14.getHeaders();
        java.lang.String str21 = request14.getUrl();
        java.lang.String str22 = request14.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05002");
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.Profiler profiler13 = restAdapter12.profiler;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean15 = logLevel14.log();
        restAdapter12.logLevel = logLevel14;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        restAdapter12.log = log17;
        retrofit.ErrorHandler errorHandler19 = null;
        restAdapter12.errorHandler = errorHandler19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter12.logLevel = logLevel21;
        retrofit.RestAdapter.Log log23 = restAdapter12.log;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.Profiler profiler35 = restAdapter34.profiler;
        retrofit.ErrorHandler errorHandler36 = restAdapter34.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.setLogLevel(logLevel37);
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.Profiler profiler50 = restAdapter49.profiler;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean52 = logLevel51.log();
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        restAdapter49.log = log54;
        restAdapter34.log = log54;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.Profiler profiler60 = null;
        builder58.profiler = profiler60;
        retrofit.Server server62 = null;
        builder58.server = server62;
        java.util.concurrent.Executor executor64 = builder58.callbackExecutor;
        restAdapter57.callbackExecutor = executor64;
        restAdapter34.httpExecutor = executor64;
        restAdapter12.httpExecutor = executor64;
        retrofit.client.Client.Provider provider68 = restAdapter12.clientProvider;
        retrofit.client.Header[] headerArray71 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList72 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList72, headerArray71);
        retrofit.mime.TypedOutput typedOutput74 = null;
        retrofit.client.Request request75 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList72, typedOutput74);
        java.lang.String str76 = request75.getMethod();
        retrofit.mime.TypedOutput typedOutput77 = request75.getBody();
        java.util.List<retrofit.client.Header> headerList78 = request75.getHeaders();
        java.lang.String str79 = request75.getUrl();
        java.lang.String str80 = request75.getMethod();
        java.lang.String str81 = request75.getUrl();
        retrofit.client.Request request82 = restAdapter12.logAndReplaceRequest(request75);
        java.lang.String str83 = request75.getUrl();
        java.util.List<retrofit.client.Header> headerList84 = request75.getHeaders();
        retrofit.mime.TypedOutput typedOutput85 = null;
        retrofit.client.Request request86 = new retrofit.client.Request("", "hi!", headerList84, typedOutput85);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(headerArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNull(typedOutput77);
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(request82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(headerList84);
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05003");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.converter.Converter converter33 = builder30.converter;
        java.util.concurrent.Executor executor34 = builder30.callbackExecutor;
        retrofit.Server server35 = builder30.server;
        retrofit.Server server36 = builder30.server;
        retrofit.Profiler profiler37 = null;
        builder30.profiler = profiler37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider45 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        builder43.clientProvider = provider48;
        builder39.clientProvider = provider48;
        retrofit.Profiler profiler51 = null;
        builder39.profiler = profiler51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.converter.Converter converter55 = builder53.converter;
        builder39.converter = converter55;
        retrofit.RestAdapter.Builder builder57 = builder30.setConverter(converter55);
        retrofit.converter.Converter converter58 = builder30.converter;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(converter55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(converter58);
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05004");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler6 = restAdapter5.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter5.new RestHandler();
        retrofit.Profiler profiler8 = restAdapter5.profiler;
        retrofit.Server server9 = restAdapter5.server;
        retrofit.ErrorHandler errorHandler10 = restAdapter5.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter5.getLogLevel();
        retrofit.Profiler profiler12 = null;
        restAdapter5.profiler = profiler12;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log37;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log37, logLevel39);
        restAdapter5.log = log37;
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log37);
        retrofit.ErrorHandler errorHandler43 = builder42.errorHandler;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.Profiler profiler46 = null;
        builder44.profiler = profiler46;
        java.util.concurrent.Executor executor48 = builder44.callbackExecutor;
        builder42.httpExecutor = executor48;
        java.util.concurrent.Executor executor50 = builder42.httpExecutor;
        retrofit.Profiler profiler51 = null;
        builder42.profiler = profiler51;
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(executor50);
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05005");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider17 = null;
        restAdapter10.clientProvider = provider17;
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter10.getLogLevel();
        retrofit.Profiler profiler20 = restAdapter10.profiler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler20);
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05006");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider4 = null;
        builder3.clientProvider = provider4;
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider12 = builder10.clientProvider;
        builder7.clientProvider = provider12;
        builder3.clientProvider = provider12;
        retrofit.Profiler profiler15 = null;
        builder3.profiler = profiler15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.converter.Converter converter19 = builder17.converter;
        builder3.converter = converter19;
        java.util.concurrent.Executor executor21 = builder3.callbackExecutor;
        builder0.httpExecutor = executor21;
        retrofit.Profiler profiler23 = null;
        builder0.profiler = profiler23;
        retrofit.RestAdapter.Log log25 = builder0.log;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(provider12);
        org.junit.Assert.assertNotNull(converter19);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(log25);
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05007");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.Log log26 = restAdapter11.log;
        retrofit.client.Client.Provider provider27 = restAdapter11.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.Profiler profiler31 = null;
        builder29.profiler = profiler31;
        retrofit.Server server33 = null;
        builder29.server = server33;
        java.util.concurrent.Executor executor35 = builder29.callbackExecutor;
        retrofit.converter.Converter converter36 = builder29.converter;
        retrofit.client.Client.Provider provider37 = builder29.clientProvider;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        java.util.concurrent.Executor executor42 = builder39.httpExecutor;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        builder39.httpExecutor = executor49;
        builder38.callbackExecutor = executor49;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.Profiler profiler54 = null;
        builder52.profiler = profiler54;
        retrofit.Server server56 = null;
        builder52.server = server56;
        java.util.concurrent.Executor executor58 = builder52.callbackExecutor;
        retrofit.RestAdapter.Builder builder59 = builder29.setExecutors(executor49, executor58);
        retrofit.client.Client.Provider provider60 = builder29.clientProvider;
        restAdapter11.clientProvider = provider60;
        retrofit.ErrorHandler errorHandler62 = restAdapter11.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(converter36);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNull(errorHandler62);
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05008");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.Profiler profiler11 = null;
        builder9.profiler = profiler11;
        retrofit.Server server13 = null;
        builder9.server = server13;
        java.util.concurrent.Executor executor15 = builder9.callbackExecutor;
        builder5.callbackExecutor = executor15;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.Profiler profiler36 = restAdapter35.profiler;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean38 = logLevel37.log();
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        restAdapter35.log = log40;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log40, logLevel42);
        builder5.log = log40;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.Profiler profiler57 = restAdapter56.profiler;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean59 = logLevel58.log();
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        restAdapter56.log = log61;
        builder45.log = log61;
        retrofit.Server server64 = null;
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = null;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log72, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder45.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("hi!");
        retrofit.RestAdapter.Log log78 = builder77.log;
        builder5.log = log78;
        retrofit.RestAdapter.Builder builder81 = builder5.setServer("hi!");
        retrofit.Server server82 = builder81.server;
        retrofit.ErrorHandler errorHandler83 = builder81.errorHandler;
        retrofit.RestAdapter.Log log84 = builder81.log;
        log84.log("hi!");
        builder0.log = log84;
        retrofit.Server server88 = builder0.server;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(server88);
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05009");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        retrofit.client.Client.Provider provider15 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.client.Client.Provider provider20 = builder18.clientProvider;
        retrofit.ErrorHandler errorHandler21 = builder18.errorHandler;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.client.Client.Provider provider24 = builder22.clientProvider;
        retrofit.ErrorHandler errorHandler25 = builder22.errorHandler;
        retrofit.RestAdapter.Builder builder26 = builder18.setErrorHandler(errorHandler25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("hi!");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider30 = null;
        builder29.clientProvider = provider30;
        retrofit.converter.Converter converter32 = null;
        builder29.converter = converter32;
        builder29.ensureSaneDefaults();
        retrofit.Server server35 = builder29.server;
        retrofit.client.Client.Provider provider36 = builder29.clientProvider;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider38 = null;
        builder37.clientProvider = provider38;
        builder37.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor41 = builder37.requestInterceptor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider44 = null;
        builder43.clientProvider = provider44;
        java.util.concurrent.Executor executor46 = builder43.httpExecutor;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.Profiler profiler49 = null;
        builder47.profiler = profiler49;
        retrofit.Server server51 = null;
        builder47.server = server51;
        java.util.concurrent.Executor executor53 = builder47.callbackExecutor;
        builder43.httpExecutor = executor53;
        builder42.callbackExecutor = executor53;
        builder37.callbackExecutor = executor53;
        retrofit.Profiler profiler57 = builder37.profiler;
        java.util.concurrent.Executor executor58 = builder37.callbackExecutor;
        builder29.callbackExecutor = executor58;
        builder28.httpExecutor = executor58;
        restAdapter10.httpExecutor = executor58;
        retrofit.client.Response response63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response65 = restAdapter10.logAndReplaceResponse("", response63, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(provider20);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertNotNull(executor58);
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05010");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.ErrorHandler errorHandler33 = restAdapter31.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider37 = null;
        builder36.clientProvider = provider37;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.converter.Converter converter50 = restAdapter49.converter;
        retrofit.ErrorHandler errorHandler51 = restAdapter49.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter49.logLevel;
        builder36.logLevel = logLevel52;
        restAdapter31.setLogLevel(logLevel52);
        restAdapter10.logLevel = logLevel52;
        retrofit.Profiler profiler56 = null;
        restAdapter10.profiler = profiler56;
        retrofit.RestAdapter.Log log58 = restAdapter10.log;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log58);
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05011");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.Log log26 = restAdapter11.log;
        retrofit.client.Client.Provider provider27 = restAdapter11.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter11.new RestHandler();
        retrofit.Profiler profiler29 = null;
        restAdapter11.profiler = profiler29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.Profiler profiler43 = restAdapter42.profiler;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean45 = logLevel44.log();
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        restAdapter42.log = log47;
        builder31.log = log47;
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.RestAdapter.Builder builder61 = builder31.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        restAdapter11.logLevel = logLevel64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = null;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel76);
        retrofit.Profiler profiler78 = restAdapter77.profiler;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean80 = logLevel79.log();
        restAdapter77.logLevel = logLevel79;
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        restAdapter77.log = log82;
        builder66.log = log82;
        log82.log("");
        restAdapter11.log = log82;
        retrofit.RestAdapter.Log log88 = restAdapter11.log;
        java.lang.Throwable throwable89 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable89, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(log88);
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05012");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log1;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.client.Client.Provider provider5 = restAdapter0.clientProvider;
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        retrofit.mime.TypedOutput typedOutput18 = request16.getBody();
        java.util.List<retrofit.client.Header> headerList19 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList19, typedOutput22);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request24 = restAdapter0.logAndReplaceRequest(request23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05013");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        retrofit.converter.Converter converter18 = null;
        builder15.converter = converter18;
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider22 = null;
        builder21.clientProvider = provider22;
        java.util.concurrent.Executor executor24 = builder21.httpExecutor;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.Profiler profiler27 = null;
        builder25.profiler = profiler27;
        retrofit.Server server29 = null;
        builder25.server = server29;
        java.util.concurrent.Executor executor31 = builder25.callbackExecutor;
        builder21.httpExecutor = executor31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        java.util.concurrent.Executor executor37 = builder34.httpExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.Profiler profiler40 = null;
        builder38.profiler = profiler40;
        retrofit.Server server42 = null;
        builder38.server = server42;
        java.util.concurrent.Executor executor44 = builder38.callbackExecutor;
        builder34.httpExecutor = executor44;
        builder33.callbackExecutor = executor44;
        builder21.callbackExecutor = executor44;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider49 = null;
        builder48.clientProvider = provider49;
        java.util.concurrent.Executor executor51 = builder48.httpExecutor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.Profiler profiler54 = null;
        builder52.profiler = profiler54;
        retrofit.Server server56 = null;
        builder52.server = server56;
        java.util.concurrent.Executor executor58 = builder52.callbackExecutor;
        builder48.httpExecutor = executor58;
        java.util.concurrent.Executor executor60 = builder48.httpExecutor;
        retrofit.RestAdapter.Builder builder61 = builder15.setExecutors(executor44, executor60);
        restAdapter10.callbackExecutor = executor60;
        retrofit.ErrorHandler errorHandler63 = restAdapter10.errorHandler;
        java.util.concurrent.Executor executor64 = restAdapter10.callbackExecutor;
        retrofit.Profiler profiler65 = null;
        restAdapter10.profiler = profiler65;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(errorHandler63);
        org.junit.Assert.assertNotNull(executor64);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05014");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.Server server3 = null;
        retrofit.client.Client.Provider provider4 = null;
        java.util.concurrent.Executor executor5 = null;
        java.util.concurrent.Executor executor6 = null;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        retrofit.converter.Converter converter8 = null;
        retrofit.Profiler profiler9 = null;
        retrofit.ErrorHandler errorHandler10 = null;
        retrofit.RestAdapter.Log log11 = null;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server3, provider4, executor5, executor6, requestInterceptor7, converter8, profiler9, errorHandler10, log11, logLevel12);
        retrofit.converter.Converter converter14 = restAdapter13.converter;
        retrofit.ErrorHandler errorHandler15 = restAdapter13.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter13.logLevel;
        builder0.logLevel = logLevel16;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler29 = restAdapter28.profiler;
        retrofit.ErrorHandler errorHandler30 = restAdapter28.errorHandler;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        restAdapter28.log = log31;
        builder0.log = log31;
        java.util.concurrent.Executor executor34 = null;
        builder0.httpExecutor = executor34;
        retrofit.client.Client client36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder37 = builder0.setClient(client36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertNotNull(log31);
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05015");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.RestAdapter.Log log33 = builder30.log;
        retrofit.RequestInterceptor requestInterceptor34 = builder30.requestInterceptor;
        java.util.concurrent.Executor executor35 = builder30.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor36 = builder30.requestInterceptor;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        retrofit.RestAdapter.Log log68 = builder67.log;
        retrofit.converter.Converter converter69 = builder67.converter;
        retrofit.RestAdapter.Log log70 = builder67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder30.setLogLevel(logLevel71);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(requestInterceptor34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(requestInterceptor36);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05016");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.converter.Converter converter19 = builder0.converter;
        retrofit.RestAdapter.Log log20 = builder0.log;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.ErrorHandler errorHandler33 = restAdapter31.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider37 = null;
        builder36.clientProvider = provider37;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.converter.Converter converter50 = restAdapter49.converter;
        retrofit.ErrorHandler errorHandler51 = restAdapter49.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter49.logLevel;
        builder36.logLevel = logLevel52;
        restAdapter31.setLogLevel(logLevel52);
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        restAdapter55.callbackExecutor = executor62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.Profiler profiler66 = null;
        builder64.profiler = profiler66;
        retrofit.Server server68 = null;
        builder64.server = server68;
        java.util.concurrent.Executor executor70 = builder64.callbackExecutor;
        retrofit.converter.Converter converter71 = builder64.converter;
        restAdapter55.converter = converter71;
        restAdapter31.converter = converter71;
        retrofit.RestAdapter.Builder builder74 = builder0.setConverter(converter71);
        retrofit.Profiler profiler75 = builder74.profiler;
        retrofit.Profiler profiler76 = builder74.profiler;
        retrofit.converter.Converter converter77 = builder74.converter;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(converter71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertNull(profiler76);
        org.junit.Assert.assertNotNull(converter77);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05017");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter14);
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05018");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.converter.Converter converter16 = restAdapter10.converter;
        retrofit.Profiler profiler17 = restAdapter10.profiler;
        retrofit.Server server18 = restAdapter10.server;
        retrofit.RestAdapter.Log log19 = restAdapter10.log;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNull(requestInterceptor20);
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05019");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.client.Client.Provider provider17 = restAdapter10.clientProvider;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log31 = null;
        restAdapter29.log = log31;
        retrofit.converter.Converter converter33 = restAdapter29.converter;
        retrofit.Profiler profiler34 = restAdapter29.profiler;
        retrofit.client.Client.Provider provider35 = restAdapter29.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.getLogLevel();
        restAdapter10.setLogLevel(logLevel36);
        retrofit.client.Client.Provider provider38 = restAdapter10.clientProvider;
        retrofit.converter.Converter converter39 = restAdapter10.converter;
        retrofit.Profiler profiler40 = null;
        restAdapter10.profiler = profiler40;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        restAdapter42.callbackExecutor = executor49;
        retrofit.ErrorHandler errorHandler51 = restAdapter42.errorHandler;
        retrofit.ErrorHandler errorHandler52 = restAdapter42.errorHandler;
        retrofit.RestAdapter.Log log53 = restAdapter42.log;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.client.Client.Provider provider56 = builder54.clientProvider;
        restAdapter42.clientProvider = provider56;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.client.Client.Provider provider69 = null;
        restAdapter68.clientProvider = provider69;
        java.util.concurrent.Executor executor71 = restAdapter68.callbackExecutor;
        retrofit.client.Client.Provider provider72 = restAdapter68.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter68.logLevel;
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter68.logLevel;
        restAdapter42.logLevel = logLevel74;
        restAdapter10.logLevel = logLevel74;
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter10.getLogLevel();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertNull(errorHandler52);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05020");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        builder30.requestInterceptor = requestInterceptor35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = null;
        builder67.callbackExecutor = executor68;
        retrofit.ErrorHandler errorHandler70 = null;
        builder67.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.Profiler profiler74 = null;
        builder72.profiler = profiler74;
        retrofit.Server server76 = null;
        builder72.server = server76;
        java.util.concurrent.Executor executor78 = builder72.callbackExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        builder72.clientProvider = provider81;
        builder67.clientProvider = provider81;
        builder30.clientProvider = provider81;
        retrofit.ErrorHandler errorHandler85 = builder30.errorHandler;
        java.util.concurrent.Executor executor86 = builder30.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor87 = builder30.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNull(errorHandler85);
        org.junit.Assert.assertNull(executor86);
        org.junit.Assert.assertNull(requestInterceptor87);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05021");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.Server server3 = null;
        retrofit.client.Client.Provider provider4 = null;
        java.util.concurrent.Executor executor5 = null;
        java.util.concurrent.Executor executor6 = null;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        retrofit.converter.Converter converter8 = null;
        retrofit.Profiler profiler9 = null;
        retrofit.ErrorHandler errorHandler10 = null;
        retrofit.RestAdapter.Log log11 = null;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server3, provider4, executor5, executor6, requestInterceptor7, converter8, profiler9, errorHandler10, log11, logLevel12);
        retrofit.converter.Converter converter14 = restAdapter13.converter;
        retrofit.ErrorHandler errorHandler15 = restAdapter13.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter13.logLevel;
        builder0.logLevel = logLevel16;
        java.util.concurrent.Executor executor18 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider20 = null;
        builder19.clientProvider = provider20;
        java.util.concurrent.Executor executor22 = builder19.httpExecutor;
        retrofit.Profiler profiler23 = builder19.profiler;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.converter.Converter converter35 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler36 = restAdapter34.errorHandler;
        retrofit.Profiler profiler37 = null;
        restAdapter34.profiler = profiler37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.converter.Converter converter53 = restAdapter52.converter;
        retrofit.ErrorHandler errorHandler54 = restAdapter52.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter52.logLevel;
        builder39.logLevel = logLevel55;
        restAdapter34.logLevel = logLevel55;
        retrofit.Server server58 = restAdapter34.server;
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter34.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder19.setLogLevel(logLevel59);
        retrofit.Server server61 = null;
        retrofit.client.Client.Provider provider62 = null;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.converter.Converter converter66 = null;
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Log log69 = null;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server61, provider62, executor63, executor64, requestInterceptor65, converter66, profiler67, errorHandler68, log69, logLevel70);
        retrofit.Profiler profiler72 = restAdapter71.profiler;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean74 = logLevel73.log();
        restAdapter71.logLevel = logLevel73;
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        restAdapter71.log = log76;
        retrofit.ErrorHandler errorHandler78 = null;
        restAdapter71.errorHandler = errorHandler78;
        retrofit.RequestInterceptor requestInterceptor80 = null;
        restAdapter71.requestInterceptor = requestInterceptor80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider83 = null;
        builder82.clientProvider = provider83;
        builder82.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor86 = builder82.requestInterceptor;
        restAdapter71.requestInterceptor = requestInterceptor86;
        builder60.requestInterceptor = requestInterceptor86;
        retrofit.RestAdapter.Builder builder89 = builder0.setRequestInterceptor(requestInterceptor86);
        retrofit.Server server90 = builder89.server;
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(errorHandler54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNull(server90);
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05022");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.client.Client.Provider provider14 = null;
        restAdapter10.clientProvider = provider14;
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.Log log17 = restAdapter10.log;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(log17);
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05023");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.converter.Converter converter16 = restAdapter10.converter;
        retrofit.client.Client.Provider provider17 = restAdapter10.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(provider17);
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05024");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.Profiler profiler21 = null;
        builder19.profiler = profiler21;
        retrofit.Server server23 = null;
        builder19.server = server23;
        java.util.concurrent.Executor executor25 = builder19.callbackExecutor;
        retrofit.converter.Converter converter26 = builder19.converter;
        retrofit.client.Client.Provider provider27 = builder19.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider30 = null;
        builder29.clientProvider = provider30;
        java.util.concurrent.Executor executor32 = builder29.httpExecutor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.Profiler profiler35 = null;
        builder33.profiler = profiler35;
        retrofit.Server server37 = null;
        builder33.server = server37;
        java.util.concurrent.Executor executor39 = builder33.callbackExecutor;
        builder29.httpExecutor = executor39;
        builder28.callbackExecutor = executor39;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        retrofit.RestAdapter.Builder builder49 = builder19.setExecutors(executor39, executor48);
        builder0.callbackExecutor = executor39;
        retrofit.Server server51 = builder0.server;
        retrofit.Profiler profiler52 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder53 = builder0.setProfiler(profiler52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(server51);
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05025");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.converter.Converter converter15 = restAdapter10.converter;
        retrofit.Profiler profiler16 = null;
        restAdapter10.profiler = profiler16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler19 = restAdapter18.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.Profiler profiler21 = restAdapter18.profiler;
        retrofit.Server server22 = restAdapter18.server;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log36 = null;
        restAdapter34.log = log36;
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.converter.Converter converter39 = restAdapter34.converter;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter34.getLogLevel();
        restAdapter18.logLevel = logLevel40;
        restAdapter10.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder46 = builder43.setLogLevel(logLevel45);
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean57 = logLevel56.log();
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder43.setLogLevel(logLevel59);
        retrofit.RequestInterceptor requestInterceptor61 = builder43.requestInterceptor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        retrofit.RestAdapter.Builder builder65 = builder43.setClient(provider64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.client.Client.Provider provider68 = builder66.clientProvider;
        retrofit.ErrorHandler errorHandler69 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.client.Client.Provider provider72 = builder70.clientProvider;
        retrofit.ErrorHandler errorHandler73 = builder70.errorHandler;
        retrofit.RestAdapter.Builder builder74 = builder66.setErrorHandler(errorHandler73);
        builder65.errorHandler = errorHandler73;
        restAdapter10.errorHandler = errorHandler73;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05026");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.httpExecutor = executor10;
        java.util.concurrent.Executor executor12 = builder0.httpExecutor;
        retrofit.Profiler profiler13 = null;
        builder0.profiler = profiler13;
        retrofit.converter.Converter converter15 = builder0.converter;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNull(converter15);
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05027");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.converter.Converter converter13 = restAdapter12.converter;
        retrofit.ErrorHandler errorHandler14 = restAdapter12.errorHandler;
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter12.requestInterceptor;
        retrofit.Profiler profiler16 = restAdapter12.profiler;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder17.clientProvider;
        retrofit.ErrorHandler errorHandler20 = builder17.errorHandler;
        restAdapter12.errorHandler = errorHandler20;
        retrofit.RestAdapter.Builder builder22 = builder0.setErrorHandler(errorHandler20);
        retrofit.Server server23 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder24 = builder0.setServer(server23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05028");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        java.util.concurrent.Executor executor14 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean29 = logLevel28.log();
        restAdapter26.logLevel = logLevel28;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        restAdapter26.log = log31;
        builder15.log = log31;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.RestAdapter.Builder builder45 = builder15.setLogLevel(logLevel43);
        java.util.concurrent.Executor executor46 = null;
        builder45.callbackExecutor = executor46;
        retrofit.ErrorHandler errorHandler48 = null;
        builder45.errorHandler = errorHandler48;
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = builder45.log;
        retrofit.client.Client.Provider provider52 = builder45.clientProvider;
        restAdapter10.clientProvider = provider52;
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter10.new RestHandler();
        retrofit.ErrorHandler errorHandler55 = restAdapter10.errorHandler;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.Profiler profiler67 = restAdapter66.profiler;
        retrofit.Profiler profiler68 = restAdapter66.profiler;
        retrofit.Server server69 = null;
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.RequestInterceptor requestInterceptor73 = null;
        retrofit.converter.Converter converter74 = null;
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = null;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor73, converter74, profiler75, errorHandler76, log77, logLevel78);
        retrofit.Profiler profiler80 = restAdapter79.profiler;
        retrofit.ErrorHandler errorHandler81 = restAdapter79.errorHandler;
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        restAdapter79.log = log82;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter79.logLevel = logLevel84;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean87 = logLevel86.log();
        restAdapter79.setLogLevel(logLevel86);
        restAdapter66.setLogLevel(logLevel86);
        restAdapter10.logLevel = logLevel86;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNull(errorHandler55);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler67);
        org.junit.Assert.assertNull(profiler68);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler80);
        org.junit.Assert.assertNull(errorHandler81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05029");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder21.clientProvider;
        retrofit.ErrorHandler errorHandler24 = builder21.errorHandler;
        restAdapter10.errorHandler = errorHandler24;
        retrofit.RestAdapter.Log log26 = restAdapter10.log;
        retrofit.RestAdapter.Log log27 = restAdapter10.log;
        retrofit.RestAdapter.Log log28 = null;
        restAdapter10.log = log28;
        java.util.concurrent.Executor executor30 = restAdapter10.callbackExecutor;
        retrofit.converter.Converter converter31 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(errorHandler24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(converter31);
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05030");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.client.Client.Provider provider33 = builder31.clientProvider;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.client.Client.Provider provider36 = builder34.clientProvider;
        builder31.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = builder0.setClient(provider36);
        java.util.concurrent.Executor executor39 = builder38.httpExecutor;
        retrofit.Profiler profiler40 = builder38.profiler;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel52);
        retrofit.Profiler profiler54 = restAdapter53.profiler;
        java.util.concurrent.Executor executor55 = null;
        restAdapter53.httpExecutor = executor55;
        retrofit.Profiler profiler57 = null;
        restAdapter53.profiler = profiler57;
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter53.getLogLevel();
        builder41.logLevel = logLevel59;
        retrofit.RestAdapter.LogLevel logLevel61 = builder41.logLevel;
        retrofit.converter.Converter converter62 = builder41.converter;
        retrofit.converter.Converter converter63 = builder41.converter;
        retrofit.Profiler profiler64 = builder41.profiler;
        java.util.concurrent.Executor executor65 = builder41.callbackExecutor;
        builder38.callbackExecutor = executor65;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter67 = builder38.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter62);
        org.junit.Assert.assertNotNull(converter63);
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNotNull(executor65);
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05031");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.Profiler profiler3 = builder0.profiler;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.Profiler profiler19 = restAdapter18.profiler;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean21 = logLevel20.log();
        restAdapter18.logLevel = logLevel20;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        restAdapter18.log = log23;
        builder7.log = log23;
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = null;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel35);
        retrofit.RestAdapter.Builder builder37 = builder7.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor38 = null;
        builder37.callbackExecutor = executor38;
        retrofit.ErrorHandler errorHandler40 = null;
        builder37.errorHandler = errorHandler40;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        builder37.requestInterceptor = requestInterceptor42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        retrofit.Profiler profiler56 = restAdapter55.profiler;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean58 = logLevel57.log();
        restAdapter55.logLevel = logLevel57;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        restAdapter55.log = log60;
        builder44.log = log60;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = null;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel72);
        retrofit.RestAdapter.Builder builder74 = builder44.setLogLevel(logLevel72);
        java.util.concurrent.Executor executor75 = null;
        builder74.callbackExecutor = executor75;
        retrofit.ErrorHandler errorHandler77 = null;
        builder74.errorHandler = errorHandler77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.Profiler profiler81 = null;
        builder79.profiler = profiler81;
        retrofit.Server server83 = null;
        builder79.server = server83;
        java.util.concurrent.Executor executor85 = builder79.callbackExecutor;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        builder86.ensureSaneDefaults();
        retrofit.client.Client.Provider provider88 = builder86.clientProvider;
        builder79.clientProvider = provider88;
        builder74.clientProvider = provider88;
        builder37.clientProvider = provider88;
        retrofit.RestAdapter.Builder builder92 = builder0.setClient(provider88);
        retrofit.client.Client.Provider provider93 = builder92.clientProvider;
        retrofit.RestAdapter.Builder builder95 = builder92.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel96 = null;
        builder95.logLevel = logLevel96;
        retrofit.Profiler profiler98 = null;
        builder95.profiler = profiler98;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(provider88);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(provider93);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05032");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.Profiler profiler16 = null;
        restAdapter10.profiler = profiler16;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter10.new RestHandler();
        retrofit.converter.Converter converter19 = restAdapter10.converter;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter10.requestInterceptor;
        java.util.concurrent.Executor executor21 = restAdapter10.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNull(executor21);
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05033");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.lang.String str13 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05034");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor2 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor3 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        retrofit.Server server9 = null;
        builder5.server = server9;
        retrofit.client.Client.Provider provider11 = builder5.clientProvider;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean26 = logLevel25.log();
        restAdapter23.logLevel = logLevel25;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        restAdapter23.log = log28;
        builder12.log = log28;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder12.setLogLevel(logLevel40);
        java.util.concurrent.Executor executor43 = null;
        builder42.callbackExecutor = executor43;
        retrofit.converter.Converter converter45 = builder42.converter;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        builder46.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor50 = builder46.requestInterceptor;
        builder42.requestInterceptor = requestInterceptor50;
        retrofit.Server server52 = null;
        builder42.server = server52;
        retrofit.RequestInterceptor requestInterceptor54 = builder42.requestInterceptor;
        builder5.requestInterceptor = requestInterceptor54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        retrofit.client.Client.Provider provider62 = builder56.clientProvider;
        retrofit.RestAdapter.Builder builder63 = builder5.setClient(provider62);
        restAdapter0.clientProvider = provider62;
        retrofit.Profiler profiler65 = null;
        restAdapter0.profiler = profiler65;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05035");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.Profiler profiler13 = restAdapter12.profiler;
        java.util.concurrent.Executor executor14 = null;
        restAdapter12.httpExecutor = executor14;
        retrofit.Profiler profiler16 = null;
        restAdapter12.profiler = profiler16;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.getLogLevel();
        builder0.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel20 = builder0.logLevel;
        retrofit.converter.Converter converter21 = builder0.converter;
        retrofit.converter.Converter converter22 = builder0.converter;
        retrofit.Profiler profiler23 = builder0.profiler;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertNotNull(converter22);
        org.junit.Assert.assertNull(profiler23);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05036");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log1;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor7 = restAdapter0.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter0.logLevel;
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(requestInterceptor7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(logLevel9);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05037");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.converter.Converter converter15 = restAdapter10.converter;
        retrofit.Profiler profiler16 = null;
        restAdapter10.profiler = profiler16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler19 = restAdapter18.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.Profiler profiler21 = restAdapter18.profiler;
        retrofit.Server server22 = restAdapter18.server;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log36 = null;
        restAdapter34.log = log36;
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.converter.Converter converter39 = restAdapter34.converter;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter34.getLogLevel();
        restAdapter18.logLevel = logLevel40;
        restAdapter10.logLevel = logLevel40;
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput54);
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList50, typedOutput56);
        java.lang.String str58 = request57.getMethod();
        java.lang.String str59 = request57.getMethod();
        java.util.List<retrofit.client.Header> headerList60 = request57.getHeaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request61 = restAdapter10.logAndReplaceRequest(request57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(headerList60);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05038");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.Server server37 = null;
        builder30.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.Profiler profiler41 = null;
        builder39.profiler = profiler41;
        retrofit.Server server43 = null;
        builder39.server = server43;
        java.util.concurrent.Executor executor45 = builder39.callbackExecutor;
        retrofit.converter.Converter converter46 = builder39.converter;
        builder30.converter = converter46;
        retrofit.Profiler profiler48 = builder30.profiler;
        retrofit.Profiler profiler49 = null;
        builder30.profiler = profiler49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.Profiler profiler63 = restAdapter62.profiler;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean65 = logLevel64.log();
        restAdapter62.logLevel = logLevel64;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        restAdapter62.log = log67;
        builder51.log = log67;
        retrofit.Server server70 = null;
        retrofit.client.Client.Provider provider71 = null;
        java.util.concurrent.Executor executor72 = null;
        java.util.concurrent.Executor executor73 = null;
        retrofit.RequestInterceptor requestInterceptor74 = null;
        retrofit.converter.Converter converter75 = null;
        retrofit.Profiler profiler76 = null;
        retrofit.ErrorHandler errorHandler77 = null;
        retrofit.RestAdapter.Log log78 = null;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server70, provider71, executor72, executor73, requestInterceptor74, converter75, profiler76, errorHandler77, log78, logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder51.setLogLevel(logLevel79);
        java.util.concurrent.Executor executor82 = null;
        builder81.callbackExecutor = executor82;
        retrofit.converter.Converter converter84 = builder81.converter;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider86 = null;
        builder85.clientProvider = provider86;
        builder85.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor89 = builder85.requestInterceptor;
        builder81.requestInterceptor = requestInterceptor89;
        retrofit.Server server91 = null;
        builder81.server = server91;
        java.util.concurrent.Executor executor93 = builder81.httpExecutor;
        retrofit.RestAdapter.Log log94 = builder81.log;
        retrofit.RequestInterceptor requestInterceptor95 = builder81.requestInterceptor;
        retrofit.RestAdapter.Builder builder96 = builder30.setRequestInterceptor(requestInterceptor95);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter97 = builder96.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(converter46);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(converter84);
        org.junit.Assert.assertNotNull(requestInterceptor89);
        org.junit.Assert.assertNull(executor93);
        org.junit.Assert.assertNotNull(log94);
        org.junit.Assert.assertNotNull(requestInterceptor95);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05039");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Server server12 = restAdapter10.server;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel38);
        restAdapter10.log = log36;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.Profiler profiler52 = restAdapter51.profiler;
        retrofit.ErrorHandler errorHandler53 = restAdapter51.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter51.logLevel;
        restAdapter10.setLogLevel(logLevel54);
        boolean boolean56 = logLevel54.log();
        boolean boolean57 = logLevel54.log();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(errorHandler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05040");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.ErrorHandler errorHandler16 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log17 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter10.logLevel;
        retrofit.client.Client.Provider provider19 = restAdapter10.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05041");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.logLevel;
        retrofit.RestAdapter.Log log15 = restAdapter10.log;
        retrofit.RestAdapter.Log log16 = restAdapter10.log;
        java.util.concurrent.Executor executor17 = restAdapter10.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05042");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.Profiler profiler13 = restAdapter12.profiler;
        java.util.concurrent.Executor executor14 = null;
        restAdapter12.httpExecutor = executor14;
        retrofit.Profiler profiler16 = null;
        restAdapter12.profiler = profiler16;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.getLogLevel();
        builder0.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel20 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log37;
        builder21.log = log37;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder21.setLogLevel(logLevel49);
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.Profiler profiler63 = restAdapter62.profiler;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean65 = logLevel64.log();
        restAdapter62.logLevel = logLevel64;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        restAdapter62.log = log67;
        retrofit.ErrorHandler errorHandler69 = null;
        restAdapter62.errorHandler = errorHandler69;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        restAdapter62.requestInterceptor = requestInterceptor71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider74 = null;
        builder73.clientProvider = provider74;
        builder73.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor77 = builder73.requestInterceptor;
        restAdapter62.requestInterceptor = requestInterceptor77;
        builder21.requestInterceptor = requestInterceptor77;
        retrofit.RestAdapter.Log log80 = builder21.log;
        builder0.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.client.Client.Provider provider84 = builder82.clientProvider;
        retrofit.RestAdapter.Builder builder85 = builder0.setClient(provider84);
        retrofit.RestAdapter.Builder builder87 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel88 = builder87.logLevel;
        retrofit.client.Client client89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder87.setClient(client89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05043");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        builder1.ensureSaneDefaults();
        retrofit.Profiler profiler3 = null;
        builder1.profiler = profiler3;
        retrofit.Server server5 = null;
        builder1.server = server5;
        java.util.concurrent.Executor executor7 = builder1.callbackExecutor;
        restAdapter0.callbackExecutor = executor7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = null;
        builder9.clientProvider = provider10;
        retrofit.converter.Converter converter12 = null;
        builder9.converter = converter12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.client.Client.Provider provider16 = builder14.clientProvider;
        retrofit.ErrorHandler errorHandler17 = builder14.errorHandler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.client.Client.Provider provider20 = builder18.clientProvider;
        retrofit.ErrorHandler errorHandler21 = builder18.errorHandler;
        retrofit.RestAdapter.Builder builder22 = builder14.setErrorHandler(errorHandler21);
        builder9.errorHandler = errorHandler21;
        restAdapter0.errorHandler = errorHandler21;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = null;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel35);
        retrofit.Profiler profiler37 = restAdapter36.profiler;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean39 = logLevel38.log();
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        restAdapter36.log = log41;
        builder25.log = log41;
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = null;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel53);
        retrofit.RestAdapter.Builder builder55 = builder25.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        retrofit.Server server58 = null;
        builder57.server = server58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder60.clientProvider;
        retrofit.ErrorHandler errorHandler63 = builder60.errorHandler;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.client.Client.Provider provider66 = builder64.clientProvider;
        retrofit.ErrorHandler errorHandler67 = builder64.errorHandler;
        retrofit.RestAdapter.Builder builder68 = builder60.setErrorHandler(errorHandler67);
        retrofit.Server server69 = builder60.server;
        retrofit.converter.Converter converter70 = builder60.converter;
        builder57.converter = converter70;
        restAdapter0.converter = converter70;
        retrofit.Profiler profiler73 = restAdapter0.profiler;
        retrofit.ErrorHandler errorHandler74 = restAdapter0.errorHandler;
        retrofit.client.Response response76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response78 = restAdapter0.logAndReplaceResponse("hi!", response76, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(provider20);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(provider66);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertNotNull(converter70);
        org.junit.Assert.assertNull(profiler73);
        org.junit.Assert.assertNotNull(errorHandler74);
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05044");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter12 = null;
        restAdapter11.converter = converter12;
        retrofit.Profiler profiler14 = restAdapter11.profiler;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.Profiler profiler18 = null;
        builder16.profiler = profiler18;
        retrofit.Server server20 = null;
        builder16.server = server20;
        java.util.concurrent.Executor executor22 = builder16.callbackExecutor;
        restAdapter15.callbackExecutor = executor22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.Profiler profiler26 = null;
        builder24.profiler = profiler26;
        retrofit.Server server28 = null;
        builder24.server = server28;
        java.util.concurrent.Executor executor30 = builder24.callbackExecutor;
        retrofit.converter.Converter converter31 = builder24.converter;
        restAdapter15.converter = converter31;
        restAdapter11.converter = converter31;
        retrofit.RestAdapter.Log log34 = null;
        restAdapter11.log = log34;
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter11.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor37 = restAdapter11.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNotNull(converter31);
        org.junit.Assert.assertNull(requestInterceptor37);
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05045");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        retrofit.Server server18 = null;
        builder15.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.Profiler profiler22 = null;
        builder20.profiler = profiler22;
        retrofit.Server server24 = null;
        builder20.server = server24;
        java.util.concurrent.Executor executor26 = builder20.callbackExecutor;
        builder15.httpExecutor = executor26;
        restAdapter10.httpExecutor = executor26;
        retrofit.converter.Converter converter29 = restAdapter10.converter;
        java.lang.Throwable throwable30 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable30, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNull(converter29);
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05046");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = null;
        restAdapter10.converter = converter11;
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter10.requestInterceptor;
        java.util.concurrent.Executor executor14 = restAdapter10.httpExecutor;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter25.errorHandler = errorHandler32;
        retrofit.ErrorHandler errorHandler34 = restAdapter25.errorHandler;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.Profiler profiler47 = restAdapter46.profiler;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean49 = logLevel48.log();
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        restAdapter46.log = log51;
        builder35.log = log51;
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = null;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder35.setLogLevel(logLevel63);
        java.util.concurrent.Executor executor66 = null;
        builder65.callbackExecutor = executor66;
        java.util.concurrent.Executor executor68 = builder65.httpExecutor;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.Profiler profiler72 = null;
        builder70.profiler = profiler72;
        retrofit.Server server74 = null;
        builder70.server = server74;
        java.util.concurrent.Executor executor76 = builder70.callbackExecutor;
        restAdapter69.callbackExecutor = executor76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.Profiler profiler80 = null;
        builder78.profiler = profiler80;
        retrofit.Server server82 = null;
        builder78.server = server82;
        java.util.concurrent.Executor executor84 = builder78.callbackExecutor;
        retrofit.converter.Converter converter85 = builder78.converter;
        restAdapter69.converter = converter85;
        builder65.converter = converter85;
        restAdapter25.converter = converter85;
        restAdapter10.converter = converter85;
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor91 = restAdapter10.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNull(errorHandler34);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(converter85);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor91);
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05047");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        builder30.requestInterceptor = requestInterceptor35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = null;
        builder67.callbackExecutor = executor68;
        retrofit.ErrorHandler errorHandler70 = null;
        builder67.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.Profiler profiler74 = null;
        builder72.profiler = profiler74;
        retrofit.Server server76 = null;
        builder72.server = server76;
        java.util.concurrent.Executor executor78 = builder72.callbackExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        builder72.clientProvider = provider81;
        builder67.clientProvider = provider81;
        builder30.clientProvider = provider81;
        java.util.concurrent.Executor executor85 = builder30.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel86 = builder30.logLevel;
        retrofit.Server server87 = builder30.server;
        retrofit.Server server88 = builder30.server;
        java.util.concurrent.Executor executor89 = builder30.httpExecutor;
        java.util.concurrent.Executor executor90 = builder30.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor91 = builder30.requestInterceptor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter92 = builder30.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server87);
        org.junit.Assert.assertNull(server88);
        org.junit.Assert.assertNull(executor89);
        org.junit.Assert.assertNull(executor90);
        org.junit.Assert.assertNull(requestInterceptor91);
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05048");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        retrofit.ErrorHandler errorHandler28 = restAdapter26.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter26.logLevel;
        restAdapter10.logLevel = logLevel29;
        retrofit.client.Client.Provider provider31 = restAdapter10.clientProvider;
        retrofit.converter.Converter converter32 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNull(converter32);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05049");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        retrofit.client.Client.Provider provider6 = builder0.clientProvider;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = null;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel16);
        retrofit.converter.Converter converter18 = restAdapter17.converter;
        retrofit.ErrorHandler errorHandler19 = restAdapter17.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter17.logLevel;
        retrofit.Profiler profiler21 = null;
        restAdapter17.profiler = profiler21;
        java.util.concurrent.Executor executor23 = restAdapter17.callbackExecutor;
        retrofit.client.Client.Provider provider24 = null;
        restAdapter17.clientProvider = provider24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.Profiler profiler38 = restAdapter37.profiler;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        restAdapter37.log = log42;
        builder26.log = log42;
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        retrofit.RestAdapter.Builder builder56 = builder26.setLogLevel(logLevel54);
        java.util.concurrent.Executor executor57 = null;
        builder56.callbackExecutor = executor57;
        retrofit.ErrorHandler errorHandler59 = null;
        builder56.errorHandler = errorHandler59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder61.clientProvider;
        retrofit.RestAdapter.Builder builder64 = builder56.setClient(provider63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.client.Client.Provider provider67 = builder65.clientProvider;
        retrofit.ErrorHandler errorHandler68 = builder65.errorHandler;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider71 = builder69.clientProvider;
        retrofit.ErrorHandler errorHandler72 = builder69.errorHandler;
        retrofit.RestAdapter.Builder builder73 = builder65.setErrorHandler(errorHandler72);
        retrofit.Server server74 = builder65.server;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.Profiler profiler77 = null;
        builder75.profiler = profiler77;
        retrofit.Server server79 = null;
        builder75.server = server79;
        java.util.concurrent.Executor executor81 = builder75.callbackExecutor;
        retrofit.converter.Converter converter82 = builder75.converter;
        retrofit.RestAdapter.Builder builder83 = builder65.setConverter(converter82);
        builder56.converter = converter82;
        restAdapter17.converter = converter82;
        retrofit.RestAdapter.Builder builder86 = builder0.setConverter(converter82);
        retrofit.RequestInterceptor requestInterceptor87 = builder86.requestInterceptor;
        retrofit.Profiler profiler88 = null;
        builder86.profiler = profiler88;
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(provider67);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(converter82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(requestInterceptor87);
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05050");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.Profiler profiler17 = null;
        builder15.profiler = profiler17;
        retrofit.Server server19 = null;
        builder15.server = server19;
        java.util.concurrent.Executor executor21 = builder15.callbackExecutor;
        retrofit.converter.Converter converter22 = builder15.converter;
        restAdapter10.converter = converter22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.Profiler profiler26 = null;
        builder24.profiler = profiler26;
        retrofit.Server server28 = null;
        builder24.server = server28;
        java.util.concurrent.Executor executor30 = builder24.callbackExecutor;
        restAdapter10.httpExecutor = executor30;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler33 = restAdapter32.errorHandler;
        retrofit.Server server34 = null;
        restAdapter32.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.Profiler profiler38 = null;
        builder36.profiler = profiler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.Profiler profiler42 = null;
        builder40.profiler = profiler42;
        retrofit.Server server44 = null;
        builder40.server = server44;
        java.util.concurrent.Executor executor46 = builder40.callbackExecutor;
        builder36.callbackExecutor = executor46;
        restAdapter32.httpExecutor = executor46;
        restAdapter10.callbackExecutor = executor46;
        retrofit.Profiler profiler50 = null;
        restAdapter10.profiler = profiler50;
        retrofit.ErrorHandler errorHandler52 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log53 = restAdapter10.log;
        retrofit.client.Response response55 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response57 = restAdapter10.logAndReplaceResponse("hi!", response55, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(converter22);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNull(errorHandler52);
        org.junit.Assert.assertNull(log53);
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05051");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        retrofit.ErrorHandler errorHandler36 = null;
        restAdapter29.errorHandler = errorHandler36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel38;
        retrofit.RestAdapter.Log log40 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder41 = builder0.setLog(log40);
        retrofit.RestAdapter.Log log42 = builder0.log;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor46 = builder45.callbackExecutor;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.Profiler profiler49 = null;
        builder47.profiler = profiler49;
        retrofit.Server server51 = null;
        builder47.server = server51;
        java.util.concurrent.Executor executor53 = builder47.callbackExecutor;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.client.Client.Provider provider56 = builder54.clientProvider;
        builder47.clientProvider = provider56;
        java.util.concurrent.Executor executor58 = builder47.callbackExecutor;
        retrofit.RestAdapter.Log log59 = builder47.log;
        builder45.log = log59;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(log59);
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05052");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        retrofit.Server server4 = restAdapter0.server;
        retrofit.client.Client.Provider provider5 = restAdapter0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(logLevel6);
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05053");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.Server server37 = null;
        builder30.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.Profiler profiler41 = null;
        builder39.profiler = profiler41;
        retrofit.Server server43 = null;
        builder39.server = server43;
        java.util.concurrent.Executor executor45 = builder39.callbackExecutor;
        retrofit.converter.Converter converter46 = builder39.converter;
        builder30.converter = converter46;
        java.util.concurrent.Executor executor48 = builder30.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(converter46);
        org.junit.Assert.assertNull(executor48);
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05054");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.client.Client.Provider provider4 = builder3.clientProvider;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider6 = null;
        builder5.clientProvider = provider6;
        retrofit.converter.Converter converter8 = null;
        builder5.converter = converter8;
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Log log20 = null;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log20, logLevel21);
        retrofit.Profiler profiler23 = restAdapter22.profiler;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean25 = logLevel24.log();
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        restAdapter22.log = log27;
        builder11.log = log27;
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = null;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log38, logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder11.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider46 = null;
        builder45.clientProvider = provider46;
        java.util.concurrent.Executor executor48 = builder45.httpExecutor;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.Profiler profiler51 = null;
        builder49.profiler = profiler51;
        retrofit.Server server53 = null;
        builder49.server = server53;
        java.util.concurrent.Executor executor55 = builder49.callbackExecutor;
        builder45.httpExecutor = executor55;
        builder44.callbackExecutor = executor55;
        builder41.httpExecutor = executor55;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel68);
        retrofit.Profiler profiler70 = restAdapter69.profiler;
        retrofit.ErrorHandler errorHandler71 = restAdapter69.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter69.setLogLevel(logLevel72);
        retrofit.Server server74 = restAdapter69.server;
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.Builder builder76 = builder41.setLogLevel(logLevel75);
        retrofit.Server server77 = builder41.server;
        builder5.server = server77;
        builder3.server = server77;
        retrofit.Profiler profiler80 = null;
        builder3.profiler = profiler80;
        retrofit.client.Client.Provider provider82 = builder3.clientProvider;
        retrofit.client.Client client83 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder84 = builder3.setClient(client83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNull(errorHandler71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNull(provider82);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05055");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.Server server4 = restAdapter0.server;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean15 = logLevel14.log();
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter16.new RestHandler();
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        restAdapter16.logLevel = logLevel27;
        retrofit.converter.Converter converter31 = restAdapter16.converter;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter16.getLogLevel();
        restAdapter0.logLevel = logLevel32;
        retrofit.client.Client.Provider provider34 = restAdapter0.clientProvider;
        retrofit.Profiler profiler35 = null;
        restAdapter0.profiler = profiler35;
        retrofit.client.Client.Provider provider37 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(provider37);
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05056");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.ErrorHandler errorHandler33 = restAdapter31.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider37 = null;
        builder36.clientProvider = provider37;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.converter.Converter converter50 = restAdapter49.converter;
        retrofit.ErrorHandler errorHandler51 = restAdapter49.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter49.logLevel;
        builder36.logLevel = logLevel52;
        restAdapter31.setLogLevel(logLevel52);
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        restAdapter55.callbackExecutor = executor62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.Profiler profiler66 = null;
        builder64.profiler = profiler66;
        retrofit.Server server68 = null;
        builder64.server = server68;
        java.util.concurrent.Executor executor70 = builder64.callbackExecutor;
        retrofit.converter.Converter converter71 = builder64.converter;
        restAdapter55.converter = converter71;
        restAdapter31.converter = converter71;
        restAdapter10.converter = converter71;
        java.util.concurrent.Executor executor75 = restAdapter10.callbackExecutor;
        retrofit.ErrorHandler errorHandler76 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter10.logLevel;
        retrofit.Server server78 = null;
        retrofit.client.Client.Provider provider79 = null;
        java.util.concurrent.Executor executor80 = null;
        java.util.concurrent.Executor executor81 = null;
        retrofit.RequestInterceptor requestInterceptor82 = null;
        retrofit.converter.Converter converter83 = null;
        retrofit.Profiler profiler84 = null;
        retrofit.ErrorHandler errorHandler85 = null;
        retrofit.RestAdapter.Log log86 = null;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server78, provider79, executor80, executor81, requestInterceptor82, converter83, profiler84, errorHandler85, log86, logLevel87);
        retrofit.converter.Converter converter89 = restAdapter88.converter;
        retrofit.ErrorHandler errorHandler90 = restAdapter88.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter88.logLevel;
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter88.getLogLevel();
        restAdapter10.setLogLevel(logLevel92);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(converter71);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNull(errorHandler76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter89);
        org.junit.Assert.assertNull(errorHandler90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05057");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.converter.Converter converter25 = restAdapter24.converter;
        java.util.concurrent.Executor executor26 = restAdapter24.callbackExecutor;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.Profiler profiler46 = restAdapter45.profiler;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean48 = logLevel47.log();
        restAdapter45.logLevel = logLevel47;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        restAdapter45.log = log50;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log50, logLevel52);
        restAdapter24.log = log50;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter24.logLevel;
        restAdapter10.logLevel = logLevel55;
        retrofit.Profiler profiler57 = null;
        restAdapter10.profiler = profiler57;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05058");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server12 = restAdapter11.server;
        java.util.concurrent.Executor executor13 = restAdapter11.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        builder14.log = log30;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder14.setLogLevel(logLevel42);
        java.util.concurrent.Executor executor45 = null;
        builder44.callbackExecutor = executor45;
        retrofit.ErrorHandler errorHandler47 = null;
        builder44.errorHandler = errorHandler47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.Profiler profiler51 = null;
        builder49.profiler = profiler51;
        retrofit.Server server53 = null;
        builder49.server = server53;
        java.util.concurrent.Executor executor55 = builder49.callbackExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder56.clientProvider;
        builder49.clientProvider = provider58;
        builder44.clientProvider = provider58;
        retrofit.Server server61 = builder44.server;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider63 = null;
        builder62.clientProvider = provider63;
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.client.Client.Provider provider68 = builder66.clientProvider;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider71 = builder69.clientProvider;
        builder66.clientProvider = provider71;
        builder62.clientProvider = provider71;
        retrofit.RestAdapter.Builder builder74 = builder44.setClient(provider71);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.Profiler profiler77 = null;
        builder75.profiler = profiler77;
        retrofit.Server server79 = null;
        builder75.server = server79;
        java.util.concurrent.Executor executor81 = builder75.callbackExecutor;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.client.Client.Provider provider84 = builder82.clientProvider;
        builder75.clientProvider = provider84;
        retrofit.RestAdapter.Builder builder86 = builder44.setClient(provider84);
        restAdapter11.clientProvider = provider84;
        java.util.concurrent.Executor executor88 = restAdapter11.httpExecutor;
        retrofit.client.Client.Provider provider89 = restAdapter11.clientProvider;
        retrofit.RestAdapter.Log log90 = restAdapter11.log;
        retrofit.ErrorHandler errorHandler91 = restAdapter11.errorHandler;
        java.lang.Class<?> wildcardClass92 = restAdapter11.getClass();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(executor88);
        org.junit.Assert.assertNotNull(provider89);
        org.junit.Assert.assertNull(log90);
        org.junit.Assert.assertNull(errorHandler91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05059");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.converter.Converter converter33 = builder30.converter;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        builder34.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor38 = builder34.requestInterceptor;
        builder30.requestInterceptor = requestInterceptor38;
        retrofit.Server server40 = null;
        builder30.server = server40;
        java.util.concurrent.Executor executor42 = builder30.httpExecutor;
        retrofit.Profiler profiler43 = null;
        builder30.profiler = profiler43;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNull(executor42);
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05060");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler6 = restAdapter5.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter5.new RestHandler();
        retrofit.Profiler profiler8 = restAdapter5.profiler;
        retrofit.Server server9 = restAdapter5.server;
        retrofit.ErrorHandler errorHandler10 = restAdapter5.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter5.getLogLevel();
        retrofit.Profiler profiler12 = null;
        restAdapter5.profiler = profiler12;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log37;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log37, logLevel39);
        restAdapter5.log = log37;
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log37);
        retrofit.ErrorHandler errorHandler43 = builder42.errorHandler;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.Profiler profiler46 = null;
        builder44.profiler = profiler46;
        java.util.concurrent.Executor executor48 = builder44.callbackExecutor;
        builder42.httpExecutor = executor48;
        retrofit.RestAdapter.LogLevel logLevel50 = builder42.logLevel;
        retrofit.client.Client.Provider provider51 = builder42.clientProvider;
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider51);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05061");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor16 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter10.new RestHandler();
        retrofit.client.Response response19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response21 = restAdapter10.logAndReplaceResponse("", response19, 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor16);
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05062");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.Profiler profiler15 = null;
        restAdapter11.profiler = profiler15;
        retrofit.Profiler profiler17 = null;
        restAdapter11.profiler = profiler17;
        retrofit.Profiler profiler19 = null;
        restAdapter11.profiler = profiler19;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor23 = builder22.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder25 = builder22.setLogLevel(logLevel24);
        retrofit.RequestInterceptor requestInterceptor26 = builder22.requestInterceptor;
        retrofit.Profiler profiler27 = builder22.profiler;
        retrofit.Profiler profiler28 = builder22.profiler;
        retrofit.Server server29 = builder22.server;
        retrofit.RestAdapter.LogLevel logLevel30 = builder22.logLevel;
        restAdapter11.setLogLevel(logLevel30);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05063");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel37);
        builder0.log = log35;
        retrofit.Profiler profiler40 = builder0.profiler;
        java.util.concurrent.Executor executor41 = builder0.httpExecutor;
        java.util.concurrent.Executor executor42 = builder0.callbackExecutor;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel52);
        retrofit.converter.Converter converter54 = restAdapter53.converter;
        retrofit.ErrorHandler errorHandler55 = restAdapter53.errorHandler;
        retrofit.Profiler profiler56 = null;
        restAdapter53.profiler = profiler56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.client.Client.Provider provider60 = builder58.clientProvider;
        retrofit.ErrorHandler errorHandler61 = builder58.errorHandler;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        retrofit.ErrorHandler errorHandler65 = builder62.errorHandler;
        retrofit.RestAdapter.Builder builder66 = builder58.setErrorHandler(errorHandler65);
        restAdapter53.errorHandler = errorHandler65;
        retrofit.Server server68 = restAdapter53.server;
        retrofit.Profiler profiler69 = restAdapter53.profiler;
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter53.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter53.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder0.setLogLevel(logLevel71);
        retrofit.Profiler profiler73 = null;
        builder72.profiler = profiler73;
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(errorHandler55);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNull(requestInterceptor70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05064");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter12 = null;
        restAdapter11.converter = converter12;
        retrofit.RestAdapter.LogLevel logLevel14 = null;
        restAdapter11.setLogLevel(logLevel14);
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        retrofit.ErrorHandler errorHandler28 = restAdapter26.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.setLogLevel(logLevel29);
        restAdapter11.logLevel = logLevel29;
        retrofit.ErrorHandler errorHandler32 = restAdapter11.errorHandler;
        retrofit.RestAdapter.Log log33 = restAdapter11.log;
        java.util.concurrent.Executor executor34 = restAdapter11.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler32);
        org.junit.Assert.assertNull(log33);
        org.junit.Assert.assertNull(executor34);
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05065");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        restAdapter11.requestInterceptor = requestInterceptor26;
        retrofit.converter.Converter converter28 = restAdapter11.converter;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter11.new RestHandler();
        retrofit.ErrorHandler errorHandler30 = restAdapter11.errorHandler;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.Profiler profiler43 = restAdapter42.profiler;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean45 = logLevel44.log();
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        restAdapter42.log = log47;
        builder31.log = log47;
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.RestAdapter.Builder builder61 = builder31.setLogLevel(logLevel59);
        java.util.concurrent.Executor executor62 = null;
        builder61.callbackExecutor = executor62;
        retrofit.converter.Converter converter64 = builder61.converter;
        retrofit.Server server65 = null;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel74);
        retrofit.converter.Converter converter76 = restAdapter75.converter;
        retrofit.ErrorHandler errorHandler77 = restAdapter75.errorHandler;
        retrofit.Profiler profiler78 = null;
        restAdapter75.profiler = profiler78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.client.Client.Provider provider82 = builder80.clientProvider;
        retrofit.ErrorHandler errorHandler83 = builder80.errorHandler;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.client.Client.Provider provider86 = builder84.clientProvider;
        retrofit.ErrorHandler errorHandler87 = builder84.errorHandler;
        retrofit.RestAdapter.Builder builder88 = builder80.setErrorHandler(errorHandler87);
        restAdapter75.errorHandler = errorHandler87;
        builder61.errorHandler = errorHandler87;
        restAdapter11.errorHandler = errorHandler87;
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter11.logLevel;
        boolean boolean93 = logLevel92.log();
        boolean boolean94 = logLevel92.log();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter76);
        org.junit.Assert.assertNull(errorHandler77);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05066");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter12 = null;
        restAdapter11.converter = converter12;
        retrofit.Profiler profiler14 = restAdapter11.profiler;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.Profiler profiler18 = null;
        builder16.profiler = profiler18;
        retrofit.Server server20 = null;
        builder16.server = server20;
        java.util.concurrent.Executor executor22 = builder16.callbackExecutor;
        restAdapter15.callbackExecutor = executor22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.Profiler profiler26 = null;
        builder24.profiler = profiler26;
        retrofit.Server server28 = null;
        builder24.server = server28;
        java.util.concurrent.Executor executor30 = builder24.callbackExecutor;
        retrofit.converter.Converter converter31 = builder24.converter;
        restAdapter15.converter = converter31;
        restAdapter11.converter = converter31;
        retrofit.RestAdapter.Log log34 = null;
        restAdapter11.log = log34;
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter11.new RestHandler();
        java.util.concurrent.Executor executor37 = restAdapter11.httpExecutor;
        java.lang.Throwable throwable38 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable38, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNotNull(converter31);
        org.junit.Assert.assertNull(executor37);
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05067");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter11.logLevel;
        retrofit.Profiler profiler27 = null;
        restAdapter11.profiler = profiler27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider30 = null;
        builder29.clientProvider = provider30;
        retrofit.converter.Converter converter32 = null;
        builder29.converter = converter32;
        retrofit.client.Client.Provider provider34 = builder29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.Profiler profiler47 = restAdapter46.profiler;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean49 = logLevel48.log();
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        restAdapter46.log = log51;
        builder35.log = log51;
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = null;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder35.setLogLevel(logLevel63);
        java.util.concurrent.Executor executor66 = null;
        builder65.callbackExecutor = executor66;
        retrofit.converter.Converter converter68 = builder65.converter;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider70 = null;
        builder69.clientProvider = provider70;
        builder69.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor73 = builder69.requestInterceptor;
        builder65.requestInterceptor = requestInterceptor73;
        retrofit.RestAdapter.Builder builder75 = builder29.setRequestInterceptor(requestInterceptor73);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.Profiler profiler78 = null;
        builder76.profiler = profiler78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.Profiler profiler82 = null;
        builder80.profiler = profiler82;
        retrofit.Server server84 = null;
        builder80.server = server84;
        java.util.concurrent.Executor executor86 = builder80.callbackExecutor;
        builder76.callbackExecutor = executor86;
        builder75.httpExecutor = executor86;
        restAdapter11.httpExecutor = executor86;
        retrofit.client.Client.Provider provider90 = restAdapter11.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel91 = null;
        restAdapter11.logLevel = logLevel91;
        java.util.concurrent.Executor executor93 = restAdapter11.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor94 = restAdapter11.requestInterceptor;
        retrofit.Profiler profiler95 = restAdapter11.profiler;
        retrofit.converter.Converter converter96 = null;
        restAdapter11.converter = converter96;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNull(provider90);
        org.junit.Assert.assertNotNull(executor93);
        org.junit.Assert.assertNull(requestInterceptor94);
        org.junit.Assert.assertNull(profiler95);
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05068");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.ErrorHandler errorHandler7 = builder4.errorHandler;
        retrofit.RestAdapter.Builder builder8 = builder0.setErrorHandler(errorHandler7);
        retrofit.Server server9 = builder0.server;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        retrofit.converter.Converter converter17 = builder10.converter;
        retrofit.RestAdapter.Builder builder18 = builder0.setConverter(converter17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor20 = builder19.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder22 = builder19.setLogLevel(logLevel21);
        retrofit.RequestInterceptor requestInterceptor23 = builder19.requestInterceptor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.Profiler profiler36 = restAdapter35.profiler;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean38 = logLevel37.log();
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        restAdapter35.log = log40;
        builder24.log = log40;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel52);
        retrofit.RestAdapter.Builder builder54 = builder24.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider59 = null;
        builder58.clientProvider = provider59;
        java.util.concurrent.Executor executor61 = builder58.httpExecutor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.Profiler profiler64 = null;
        builder62.profiler = profiler64;
        retrofit.Server server66 = null;
        builder62.server = server66;
        java.util.concurrent.Executor executor68 = builder62.callbackExecutor;
        builder58.httpExecutor = executor68;
        builder57.callbackExecutor = executor68;
        builder54.httpExecutor = executor68;
        builder19.httpExecutor = executor68;
        builder0.httpExecutor = executor68;
        retrofit.client.Client.Provider provider74 = builder0.clientProvider;
        retrofit.converter.Converter converter75 = builder0.converter;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(converter17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(requestInterceptor23);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(converter75);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05069");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean19 = logLevel18.log();
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log21;
        builder5.log = log21;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder5.setLogLevel(logLevel33);
        java.util.concurrent.Executor executor36 = null;
        builder35.callbackExecutor = executor36;
        retrofit.ErrorHandler errorHandler38 = null;
        builder35.errorHandler = errorHandler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.Profiler profiler42 = null;
        builder40.profiler = profiler42;
        retrofit.Server server44 = null;
        builder40.server = server44;
        java.util.concurrent.Executor executor46 = builder40.callbackExecutor;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.client.Client.Provider provider49 = builder47.clientProvider;
        builder40.clientProvider = provider49;
        builder35.clientProvider = provider49;
        java.util.concurrent.Executor executor52 = builder35.httpExecutor;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder53.clientProvider;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder56.clientProvider;
        builder53.clientProvider = provider58;
        retrofit.RestAdapter.Builder builder60 = builder35.setClient(provider58);
        builder4.clientProvider = provider58;
        retrofit.Server server62 = builder4.server;
        retrofit.client.Client.Provider provider63 = builder4.clientProvider;
        retrofit.client.Client client64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder4.setClient(client64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNotNull(provider49);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(provider63);
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05070");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        retrofit.Server server15 = null;
        restAdapter10.server = server15;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.ErrorHandler errorHandler29 = restAdapter27.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.setLogLevel(logLevel30);
        retrofit.Server server32 = restAdapter27.server;
        retrofit.Server server33 = restAdapter27.server;
        retrofit.converter.Converter converter34 = restAdapter27.converter;
        java.util.concurrent.Executor executor35 = restAdapter27.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter27.getLogLevel();
        restAdapter10.logLevel = logLevel36;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter10.new RestHandler();
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList46, typedOutput52);
        java.util.List<retrofit.client.Header> headerList54 = request53.getHeaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request55 = restAdapter10.logAndReplaceRequest(request53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(headerList54);
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05071");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.converter.Converter converter48 = restAdapter47.converter;
        retrofit.ErrorHandler errorHandler49 = restAdapter47.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter47.logLevel;
        builder34.logLevel = logLevel50;
        restAdapter29.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder0.setLogLevel(logLevel50);
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider56 = null;
        builder55.clientProvider = provider56;
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.client.Client.Provider provider61 = builder59.clientProvider;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        builder59.clientProvider = provider64;
        builder55.clientProvider = provider64;
        java.util.concurrent.Executor executor67 = builder55.httpExecutor;
        retrofit.converter.Converter converter68 = null;
        builder55.converter = converter68;
        retrofit.Server server70 = builder55.server;
        retrofit.RestAdapter.Log log71 = builder55.log;
        retrofit.client.Client.Provider provider72 = builder55.clientProvider;
        retrofit.RestAdapter.Builder builder73 = builder53.setClient(provider72);
        builder53.ensureSaneDefaults();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(errorHandler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider61);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05072");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean29 = logLevel28.log();
        restAdapter26.logLevel = logLevel28;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        restAdapter26.log = log31;
        builder15.log = log31;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.RestAdapter.Builder builder45 = builder15.setLogLevel(logLevel43);
        java.util.concurrent.Executor executor46 = null;
        builder45.callbackExecutor = executor46;
        retrofit.ErrorHandler errorHandler48 = null;
        builder45.errorHandler = errorHandler48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.Profiler profiler52 = null;
        builder50.profiler = profiler52;
        retrofit.Server server54 = null;
        builder50.server = server54;
        java.util.concurrent.Executor executor56 = builder50.callbackExecutor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.client.Client.Provider provider59 = builder57.clientProvider;
        builder50.clientProvider = provider59;
        builder45.clientProvider = provider59;
        restAdapter10.clientProvider = provider59;
        retrofit.Profiler profiler63 = null;
        restAdapter10.profiler = profiler63;
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter10.getLogLevel();
        retrofit.converter.Converter converter67 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(provider59);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter67);
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05073");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.Server server3 = null;
        retrofit.client.Client.Provider provider4 = null;
        java.util.concurrent.Executor executor5 = null;
        java.util.concurrent.Executor executor6 = null;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        retrofit.converter.Converter converter8 = null;
        retrofit.Profiler profiler9 = null;
        retrofit.ErrorHandler errorHandler10 = null;
        retrofit.RestAdapter.Log log11 = null;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server3, provider4, executor5, executor6, requestInterceptor7, converter8, profiler9, errorHandler10, log11, logLevel12);
        retrofit.converter.Converter converter14 = restAdapter13.converter;
        retrofit.ErrorHandler errorHandler15 = restAdapter13.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter13.logLevel;
        builder0.logLevel = logLevel16;
        retrofit.converter.Converter converter18 = builder0.converter;
        retrofit.client.Client.Provider provider19 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel20 = builder0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel21 = null;
        builder0.logLevel = logLevel21;
        java.util.concurrent.Executor executor23 = builder0.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor23);
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05074");
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.converter.Converter converter17 = restAdapter16.converter;
        retrofit.Server server18 = restAdapter16.server;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.Profiler profiler38 = restAdapter37.profiler;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        restAdapter37.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log42, logLevel44);
        restAdapter16.log = log42;
        java.util.concurrent.Executor executor47 = restAdapter16.callbackExecutor;
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        java.lang.String str55 = request54.getMethod();
        java.lang.String str56 = request54.getMethod();
        java.lang.String str57 = request54.getUrl();
        java.util.List<retrofit.client.Header> headerList58 = request54.getHeaders();
        java.lang.String str59 = request54.getMethod();
        java.util.List<retrofit.client.Header> headerList60 = request54.getHeaders();
        retrofit.client.Request request61 = restAdapter16.logAndReplaceRequest(request54);
        java.util.List<retrofit.client.Header> headerList62 = request61.getHeaders();
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        retrofit.mime.TypedOutput typedOutput65 = null;
        retrofit.client.Request request66 = new retrofit.client.Request("hi!", "", headerList62, typedOutput65);
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("hi!", "", headerList62, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(headerList60);
        org.junit.Assert.assertNotNull(request61);
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05075");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.lang.String str8 = request6.getMethod();
        java.lang.String str9 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        java.lang.String str11 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        java.lang.String str14 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        java.lang.String str16 = request6.getMethod();
        java.lang.String str17 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput18 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput19 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNull(typedOutput19);
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05076");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider22 = null;
        builder21.clientProvider = provider22;
        retrofit.Server server24 = null;
        builder21.server = server24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.Profiler profiler28 = null;
        builder26.profiler = profiler28;
        retrofit.Server server30 = null;
        builder26.server = server30;
        java.util.concurrent.Executor executor32 = builder26.callbackExecutor;
        builder21.httpExecutor = executor32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.Server server38 = null;
        builder34.server = server38;
        retrofit.client.Client.Provider provider40 = builder34.clientProvider;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.Profiler profiler53 = restAdapter52.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean55 = logLevel54.log();
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        restAdapter52.log = log57;
        builder41.log = log57;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel69);
        retrofit.RestAdapter.Builder builder71 = builder41.setLogLevel(logLevel69);
        java.util.concurrent.Executor executor72 = null;
        builder71.callbackExecutor = executor72;
        retrofit.converter.Converter converter74 = builder71.converter;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider76 = null;
        builder75.clientProvider = provider76;
        builder75.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor79 = builder75.requestInterceptor;
        builder71.requestInterceptor = requestInterceptor79;
        retrofit.Server server81 = null;
        builder71.server = server81;
        retrofit.RequestInterceptor requestInterceptor83 = builder71.requestInterceptor;
        builder34.requestInterceptor = requestInterceptor83;
        builder21.requestInterceptor = requestInterceptor83;
        restAdapter10.requestInterceptor = requestInterceptor83;
        java.util.concurrent.Executor executor87 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter10.getLogLevel();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNull(executor87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05077");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.converter.Converter converter16 = restAdapter10.converter;
        retrofit.RestAdapter.Log log17 = restAdapter10.log;
        retrofit.ErrorHandler errorHandler18 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.Profiler profiler21 = null;
        builder19.profiler = profiler21;
        retrofit.Server server23 = null;
        builder19.server = server23;
        java.util.concurrent.Executor executor25 = builder19.callbackExecutor;
        retrofit.converter.Converter converter26 = builder19.converter;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = null;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel37);
        retrofit.Profiler profiler39 = restAdapter38.profiler;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean41 = logLevel40.log();
        restAdapter38.logLevel = logLevel40;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        restAdapter38.log = log43;
        builder27.log = log43;
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.Profiler profiler57 = restAdapter56.profiler;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean59 = logLevel58.log();
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        restAdapter56.log = log61;
        retrofit.ErrorHandler errorHandler63 = null;
        restAdapter56.errorHandler = errorHandler63;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter56.logLevel = logLevel65;
        retrofit.RestAdapter.Log log67 = restAdapter56.log;
        retrofit.RestAdapter.Builder builder68 = builder27.setLog(log67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.Profiler profiler71 = null;
        builder69.profiler = profiler71;
        retrofit.Server server73 = null;
        builder69.server = server73;
        retrofit.client.Client.Provider provider75 = builder69.clientProvider;
        builder27.clientProvider = provider75;
        retrofit.RestAdapter.Builder builder77 = builder19.setClient(provider75);
        restAdapter10.clientProvider = provider75;
        retrofit.client.Response response80 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response82 = restAdapter10.logAndReplaceResponse("hi!", response80, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(provider75);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05078");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel38);
        restAdapter10.log = log36;
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter10.logLevel;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider43 = null;
        builder42.clientProvider = provider43;
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        builder46.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor50 = builder46.requestInterceptor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        java.util.concurrent.Executor executor55 = builder52.httpExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        builder52.httpExecutor = executor62;
        builder51.callbackExecutor = executor62;
        builder46.callbackExecutor = executor62;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.Profiler profiler68 = null;
        builder66.profiler = profiler68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.Profiler profiler72 = null;
        builder70.profiler = profiler72;
        retrofit.Server server74 = null;
        builder70.server = server74;
        java.util.concurrent.Executor executor76 = builder70.callbackExecutor;
        builder66.callbackExecutor = executor76;
        retrofit.RestAdapter.Builder builder78 = builder42.setExecutors(executor62, executor76);
        restAdapter10.httpExecutor = executor62;
        retrofit.Profiler profiler80 = null;
        restAdapter10.profiler = profiler80;
        java.util.concurrent.Executor executor82 = null;
        restAdapter10.httpExecutor = executor82;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter10.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05079");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder35.clientProvider;
        retrofit.RestAdapter.Builder builder38 = builder30.setClient(provider37);
        retrofit.Server server39 = null;
        builder30.server = server39;
        java.util.concurrent.Executor executor41 = builder30.httpExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        retrofit.client.Client.Provider provider48 = builder42.clientProvider;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.Profiler profiler61 = restAdapter60.profiler;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean63 = logLevel62.log();
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        restAdapter60.log = log65;
        builder49.log = log65;
        log65.log("");
        retrofit.RestAdapter.Builder builder70 = builder42.setLog(log65);
        builder30.log = log65;
        retrofit.RequestInterceptor requestInterceptor72 = builder30.requestInterceptor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter73 = builder30.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(requestInterceptor72);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05080");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        retrofit.ErrorHandler errorHandler36 = null;
        restAdapter29.errorHandler = errorHandler36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel38;
        retrofit.RestAdapter.Log log40 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder41 = builder0.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        boolean boolean43 = logLevel42.log();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05081");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.Profiler profiler16 = restAdapter15.profiler;
        retrofit.ErrorHandler errorHandler17 = restAdapter15.errorHandler;
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        restAdapter15.log = log18;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter15.logLevel = logLevel20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        restAdapter15.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = restAdapter15.clientProvider;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.Profiler profiler28 = null;
        builder26.profiler = profiler28;
        retrofit.Server server30 = null;
        builder26.server = server30;
        java.util.concurrent.Executor executor32 = builder26.callbackExecutor;
        retrofit.converter.Converter converter33 = builder26.converter;
        retrofit.client.Client.Provider provider34 = builder26.clientProvider;
        restAdapter15.clientProvider = provider34;
        retrofit.RestAdapter.Builder builder36 = builder0.setClient(provider34);
        retrofit.RestAdapter.Log log37 = builder36.log;
        java.util.concurrent.Executor executor38 = builder36.callbackExecutor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.client.Client.Provider provider41 = builder39.clientProvider;
        builder36.clientProvider = provider41;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter43 = builder36.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(provider41);
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05082");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.LogLevel logLevel35 = builder30.logLevel;
        java.util.concurrent.Executor executor36 = builder30.callbackExecutor;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        restAdapter37.log = log38;
        log38.log("");
        builder30.log = log38;
        retrofit.Server server43 = builder30.server;
        retrofit.Profiler profiler44 = builder30.profiler;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertNull(profiler44);
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05083");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.Profiler profiler16 = restAdapter15.profiler;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        restAdapter15.log = log20;
        builder4.log = log20;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder4.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = null;
        builder38.clientProvider = provider39;
        java.util.concurrent.Executor executor41 = builder38.httpExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        builder38.httpExecutor = executor48;
        builder37.callbackExecutor = executor48;
        builder34.httpExecutor = executor48;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.Profiler profiler63 = restAdapter62.profiler;
        retrofit.ErrorHandler errorHandler64 = restAdapter62.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.setLogLevel(logLevel65);
        retrofit.Server server67 = restAdapter62.server;
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.Builder builder69 = builder34.setLogLevel(logLevel68);
        retrofit.Server server70 = builder34.server;
        retrofit.RestAdapter.Builder builder71 = builder0.setServer(server70);
        retrofit.RestAdapter.Log log72 = builder0.log;
        retrofit.RestAdapter restAdapter73 = builder0.build();
        java.util.concurrent.Executor executor74 = restAdapter73.httpExecutor;
        java.util.concurrent.Executor executor75 = restAdapter73.httpExecutor;
        retrofit.RestAdapter.Log log76 = restAdapter73.log;
        retrofit.Profiler profiler77 = null;
        restAdapter73.profiler = profiler77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.Profiler profiler81 = null;
        builder79.profiler = profiler81;
        retrofit.Server server83 = null;
        builder79.server = server83;
        java.util.concurrent.Executor executor85 = builder79.callbackExecutor;
        retrofit.converter.Converter converter86 = builder79.converter;
        retrofit.client.Client.Provider provider87 = builder79.clientProvider;
        retrofit.Profiler profiler88 = null;
        builder79.profiler = profiler88;
        retrofit.client.Client.Provider provider90 = builder79.clientProvider;
        retrofit.ErrorHandler errorHandler91 = builder79.errorHandler;
        restAdapter73.errorHandler = errorHandler91;
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNull(errorHandler64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(server70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(converter86);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(provider90);
        org.junit.Assert.assertNotNull(errorHandler91);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05084");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.Profiler profiler19 = restAdapter18.profiler;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean21 = logLevel20.log();
        restAdapter18.logLevel = logLevel20;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        restAdapter18.log = log23;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel25);
        java.util.concurrent.Executor executor27 = restAdapter26.httpExecutor;
        java.util.concurrent.Executor executor28 = restAdapter26.httpExecutor;
        retrofit.ErrorHandler errorHandler29 = restAdapter26.errorHandler;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.Profiler profiler42 = restAdapter41.profiler;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        restAdapter41.log = log46;
        builder30.log = log46;
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = null;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel58);
        retrofit.RestAdapter.Builder builder60 = builder30.setLogLevel(logLevel58);
        java.util.concurrent.Executor executor61 = null;
        builder60.callbackExecutor = executor61;
        retrofit.ErrorHandler errorHandler63 = null;
        builder60.errorHandler = errorHandler63;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        builder60.requestInterceptor = requestInterceptor65;
        java.util.concurrent.Executor executor67 = builder60.callbackExecutor;
        retrofit.RestAdapter.Log log68 = builder60.log;
        restAdapter26.log = log68;
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter26.new RestHandler();
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertNotNull(log68);
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05085");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel19;
        retrofit.Profiler profiler21 = restAdapter10.profiler;
        retrofit.Server server22 = null;
        restAdapter10.server = server22;
        retrofit.RestAdapter.Log log24 = restAdapter10.log;
        retrofit.client.Header[] headerArray29 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList30 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList30, headerArray29);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList30, typedOutput32);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList30, typedOutput34);
        retrofit.client.Request request36 = restAdapter10.logAndReplaceRequest(request35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = null;
        builder67.callbackExecutor = executor68;
        retrofit.ErrorHandler errorHandler70 = null;
        builder67.errorHandler = errorHandler70;
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Log log73 = builder67.log;
        restAdapter10.log = log73;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(headerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log73);
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05086");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        retrofit.Server server15 = null;
        restAdapter10.server = server15;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.ErrorHandler errorHandler29 = restAdapter27.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.setLogLevel(logLevel30);
        retrofit.Server server32 = restAdapter27.server;
        retrofit.Server server33 = restAdapter27.server;
        retrofit.converter.Converter converter34 = restAdapter27.converter;
        java.util.concurrent.Executor executor35 = restAdapter27.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter27.getLogLevel();
        restAdapter10.logLevel = logLevel36;
        retrofit.client.Client.Provider provider38 = restAdapter10.clientProvider;
        retrofit.client.Client.Provider provider39 = restAdapter10.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter10.logLevel;
        java.lang.Throwable throwable41 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable41, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05087");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.Server server17 = restAdapter10.server;
        retrofit.Profiler profiler18 = null;
        restAdapter10.profiler = profiler18;
        java.util.concurrent.Executor executor20 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider21 = restAdapter10.clientProvider;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.Profiler profiler34 = restAdapter33.profiler;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean36 = logLevel35.log();
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        restAdapter33.log = log38;
        builder22.log = log38;
        retrofit.converter.Converter converter41 = builder22.converter;
        retrofit.RestAdapter.Log log42 = builder22.log;
        restAdapter10.log = log42;
        retrofit.converter.Converter converter44 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(converter44);
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05088");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.converter.Converter converter15 = restAdapter11.converter;
        retrofit.Profiler profiler16 = restAdapter11.profiler;
        retrofit.client.Client.Provider provider17 = restAdapter11.clientProvider;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.Profiler profiler20 = null;
        builder18.profiler = profiler20;
        retrofit.Server server22 = null;
        builder18.server = server22;
        retrofit.client.Client.Provider provider24 = builder18.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = null;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel35);
        retrofit.Profiler profiler37 = restAdapter36.profiler;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean39 = logLevel38.log();
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        restAdapter36.log = log41;
        builder25.log = log41;
        log41.log("");
        retrofit.RestAdapter.Builder builder46 = builder18.setLog(log41);
        restAdapter11.log = log41;
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter11.new RestHandler();
        retrofit.client.Client.Provider provider49 = restAdapter11.clientProvider;
        java.lang.Throwable throwable50 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable50, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(provider49);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05089");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider8 = null;
        builder7.clientProvider = provider8;
        java.util.concurrent.Executor executor10 = builder7.httpExecutor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.Profiler profiler13 = null;
        builder11.profiler = profiler13;
        retrofit.Server server15 = null;
        builder11.server = server15;
        java.util.concurrent.Executor executor17 = builder11.callbackExecutor;
        builder7.httpExecutor = executor17;
        retrofit.RestAdapter.LogLevel logLevel19 = builder7.logLevel;
        builder0.logLevel = logLevel19;
        retrofit.Server server21 = builder0.server;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder23 = builder0.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server21);
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05090");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor7 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel18);
        retrofit.Profiler profiler20 = restAdapter19.profiler;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean22 = logLevel21.log();
        restAdapter19.logLevel = logLevel21;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        restAdapter19.log = log24;
        builder8.log = log24;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder8.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor39 = null;
        builder38.callbackExecutor = executor39;
        retrofit.ErrorHandler errorHandler41 = null;
        builder38.errorHandler = errorHandler41;
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Log log44 = builder38.log;
        retrofit.client.Client.Provider provider45 = builder38.clientProvider;
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.RestAdapter.Log log57 = restAdapter56.log;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.Server server66 = null;
        retrofit.client.Client.Provider provider67 = null;
        java.util.concurrent.Executor executor68 = null;
        java.util.concurrent.Executor executor69 = null;
        retrofit.RequestInterceptor requestInterceptor70 = null;
        retrofit.converter.Converter converter71 = null;
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Log log74 = null;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server66, provider67, executor68, executor69, requestInterceptor70, converter71, profiler72, errorHandler73, log74, logLevel75);
        retrofit.Profiler profiler77 = restAdapter76.profiler;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean79 = logLevel78.log();
        restAdapter76.logLevel = logLevel78;
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        restAdapter76.log = log81;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log81, logLevel83);
        restAdapter56.log = log81;
        log81.log("");
        builder38.log = log81;
        builder0.log = log81;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder0.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05091");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.ErrorHandler errorHandler7 = builder4.errorHandler;
        retrofit.RestAdapter.Builder builder8 = builder0.setErrorHandler(errorHandler7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("hi!");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.Profiler profiler13 = null;
        builder11.profiler = profiler13;
        java.util.concurrent.Executor executor15 = builder11.callbackExecutor;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean30 = logLevel29.log();
        restAdapter27.logLevel = logLevel29;
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        restAdapter27.log = log32;
        builder16.log = log32;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder16.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.client.Client.Provider provider49 = builder47.clientProvider;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.client.Client.Provider provider52 = builder50.clientProvider;
        builder47.clientProvider = provider52;
        retrofit.RestAdapter.Builder builder54 = builder16.setClient(provider52);
        retrofit.RestAdapter.LogLevel logLevel55 = builder16.logLevel;
        builder11.logLevel = logLevel55;
        builder8.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel68);
        retrofit.Profiler profiler70 = restAdapter69.profiler;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean72 = logLevel71.log();
        restAdapter69.logLevel = logLevel71;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        restAdapter69.log = log74;
        builder58.log = log74;
        retrofit.Server server77 = null;
        retrofit.client.Client.Provider provider78 = null;
        java.util.concurrent.Executor executor79 = null;
        java.util.concurrent.Executor executor80 = null;
        retrofit.RequestInterceptor requestInterceptor81 = null;
        retrofit.converter.Converter converter82 = null;
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Log log85 = null;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server77, provider78, executor79, executor80, requestInterceptor81, converter82, profiler83, errorHandler84, log85, logLevel86);
        retrofit.RestAdapter.Builder builder88 = builder58.setLogLevel(logLevel86);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("hi!");
        retrofit.RestAdapter.Log log91 = builder90.log;
        retrofit.RequestInterceptor requestInterceptor92 = builder90.requestInterceptor;
        retrofit.Server server93 = builder90.server;
        retrofit.RestAdapter.Log log94 = builder90.log;
        retrofit.RestAdapter.Builder builder95 = builder8.setLog(log94);
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(provider49);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(log94);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05092");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Server server12 = restAdapter10.server;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel38);
        restAdapter10.log = log36;
        java.util.concurrent.Executor executor41 = restAdapter10.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor42 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter10.new RestHandler();
        retrofit.converter.Converter converter44 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNull(requestInterceptor42);
        org.junit.Assert.assertNull(converter44);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05093");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Log log20 = null;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log20, logLevel21);
        retrofit.converter.Converter converter23 = restAdapter22.converter;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.Profiler profiler35 = restAdapter34.profiler;
        retrofit.ErrorHandler errorHandler36 = restAdapter34.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        retrofit.Server server42 = null;
        builder39.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.Profiler profiler46 = null;
        builder44.profiler = profiler46;
        retrofit.Server server48 = null;
        builder44.server = server48;
        java.util.concurrent.Executor executor50 = builder44.callbackExecutor;
        builder39.httpExecutor = executor50;
        restAdapter34.httpExecutor = executor50;
        restAdapter22.callbackExecutor = executor50;
        restAdapter10.httpExecutor = executor50;
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter10.new RestHandler();
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.client.Client.Provider provider67 = null;
        restAdapter66.clientProvider = provider67;
        java.util.concurrent.Executor executor69 = restAdapter66.callbackExecutor;
        retrofit.client.Client.Provider provider70 = restAdapter66.clientProvider;
        retrofit.ErrorHandler errorHandler71 = restAdapter66.errorHandler;
        retrofit.Profiler profiler72 = null;
        restAdapter66.profiler = profiler72;
        java.lang.reflect.Method method74 = null;
        java.lang.Object[] objArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = restHandler55.invoke((java.lang.Object) restAdapter66, method74, objArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(errorHandler71);
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05094");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.Profiler profiler42 = restAdapter41.profiler;
        retrofit.ErrorHandler errorHandler43 = restAdapter41.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.setLogLevel(logLevel44);
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.Profiler profiler57 = restAdapter56.profiler;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean59 = logLevel58.log();
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        restAdapter56.log = log61;
        restAdapter41.log = log61;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.Profiler profiler67 = null;
        builder65.profiler = profiler67;
        retrofit.Server server69 = null;
        builder65.server = server69;
        java.util.concurrent.Executor executor71 = builder65.callbackExecutor;
        restAdapter64.callbackExecutor = executor71;
        restAdapter41.httpExecutor = executor71;
        builder0.httpExecutor = executor71;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider76 = null;
        builder75.clientProvider = provider76;
        builder75.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor79 = builder75.requestInterceptor;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider82 = null;
        builder81.clientProvider = provider82;
        java.util.concurrent.Executor executor84 = builder81.httpExecutor;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        builder85.ensureSaneDefaults();
        retrofit.Profiler profiler87 = null;
        builder85.profiler = profiler87;
        retrofit.Server server89 = null;
        builder85.server = server89;
        java.util.concurrent.Executor executor91 = builder85.callbackExecutor;
        builder81.httpExecutor = executor91;
        builder80.callbackExecutor = executor91;
        builder75.callbackExecutor = executor91;
        retrofit.RequestInterceptor requestInterceptor95 = builder75.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor95;
        retrofit.Profiler profiler97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder0.setProfiler(profiler97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNull(errorHandler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNull(executor84);
        org.junit.Assert.assertNotNull(executor91);
        org.junit.Assert.assertNotNull(requestInterceptor95);
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05095");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter11.new RestHandler();
        java.util.concurrent.Executor executor27 = restAdapter11.callbackExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.Server server32 = null;
        builder28.server = server32;
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        retrofit.converter.Converter converter35 = builder28.converter;
        restAdapter11.converter = converter35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider38 = null;
        builder37.clientProvider = provider38;
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.client.Client.Provider provider43 = builder41.clientProvider;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.client.Client.Provider provider46 = builder44.clientProvider;
        builder41.clientProvider = provider46;
        builder37.clientProvider = provider46;
        java.util.concurrent.Executor executor49 = builder37.httpExecutor;
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider52 = null;
        builder51.clientProvider = provider52;
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = builder55.clientProvider;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.client.Client.Provider provider60 = builder58.clientProvider;
        builder55.clientProvider = provider60;
        builder51.clientProvider = provider60;
        java.util.concurrent.Executor executor63 = builder51.httpExecutor;
        builder37.httpExecutor = executor63;
        restAdapter11.httpExecutor = executor63;
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter11.getLogLevel();
        retrofit.client.Client.Provider provider67 = restAdapter11.clientProvider;
        java.util.concurrent.Executor executor68 = restAdapter11.httpExecutor;
        retrofit.ErrorHandler errorHandler69 = restAdapter11.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(converter35);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNull(errorHandler69);
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05096");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.client.Client.Provider provider33 = builder31.clientProvider;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.client.Client.Provider provider36 = builder34.clientProvider;
        builder31.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = builder0.setClient(provider36);
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.Profiler profiler50 = restAdapter49.profiler;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean52 = logLevel51.log();
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.Builder builder55 = builder38.setLogLevel(logLevel54);
        retrofit.converter.Converter converter56 = builder38.converter;
        retrofit.client.Client.Provider provider57 = builder38.clientProvider;
        retrofit.converter.Converter converter58 = builder38.converter;
        java.util.concurrent.Executor executor59 = builder38.httpExecutor;
        retrofit.Profiler profiler60 = null;
        builder38.profiler = profiler60;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNull(converter58);
        org.junit.Assert.assertNull(executor59);
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05097");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter12 = null;
        restAdapter11.converter = converter12;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter11.setLogLevel(logLevel14);
        retrofit.Server server16 = null;
        restAdapter11.server = server16;
        retrofit.Server server18 = restAdapter11.server;
        retrofit.Server server19 = restAdapter11.server;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.ErrorHandler errorHandler32 = restAdapter30.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter30.setLogLevel(logLevel33);
        retrofit.Server server35 = restAdapter30.server;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.Log log37 = restAdapter30.log;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter48.getLogLevel();
        restAdapter30.setLogLevel(logLevel53);
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter30.logLevel;
        restAdapter11.logLevel = logLevel55;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter11.new RestHandler();
        retrofit.converter.Converter converter59 = restAdapter11.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNull(errorHandler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter59);
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05098");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean41 = logLevel40.log();
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log44 = null;
        restAdapter42.log = log44;
        retrofit.Profiler profiler46 = null;
        restAdapter42.profiler = profiler46;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter42.requestInterceptor;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.Profiler profiler61 = restAdapter60.profiler;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean63 = logLevel62.log();
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        restAdapter60.log = log65;
        builder49.log = log65;
        retrofit.Server server68 = null;
        retrofit.client.Client.Provider provider69 = null;
        java.util.concurrent.Executor executor70 = null;
        java.util.concurrent.Executor executor71 = null;
        retrofit.RequestInterceptor requestInterceptor72 = null;
        retrofit.converter.Converter converter73 = null;
        retrofit.Profiler profiler74 = null;
        retrofit.ErrorHandler errorHandler75 = null;
        retrofit.RestAdapter.Log log76 = null;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server68, provider69, executor70, executor71, requestInterceptor72, converter73, profiler74, errorHandler75, log76, logLevel77);
        retrofit.RestAdapter.Builder builder79 = builder49.setLogLevel(logLevel77);
        java.util.concurrent.Executor executor80 = null;
        builder79.callbackExecutor = executor80;
        retrofit.converter.Converter converter82 = builder79.converter;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider84 = null;
        builder83.clientProvider = provider84;
        builder83.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor87 = builder83.requestInterceptor;
        builder79.requestInterceptor = requestInterceptor87;
        restAdapter42.requestInterceptor = requestInterceptor87;
        retrofit.RestAdapter.Builder builder90 = builder0.setRequestInterceptor(requestInterceptor87);
        retrofit.RestAdapter.Builder builder92 = builder90.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor93 = builder92.requestInterceptor;
        java.util.concurrent.Executor executor94 = builder92.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor95 = builder92.requestInterceptor;
        retrofit.Profiler profiler96 = null;
        builder92.profiler = profiler96;
        java.util.concurrent.Executor executor98 = builder92.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(requestInterceptor48);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(converter82);
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(requestInterceptor93);
        org.junit.Assert.assertNull(executor94);
        org.junit.Assert.assertNotNull(requestInterceptor95);
        org.junit.Assert.assertNull(executor98);
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05099");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.Profiler profiler25 = restAdapter24.profiler;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        restAdapter24.log = log29;
        builder13.log = log29;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.RestAdapter.Builder builder43 = builder13.setLogLevel(logLevel41);
        java.util.concurrent.Executor executor44 = null;
        builder43.callbackExecutor = executor44;
        retrofit.ErrorHandler errorHandler46 = null;
        builder43.errorHandler = errorHandler46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder48.clientProvider;
        retrofit.RestAdapter.Builder builder51 = builder43.setClient(provider50);
        retrofit.Server server52 = null;
        builder43.server = server52;
        retrofit.RequestInterceptor requestInterceptor54 = builder43.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel55 = builder43.logLevel;
        restAdapter10.setLogLevel(logLevel55);
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor58 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter10.new RestHandler();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(requestInterceptor54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor58);
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05100");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.Profiler profiler16 = restAdapter15.profiler;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        restAdapter15.log = log20;
        builder4.log = log20;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder4.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = null;
        builder38.clientProvider = provider39;
        java.util.concurrent.Executor executor41 = builder38.httpExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        builder38.httpExecutor = executor48;
        builder37.callbackExecutor = executor48;
        builder34.httpExecutor = executor48;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.Profiler profiler63 = restAdapter62.profiler;
        retrofit.ErrorHandler errorHandler64 = restAdapter62.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.setLogLevel(logLevel65);
        retrofit.Server server67 = restAdapter62.server;
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.Builder builder69 = builder34.setLogLevel(logLevel68);
        retrofit.Server server70 = builder34.server;
        retrofit.RestAdapter.Builder builder71 = builder0.setServer(server70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        retrofit.ErrorHandler errorHandler75 = builder72.errorHandler;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.client.Client.Provider provider78 = builder76.clientProvider;
        retrofit.ErrorHandler errorHandler79 = builder76.errorHandler;
        retrofit.RestAdapter.Builder builder80 = builder72.setErrorHandler(errorHandler79);
        retrofit.Server server81 = builder72.server;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.Profiler profiler84 = null;
        builder82.profiler = profiler84;
        retrofit.Server server86 = null;
        builder82.server = server86;
        java.util.concurrent.Executor executor88 = builder82.callbackExecutor;
        retrofit.converter.Converter converter89 = builder82.converter;
        retrofit.RestAdapter.Builder builder90 = builder72.setConverter(converter89);
        retrofit.converter.Converter converter91 = builder90.converter;
        builder0.converter = converter91;
        retrofit.client.Client client93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder0.setClient(client93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNull(errorHandler64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(server70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(errorHandler79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(server81);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(converter89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(converter91);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05101");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.lang.String str8 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.lang.String str10 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05102");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter12 = null;
        restAdapter11.converter = converter12;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter11.setLogLevel(logLevel14);
        retrofit.Server server16 = null;
        restAdapter11.server = server16;
        retrofit.Profiler profiler18 = null;
        restAdapter11.profiler = profiler18;
        java.util.concurrent.Executor executor20 = restAdapter11.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter11.logLevel;
        retrofit.Profiler profiler22 = restAdapter11.profiler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler22);
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05103");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter10.clientProvider;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder17.clientProvider;
        retrofit.ErrorHandler errorHandler20 = builder17.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel21 = builder17.logLevel;
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.ErrorHandler errorHandler34 = restAdapter32.errorHandler;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter32.logLevel = logLevel37;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter32.setLogLevel(logLevel39);
        retrofit.client.Client.Provider provider42 = restAdapter32.clientProvider;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        retrofit.converter.Converter converter50 = builder43.converter;
        retrofit.client.Client.Provider provider51 = builder43.clientProvider;
        restAdapter32.clientProvider = provider51;
        retrofit.RestAdapter.Builder builder53 = builder17.setClient(provider51);
        restAdapter10.clientProvider = provider51;
        retrofit.RequestInterceptor requestInterceptor55 = restAdapter10.requestInterceptor;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass56 = requestInterceptor55.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(converter50);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(requestInterceptor55);
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05104");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.client.Client.Provider provider2 = null;
        restAdapter0.clientProvider = provider2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider5 = null;
        builder4.clientProvider = provider5;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.client.Client.Provider provider10 = builder8.clientProvider;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider13 = builder11.clientProvider;
        builder8.clientProvider = provider13;
        builder4.clientProvider = provider13;
        java.util.concurrent.Executor executor16 = builder4.httpExecutor;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider19 = null;
        builder18.clientProvider = provider19;
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.client.Client.Provider provider24 = builder22.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder25.clientProvider;
        builder22.clientProvider = provider27;
        builder18.clientProvider = provider27;
        java.util.concurrent.Executor executor30 = builder18.httpExecutor;
        builder4.httpExecutor = executor30;
        restAdapter0.httpExecutor = executor30;
        retrofit.client.Client.Provider provider33 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor34 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider36 = null;
        builder35.clientProvider = provider36;
        retrofit.converter.Converter converter38 = null;
        builder35.converter = converter38;
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.client.Client.Provider provider53 = null;
        restAdapter52.clientProvider = provider53;
        java.util.concurrent.Executor executor55 = restAdapter52.callbackExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder56.clientProvider;
        retrofit.ErrorHandler errorHandler59 = builder56.errorHandler;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder60.clientProvider;
        retrofit.ErrorHandler errorHandler63 = builder60.errorHandler;
        retrofit.RestAdapter.Builder builder64 = builder56.setErrorHandler(errorHandler63);
        retrofit.Server server65 = builder56.server;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.Profiler profiler68 = null;
        builder66.profiler = profiler68;
        retrofit.Server server70 = null;
        builder66.server = server70;
        java.util.concurrent.Executor executor72 = builder66.callbackExecutor;
        retrofit.converter.Converter converter73 = builder66.converter;
        retrofit.RestAdapter.Builder builder74 = builder56.setConverter(converter73);
        restAdapter52.converter = converter73;
        retrofit.RestAdapter.Builder builder76 = builder35.setConverter(converter73);
        restAdapter0.converter = converter73;
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNotNull(provider10);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(errorHandler59);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(converter73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05105");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.converter.Converter converter15 = restAdapter11.converter;
        retrofit.converter.Converter converter16 = restAdapter11.converter;
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        builder18.log = log34;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder18.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor49 = null;
        builder48.callbackExecutor = executor49;
        retrofit.ErrorHandler errorHandler51 = null;
        builder48.errorHandler = errorHandler51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder53.clientProvider;
        retrofit.RestAdapter.Builder builder56 = builder48.setClient(provider55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.client.Client.Provider provider59 = builder57.clientProvider;
        retrofit.ErrorHandler errorHandler60 = builder57.errorHandler;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder61.clientProvider;
        retrofit.ErrorHandler errorHandler64 = builder61.errorHandler;
        retrofit.RestAdapter.Builder builder65 = builder57.setErrorHandler(errorHandler64);
        retrofit.Server server66 = builder57.server;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.Profiler profiler69 = null;
        builder67.profiler = profiler69;
        retrofit.Server server71 = null;
        builder67.server = server71;
        java.util.concurrent.Executor executor73 = builder67.callbackExecutor;
        retrofit.converter.Converter converter74 = builder67.converter;
        retrofit.RestAdapter.Builder builder75 = builder57.setConverter(converter74);
        builder48.converter = converter74;
        restAdapter11.converter = converter74;
        java.util.concurrent.Executor executor78 = restAdapter11.httpExecutor;
        retrofit.client.Response response80 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response82 = restAdapter11.logAndReplaceResponse("hi!", response80, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider59);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(converter74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(executor78);
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05106");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        retrofit.Server server47 = null;
        builder30.server = server47;
        retrofit.Server server49 = null;
        builder30.server = server49;
        java.util.concurrent.Executor executor51 = builder30.httpExecutor;
        retrofit.client.Client.Provider provider52 = builder30.clientProvider;
        retrofit.RestAdapter.Builder builder54 = builder30.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor55 = builder30.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(requestInterceptor55);
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05107");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        java.util.concurrent.Executor executor47 = builder30.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor48 = builder30.requestInterceptor;
        retrofit.ErrorHandler errorHandler49 = null;
        builder30.errorHandler = errorHandler49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider53 = builder51.clientProvider;
        retrofit.Profiler profiler54 = builder51.profiler;
        retrofit.converter.Converter converter55 = null;
        builder51.converter = converter55;
        builder51.ensureSaneDefaults();
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.Profiler profiler69 = restAdapter68.profiler;
        retrofit.ErrorHandler errorHandler70 = restAdapter68.errorHandler;
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        restAdapter68.log = log71;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter68.logLevel = logLevel73;
        builder51.logLevel = logLevel73;
        retrofit.Server server76 = null;
        retrofit.client.Client.Provider provider77 = null;
        java.util.concurrent.Executor executor78 = null;
        java.util.concurrent.Executor executor79 = null;
        retrofit.RequestInterceptor requestInterceptor80 = null;
        retrofit.converter.Converter converter81 = null;
        retrofit.Profiler profiler82 = null;
        retrofit.ErrorHandler errorHandler83 = null;
        retrofit.RestAdapter.Log log84 = null;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean86 = logLevel85.log();
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server76, provider77, executor78, executor79, requestInterceptor80, converter81, profiler82, errorHandler83, log84, logLevel85);
        retrofit.RestAdapter.Log log88 = restAdapter87.log;
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter87.logLevel;
        builder51.logLevel = logLevel89;
        retrofit.RequestInterceptor requestInterceptor91 = builder51.requestInterceptor;
        retrofit.RestAdapter.Builder builder92 = builder30.setRequestInterceptor(requestInterceptor91);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(provider53);
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNull(errorHandler70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(log88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05108");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor2 = builder1.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder4 = builder1.setLogLevel(logLevel3);
        retrofit.RestAdapter.LogLevel logLevel5 = builder1.logLevel;
        builder0.logLevel = logLevel5;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05109");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.Log log12 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter11.logLevel;
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.Profiler profiler15 = null;
        restAdapter11.profiler = profiler15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder17.clientProvider;
        retrofit.Profiler profiler20 = builder17.profiler;
        retrofit.converter.Converter converter21 = null;
        builder17.converter = converter21;
        retrofit.Server server23 = null;
        builder17.server = server23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider26 = null;
        builder25.clientProvider = provider26;
        java.util.concurrent.Executor executor28 = builder25.httpExecutor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.Profiler profiler31 = null;
        builder29.profiler = profiler31;
        retrofit.Server server33 = null;
        builder29.server = server33;
        java.util.concurrent.Executor executor35 = builder29.callbackExecutor;
        builder25.httpExecutor = executor35;
        java.util.concurrent.Executor executor37 = builder25.httpExecutor;
        builder17.httpExecutor = executor37;
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log40 = builder17.log;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.Profiler profiler52 = restAdapter51.profiler;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean54 = logLevel53.log();
        restAdapter51.logLevel = logLevel53;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        restAdapter51.log = log56;
        retrofit.ErrorHandler errorHandler58 = null;
        restAdapter51.errorHandler = errorHandler58;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        restAdapter51.requestInterceptor = requestInterceptor60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        retrofit.ErrorHandler errorHandler65 = builder62.errorHandler;
        restAdapter51.errorHandler = errorHandler65;
        retrofit.RestAdapter.Log log67 = restAdapter51.log;
        retrofit.RestAdapter.Log log68 = restAdapter51.log;
        log68.log("hi!");
        log68.log("");
        builder17.log = log68;
        restAdapter11.log = log68;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(log68);
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05110");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        restAdapter11.requestInterceptor = requestInterceptor26;
        retrofit.converter.Converter converter28 = restAdapter11.converter;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter11.new RestHandler();
        retrofit.ErrorHandler errorHandler30 = restAdapter11.errorHandler;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.Profiler profiler43 = restAdapter42.profiler;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean45 = logLevel44.log();
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        restAdapter42.log = log47;
        builder31.log = log47;
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.RestAdapter.Builder builder61 = builder31.setLogLevel(logLevel59);
        java.util.concurrent.Executor executor62 = null;
        builder61.callbackExecutor = executor62;
        retrofit.converter.Converter converter64 = builder61.converter;
        retrofit.Server server65 = null;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel74);
        retrofit.converter.Converter converter76 = restAdapter75.converter;
        retrofit.ErrorHandler errorHandler77 = restAdapter75.errorHandler;
        retrofit.Profiler profiler78 = null;
        restAdapter75.profiler = profiler78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.client.Client.Provider provider82 = builder80.clientProvider;
        retrofit.ErrorHandler errorHandler83 = builder80.errorHandler;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.client.Client.Provider provider86 = builder84.clientProvider;
        retrofit.ErrorHandler errorHandler87 = builder84.errorHandler;
        retrofit.RestAdapter.Builder builder88 = builder80.setErrorHandler(errorHandler87);
        restAdapter75.errorHandler = errorHandler87;
        builder61.errorHandler = errorHandler87;
        restAdapter11.errorHandler = errorHandler87;
        retrofit.Profiler profiler92 = restAdapter11.profiler;
        retrofit.Profiler profiler93 = null;
        restAdapter11.profiler = profiler93;
        java.util.concurrent.Executor executor95 = restAdapter11.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter76);
        org.junit.Assert.assertNull(errorHandler77);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(profiler92);
        org.junit.Assert.assertNull(executor95);
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05111");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.converter.Converter converter18 = builder16.converter;
        restAdapter10.converter = converter18;
        retrofit.ErrorHandler errorHandler20 = restAdapter10.errorHandler;
        retrofit.client.Client.Provider provider21 = restAdapter10.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel22 = null;
        restAdapter10.setLogLevel(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter18);
        org.junit.Assert.assertNull(errorHandler20);
        org.junit.Assert.assertNull(provider21);
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05112");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider13 = restAdapter10.clientProvider;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean24 = logLevel23.log();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.client.Client.Provider provider29 = builder27.clientProvider;
        retrofit.ErrorHandler errorHandler30 = builder27.errorHandler;
        restAdapter25.errorHandler = errorHandler30;
        restAdapter10.errorHandler = errorHandler30;
        java.util.concurrent.Executor executor33 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.Server server38 = null;
        builder34.server = server38;
        java.util.concurrent.Executor executor40 = builder34.callbackExecutor;
        restAdapter10.callbackExecutor = executor40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel45 = builder42.logLevel;
        restAdapter10.setLogLevel(logLevel45);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(provider29);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05113");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.ErrorHandler errorHandler19 = restAdapter10.errorHandler;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.converter.Converter converter31 = restAdapter30.converter;
        retrofit.ErrorHandler errorHandler32 = restAdapter30.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter30.logLevel;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter30.getLogLevel();
        restAdapter10.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.client.Client.Provider provider38 = builder36.clientProvider;
        retrofit.Profiler profiler39 = builder36.profiler;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.Profiler profiler51 = restAdapter50.profiler;
        retrofit.ErrorHandler errorHandler52 = restAdapter50.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider56 = null;
        builder55.clientProvider = provider56;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.converter.Converter converter69 = restAdapter68.converter;
        retrofit.ErrorHandler errorHandler70 = restAdapter68.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter68.logLevel;
        builder55.logLevel = logLevel71;
        restAdapter50.setLogLevel(logLevel71);
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.Profiler profiler77 = null;
        builder75.profiler = profiler77;
        retrofit.Server server79 = null;
        builder75.server = server79;
        java.util.concurrent.Executor executor81 = builder75.callbackExecutor;
        restAdapter74.callbackExecutor = executor81;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        builder83.ensureSaneDefaults();
        retrofit.Profiler profiler85 = null;
        builder83.profiler = profiler85;
        retrofit.Server server87 = null;
        builder83.server = server87;
        java.util.concurrent.Executor executor89 = builder83.callbackExecutor;
        retrofit.converter.Converter converter90 = builder83.converter;
        restAdapter74.converter = converter90;
        restAdapter50.converter = converter90;
        builder36.converter = converter90;
        retrofit.RestAdapter.Builder builder95 = builder36.setServer("hi!");
        java.util.concurrent.Executor executor96 = builder95.httpExecutor;
        restAdapter10.callbackExecutor = executor96;
        java.util.concurrent.Executor executor98 = restAdapter10.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(errorHandler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider38);
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertNull(errorHandler52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNull(errorHandler70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNotNull(converter90);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(executor96);
        org.junit.Assert.assertNull(executor98);
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05114");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.client.Client.Provider provider7 = builder5.clientProvider;
        retrofit.ErrorHandler errorHandler8 = builder5.errorHandler;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.client.Client.Provider provider11 = builder9.clientProvider;
        retrofit.ErrorHandler errorHandler12 = builder9.errorHandler;
        retrofit.RestAdapter.Builder builder13 = builder5.setErrorHandler(errorHandler12);
        builder0.errorHandler = errorHandler12;
        java.util.concurrent.Executor executor15 = builder0.callbackExecutor;
        retrofit.RestAdapter.Log log16 = builder0.log;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = builder17.callbackExecutor;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean29 = logLevel28.log();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Log log32 = null;
        restAdapter30.log = log32;
        retrofit.Profiler profiler34 = null;
        restAdapter30.profiler = profiler34;
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter30.requestInterceptor;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = null;
        builder67.callbackExecutor = executor68;
        retrofit.converter.Converter converter70 = builder67.converter;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider72 = null;
        builder71.clientProvider = provider72;
        builder71.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor75 = builder71.requestInterceptor;
        builder67.requestInterceptor = requestInterceptor75;
        retrofit.Server server77 = null;
        builder67.server = server77;
        retrofit.RequestInterceptor requestInterceptor79 = builder67.requestInterceptor;
        restAdapter30.requestInterceptor = requestInterceptor79;
        retrofit.RestAdapter.Builder builder81 = builder17.setRequestInterceptor(requestInterceptor79);
        retrofit.RestAdapter.Builder builder82 = builder0.setRequestInterceptor(requestInterceptor79);
        java.util.concurrent.Executor executor83 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider84 = builder0.clientProvider;
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(requestInterceptor36);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(executor83);
        org.junit.Assert.assertNull(provider84);
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05115");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.converter.Converter converter33 = builder30.converter;
        retrofit.Server server34 = builder30.server;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.Profiler profiler48 = restAdapter47.profiler;
        java.util.concurrent.Executor executor49 = null;
        restAdapter47.httpExecutor = executor49;
        retrofit.Profiler profiler51 = null;
        restAdapter47.profiler = profiler51;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter47.getLogLevel();
        builder35.logLevel = logLevel53;
        retrofit.RestAdapter.LogLevel logLevel55 = builder35.logLevel;
        retrofit.converter.Converter converter56 = builder35.converter;
        retrofit.RestAdapter.Builder builder58 = builder35.setServer("hi!");
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel60 = builder35.logLevel;
        builder35.ensureSaneDefaults();
        retrofit.Server server62 = builder35.server;
        retrofit.RestAdapter.Builder builder63 = builder30.setServer(server62);
        retrofit.client.Client.Provider provider64 = builder63.clientProvider;
        retrofit.client.Client client65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder63.setClient(client65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(provider64);
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05116");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.Profiler profiler4 = null;
        builder0.profiler = profiler4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean16 = logLevel15.log();
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.client.Client.Provider provider21 = builder19.clientProvider;
        retrofit.ErrorHandler errorHandler22 = builder19.errorHandler;
        restAdapter17.errorHandler = errorHandler22;
        builder0.errorHandler = errorHandler22;
        retrofit.converter.Converter converter25 = builder0.converter;
        java.util.concurrent.Executor executor26 = null;
        builder0.callbackExecutor = executor26;
        retrofit.RestAdapter.Log log28 = builder0.log;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(log28);
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05117");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = builder0.server;
        retrofit.Profiler profiler20 = null;
        builder0.profiler = profiler20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.Profiler profiler34 = restAdapter33.profiler;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean36 = logLevel35.log();
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        restAdapter33.log = log38;
        builder22.log = log38;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder22.setLogLevel(logLevel50);
        java.util.concurrent.Executor executor53 = null;
        builder52.callbackExecutor = executor53;
        retrofit.converter.Converter converter55 = builder52.converter;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider57 = null;
        builder56.clientProvider = provider57;
        builder56.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor60 = builder56.requestInterceptor;
        builder52.requestInterceptor = requestInterceptor60;
        retrofit.Server server62 = null;
        builder52.server = server62;
        retrofit.RequestInterceptor requestInterceptor64 = builder52.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = null;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel76);
        retrofit.Profiler profiler78 = restAdapter77.profiler;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean80 = logLevel79.log();
        restAdapter77.logLevel = logLevel79;
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        restAdapter77.log = log82;
        builder66.log = log82;
        retrofit.converter.Converter converter85 = builder66.converter;
        retrofit.RestAdapter.Log log86 = builder66.log;
        log86.log("");
        retrofit.RestAdapter.Builder builder89 = builder0.setLog(log86);
        retrofit.ErrorHandler errorHandler90 = builder89.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNull(errorHandler90);
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05118");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        restAdapter11.requestInterceptor = requestInterceptor26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider29 = null;
        builder28.clientProvider = provider29;
        retrofit.converter.Converter converter31 = null;
        builder28.converter = converter31;
        retrofit.client.Client.Provider provider33 = builder28.clientProvider;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.Profiler profiler40 = null;
        builder38.profiler = profiler40;
        retrofit.Server server42 = null;
        builder38.server = server42;
        java.util.concurrent.Executor executor44 = builder38.callbackExecutor;
        builder34.callbackExecutor = executor44;
        builder28.callbackExecutor = executor44;
        retrofit.RestAdapter.LogLevel logLevel47 = builder28.logLevel;
        boolean boolean48 = logLevel47.log();
        restAdapter11.setLogLevel(logLevel47);
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter11.new RestHandler();
        retrofit.converter.Converter converter51 = restAdapter11.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter51);
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05119");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel19;
        retrofit.Profiler profiler21 = restAdapter10.profiler;
        retrofit.Server server22 = null;
        restAdapter10.server = server22;
        retrofit.RestAdapter.Log log24 = restAdapter10.log;
        retrofit.client.Header[] headerArray29 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList30 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList30, headerArray29);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList30, typedOutput32);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList30, typedOutput34);
        retrofit.client.Request request36 = restAdapter10.logAndReplaceRequest(request35);
        retrofit.mime.TypedOutput typedOutput37 = request36.getBody();
        java.lang.String str38 = request36.getMethod();
        java.lang.String str39 = request36.getMethod();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(headerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05120");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider8 = null;
        builder7.clientProvider = provider8;
        java.util.concurrent.Executor executor10 = builder7.httpExecutor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.Profiler profiler13 = null;
        builder11.profiler = profiler13;
        retrofit.Server server15 = null;
        builder11.server = server15;
        java.util.concurrent.Executor executor17 = builder11.callbackExecutor;
        builder7.httpExecutor = executor17;
        retrofit.RestAdapter.LogLevel logLevel19 = builder7.logLevel;
        builder0.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.Profiler profiler23 = null;
        builder21.profiler = profiler23;
        retrofit.Server server25 = null;
        builder21.server = server25;
        retrofit.client.Client.Provider provider27 = builder21.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter39.log = log44;
        builder28.log = log44;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder28.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor59 = null;
        builder58.callbackExecutor = executor59;
        retrofit.converter.Converter converter61 = builder58.converter;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider63 = null;
        builder62.clientProvider = provider63;
        builder62.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor66 = builder62.requestInterceptor;
        builder58.requestInterceptor = requestInterceptor66;
        retrofit.Server server68 = null;
        builder58.server = server68;
        retrofit.RequestInterceptor requestInterceptor70 = builder58.requestInterceptor;
        builder21.requestInterceptor = requestInterceptor70;
        retrofit.RestAdapter.Builder builder72 = builder0.setRequestInterceptor(requestInterceptor70);
        retrofit.client.Client.Provider provider73 = builder72.clientProvider;
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        retrofit.Server server75 = null;
        retrofit.client.Client.Provider provider76 = null;
        java.util.concurrent.Executor executor77 = null;
        java.util.concurrent.Executor executor78 = null;
        retrofit.RequestInterceptor requestInterceptor79 = null;
        retrofit.converter.Converter converter80 = null;
        retrofit.Profiler profiler81 = null;
        retrofit.ErrorHandler errorHandler82 = null;
        retrofit.RestAdapter.Log log83 = null;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server75, provider76, executor77, executor78, requestInterceptor79, converter80, profiler81, errorHandler82, log83, logLevel84);
        retrofit.Profiler profiler86 = restAdapter85.profiler;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean88 = logLevel87.log();
        restAdapter85.logLevel = logLevel87;
        retrofit.RestAdapter.Log log90 = retrofit.RestAdapter.Log.NONE;
        restAdapter85.log = log90;
        retrofit.ErrorHandler errorHandler92 = null;
        restAdapter85.errorHandler = errorHandler92;
        retrofit.RequestInterceptor requestInterceptor94 = null;
        restAdapter85.requestInterceptor = requestInterceptor94;
        retrofit.RestAdapter.Log log96 = restAdapter85.log;
        retrofit.RestAdapter.LogLevel logLevel97 = restAdapter85.logLevel;
        retrofit.RestAdapter.Builder builder98 = builder72.setLogLevel(logLevel97);
        java.util.concurrent.Executor executor99 = builder72.callbackExecutor;
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(provider73);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(log90);
        org.junit.Assert.assertNotNull(log96);
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder98);
        org.junit.Assert.assertNotNull(executor99);
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05121");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.Profiler profiler15 = null;
        restAdapter11.profiler = profiler15;
        retrofit.Profiler profiler17 = null;
        restAdapter11.profiler = profiler17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        builder19.log = log35;
        restAdapter11.log = log35;
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter11.logLevel;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter11.getLogLevel();
        java.lang.Throwable throwable41 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable41, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05122");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.Profiler profiler4 = null;
        builder0.profiler = profiler4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean16 = logLevel15.log();
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.client.Client.Provider provider21 = builder19.clientProvider;
        retrofit.ErrorHandler errorHandler22 = builder19.errorHandler;
        restAdapter17.errorHandler = errorHandler22;
        builder0.errorHandler = errorHandler22;
        retrofit.client.Client.Provider provider25 = builder0.clientProvider;
        retrofit.client.Client.Provider provider26 = builder0.clientProvider;
        retrofit.converter.Converter converter27 = builder0.converter;
        retrofit.RestAdapter.LogLevel logLevel28 = builder0.logLevel;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder30 = builder0.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05123");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        java.util.concurrent.Executor executor37 = builder34.httpExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.Profiler profiler40 = null;
        builder38.profiler = profiler40;
        retrofit.Server server42 = null;
        builder38.server = server42;
        java.util.concurrent.Executor executor44 = builder38.callbackExecutor;
        builder34.httpExecutor = executor44;
        builder33.callbackExecutor = executor44;
        builder30.httpExecutor = executor44;
        retrofit.Server server48 = null;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = null;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel57);
        retrofit.Profiler profiler59 = restAdapter58.profiler;
        retrofit.ErrorHandler errorHandler60 = restAdapter58.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.setLogLevel(logLevel61);
        retrofit.Server server63 = restAdapter58.server;
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.Builder builder65 = builder30.setLogLevel(logLevel64);
        retrofit.Profiler profiler66 = builder65.profiler;
        retrofit.client.Client.Provider provider67 = builder65.clientProvider;
        retrofit.converter.Converter converter68 = builder65.converter;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNull(errorHandler60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(profiler66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNull(converter68);
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05124");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.converter.Converter converter18 = builder16.converter;
        restAdapter10.converter = converter18;
        retrofit.ErrorHandler errorHandler20 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log21 = restAdapter10.log;
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.converter.Converter converter33 = restAdapter32.converter;
        retrofit.Profiler profiler34 = null;
        restAdapter32.profiler = profiler34;
        java.util.concurrent.Executor executor36 = restAdapter32.callbackExecutor;
        retrofit.RestAdapter.Log log37 = restAdapter32.log;
        retrofit.RestAdapter.Log log38 = null;
        restAdapter32.log = log38;
        retrofit.RestAdapter.LogLevel logLevel40 = null;
        restAdapter32.logLevel = logLevel40;
        retrofit.Profiler profiler42 = null;
        restAdapter32.profiler = profiler42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.client.Client.Provider provider46 = builder44.clientProvider;
        retrofit.ErrorHandler errorHandler47 = builder44.errorHandler;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder48.clientProvider;
        retrofit.ErrorHandler errorHandler51 = builder48.errorHandler;
        retrofit.RestAdapter.Builder builder52 = builder44.setErrorHandler(errorHandler51);
        retrofit.Server server53 = builder44.server;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.Profiler profiler56 = null;
        builder54.profiler = profiler56;
        retrofit.Server server58 = null;
        builder54.server = server58;
        java.util.concurrent.Executor executor60 = builder54.callbackExecutor;
        retrofit.converter.Converter converter61 = builder54.converter;
        retrofit.RestAdapter.Builder builder62 = builder44.setConverter(converter61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = null;
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = null;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log72, logLevel73);
        retrofit.Profiler profiler75 = restAdapter74.profiler;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean77 = logLevel76.log();
        restAdapter74.logLevel = logLevel76;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        restAdapter74.log = log79;
        builder63.log = log79;
        log79.log("");
        retrofit.RestAdapter.Builder builder84 = builder44.setLog(log79);
        retrofit.Server server85 = builder84.server;
        java.util.concurrent.Executor executor86 = builder84.httpExecutor;
        restAdapter32.httpExecutor = executor86;
        restAdapter10.callbackExecutor = executor86;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter18);
        org.junit.Assert.assertNull(errorHandler20);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(converter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(server85);
        org.junit.Assert.assertNotNull(executor86);
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05125");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server12 = restAdapter11.server;
        retrofit.Profiler profiler13 = restAdapter11.profiler;
        retrofit.client.Client.Provider provider14 = restAdapter11.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNull(provider14);
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05126");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.client.Client.Provider provider33 = builder31.clientProvider;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.client.Client.Provider provider36 = builder34.clientProvider;
        builder31.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = builder0.setClient(provider36);
        retrofit.RequestInterceptor requestInterceptor39 = null;
        builder38.requestInterceptor = requestInterceptor39;
        retrofit.RestAdapter.Log log41 = builder38.log;
        retrofit.converter.Converter converter42 = builder38.converter;
        retrofit.Profiler profiler43 = null;
        builder38.profiler = profiler43;
        retrofit.RestAdapter.Builder builder46 = builder38.setServer("hi!");
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.Log log58 = restAdapter57.log;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.Server server67 = null;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel76);
        retrofit.Profiler profiler78 = restAdapter77.profiler;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean80 = logLevel79.log();
        restAdapter77.logLevel = logLevel79;
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        restAdapter77.log = log82;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log82, logLevel84);
        restAdapter57.log = log82;
        log82.log("");
        builder38.log = log82;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05127");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList14 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.getMethod();
        java.lang.String str19 = request17.getMethod();
        java.lang.String str20 = request17.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05128");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.Profiler profiler16 = restAdapter15.profiler;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        restAdapter15.log = log20;
        builder4.log = log20;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder4.setLogLevel(logLevel32);
        java.util.concurrent.Executor executor35 = null;
        builder34.callbackExecutor = executor35;
        retrofit.ErrorHandler errorHandler37 = null;
        builder34.errorHandler = errorHandler37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.Profiler profiler41 = null;
        builder39.profiler = profiler41;
        retrofit.Server server43 = null;
        builder39.server = server43;
        java.util.concurrent.Executor executor45 = builder39.callbackExecutor;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        builder39.clientProvider = provider48;
        builder34.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder51 = builder0.setClient(provider48);
        java.util.concurrent.Executor executor52 = builder51.callbackExecutor;
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.Profiler profiler64 = restAdapter63.profiler;
        retrofit.ErrorHandler errorHandler65 = restAdapter63.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter63.setLogLevel(logLevel66);
        retrofit.Server server68 = restAdapter63.server;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Log log70 = restAdapter63.log;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel80);
        retrofit.Profiler profiler82 = restAdapter81.profiler;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean84 = logLevel83.log();
        restAdapter81.logLevel = logLevel83;
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter81.getLogLevel();
        restAdapter63.setLogLevel(logLevel86);
        boolean boolean88 = logLevel86.log();
        builder51.logLevel = logLevel86;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter90 = builder51.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNull(errorHandler65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05129");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        retrofit.client.Client.Provider provider6 = builder0.clientProvider;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = null;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel16);
        retrofit.converter.Converter converter18 = restAdapter17.converter;
        retrofit.ErrorHandler errorHandler19 = restAdapter17.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter17.logLevel;
        retrofit.Profiler profiler21 = null;
        restAdapter17.profiler = profiler21;
        java.util.concurrent.Executor executor23 = restAdapter17.callbackExecutor;
        retrofit.client.Client.Provider provider24 = null;
        restAdapter17.clientProvider = provider24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.Profiler profiler38 = restAdapter37.profiler;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        restAdapter37.log = log42;
        builder26.log = log42;
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        retrofit.RestAdapter.Builder builder56 = builder26.setLogLevel(logLevel54);
        java.util.concurrent.Executor executor57 = null;
        builder56.callbackExecutor = executor57;
        retrofit.ErrorHandler errorHandler59 = null;
        builder56.errorHandler = errorHandler59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder61.clientProvider;
        retrofit.RestAdapter.Builder builder64 = builder56.setClient(provider63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.client.Client.Provider provider67 = builder65.clientProvider;
        retrofit.ErrorHandler errorHandler68 = builder65.errorHandler;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider71 = builder69.clientProvider;
        retrofit.ErrorHandler errorHandler72 = builder69.errorHandler;
        retrofit.RestAdapter.Builder builder73 = builder65.setErrorHandler(errorHandler72);
        retrofit.Server server74 = builder65.server;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.Profiler profiler77 = null;
        builder75.profiler = profiler77;
        retrofit.Server server79 = null;
        builder75.server = server79;
        java.util.concurrent.Executor executor81 = builder75.callbackExecutor;
        retrofit.converter.Converter converter82 = builder75.converter;
        retrofit.RestAdapter.Builder builder83 = builder65.setConverter(converter82);
        builder56.converter = converter82;
        restAdapter17.converter = converter82;
        retrofit.RestAdapter.Builder builder86 = builder0.setConverter(converter82);
        java.lang.Class<?> wildcardClass87 = builder0.getClass();
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(provider67);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(converter82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05130");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.client.Client.Provider provider17 = restAdapter10.clientProvider;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log31 = null;
        restAdapter29.log = log31;
        retrofit.converter.Converter converter33 = restAdapter29.converter;
        retrofit.Profiler profiler34 = restAdapter29.profiler;
        retrofit.client.Client.Provider provider35 = restAdapter29.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.getLogLevel();
        restAdapter10.setLogLevel(logLevel36);
        retrofit.client.Client.Provider provider38 = restAdapter10.clientProvider;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = null;
        builder40.clientProvider = provider41;
        java.util.concurrent.Executor executor43 = builder40.httpExecutor;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.Profiler profiler46 = null;
        builder44.profiler = profiler46;
        retrofit.Server server48 = null;
        builder44.server = server48;
        java.util.concurrent.Executor executor50 = builder44.callbackExecutor;
        builder40.httpExecutor = executor50;
        builder39.callbackExecutor = executor50;
        restAdapter10.httpExecutor = executor50;
        java.lang.Throwable throwable54 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable54, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNotNull(executor50);
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05131");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder13.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder13.errorHandler;
        restAdapter11.errorHandler = errorHandler16;
        retrofit.RestAdapter.Log log18 = restAdapter11.log;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean29 = logLevel28.log();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter30.new RestHandler();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        restAdapter30.logLevel = logLevel41;
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter30.new RestHandler();
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.converter.Converter converter57 = restAdapter56.converter;
        retrofit.Profiler profiler58 = null;
        restAdapter56.profiler = profiler58;
        java.util.concurrent.Executor executor60 = restAdapter56.callbackExecutor;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.Profiler profiler63 = null;
        builder61.profiler = profiler63;
        retrofit.Server server65 = null;
        builder61.server = server65;
        java.util.concurrent.Executor executor67 = builder61.callbackExecutor;
        retrofit.converter.Converter converter68 = builder61.converter;
        restAdapter56.converter = converter68;
        restAdapter30.converter = converter68;
        restAdapter11.converter = converter68;
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter11.getLogLevel();
        retrofit.client.Client.Provider provider73 = restAdapter11.clientProvider;
        retrofit.RestAdapter.Log log74 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel75 = null;
        restAdapter11.logLevel = logLevel75;
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter11.getLogLevel();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass78 = logLevel77.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(converter68);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertNull(logLevel77);
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05132");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider2 = null;
        builder1.clientProvider = provider2;
        java.util.concurrent.Executor executor4 = builder1.httpExecutor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        retrofit.Server server9 = null;
        builder5.server = server9;
        java.util.concurrent.Executor executor11 = builder5.callbackExecutor;
        builder1.httpExecutor = executor11;
        builder0.callbackExecutor = executor11;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        builder14.log = log30;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder14.setLogLevel(logLevel42);
        builder0.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder47 = builder0.setServer("hi!");
        retrofit.ErrorHandler errorHandler48 = builder47.errorHandler;
        retrofit.RestAdapter.Log log49 = builder47.log;
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(errorHandler48);
        org.junit.Assert.assertNull(log49);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05133");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.Server server14 = restAdapter10.server;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter10.logLevel;
        retrofit.converter.Converter converter17 = restAdapter10.converter;
        java.util.concurrent.Executor executor18 = restAdapter10.httpExecutor;
        retrofit.Profiler profiler19 = null;
        restAdapter10.profiler = profiler19;
        retrofit.converter.Converter converter21 = restAdapter10.converter;
        java.util.concurrent.Executor executor22 = restAdapter10.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(executor22);
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05134");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.Profiler profiler42 = restAdapter41.profiler;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        restAdapter41.log = log46;
        retrofit.ErrorHandler errorHandler48 = null;
        restAdapter41.errorHandler = errorHandler48;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        restAdapter41.requestInterceptor = requestInterceptor50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.client.Client.Provider provider54 = builder52.clientProvider;
        retrofit.ErrorHandler errorHandler55 = builder52.errorHandler;
        restAdapter41.errorHandler = errorHandler55;
        retrofit.RestAdapter.Log log57 = restAdapter41.log;
        retrofit.RestAdapter.Builder builder58 = builder30.setLog(log57);
        java.util.concurrent.Executor executor59 = builder58.httpExecutor;
        builder58.ensureSaneDefaults();
        java.lang.Class<?> wildcardClass61 = builder58.getClass();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(provider54);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05135");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter10.requestInterceptor;
        retrofit.Profiler profiler14 = restAdapter10.profiler;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter25.errorHandler = errorHandler32;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        restAdapter25.requestInterceptor = requestInterceptor34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.client.Client.Provider provider38 = builder36.clientProvider;
        retrofit.ErrorHandler errorHandler39 = builder36.errorHandler;
        restAdapter25.errorHandler = errorHandler39;
        retrofit.RestAdapter.Log log41 = restAdapter25.log;
        retrofit.RestAdapter.Log log42 = restAdapter25.log;
        retrofit.RestAdapter.Log log43 = null;
        restAdapter25.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider46 = null;
        builder45.clientProvider = provider46;
        java.util.concurrent.Executor executor48 = builder45.httpExecutor;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.Profiler profiler51 = null;
        builder49.profiler = profiler51;
        retrofit.Server server53 = null;
        builder49.server = server53;
        java.util.concurrent.Executor executor55 = builder49.callbackExecutor;
        builder45.httpExecutor = executor55;
        retrofit.Profiler profiler57 = builder45.profiler;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel68);
        retrofit.Profiler profiler70 = restAdapter69.profiler;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean72 = logLevel71.log();
        restAdapter69.logLevel = logLevel71;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        restAdapter69.log = log74;
        builder58.log = log74;
        retrofit.Server server77 = null;
        retrofit.client.Client.Provider provider78 = null;
        java.util.concurrent.Executor executor79 = null;
        java.util.concurrent.Executor executor80 = null;
        retrofit.RequestInterceptor requestInterceptor81 = null;
        retrofit.converter.Converter converter82 = null;
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Log log85 = null;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server77, provider78, executor79, executor80, requestInterceptor81, converter82, profiler83, errorHandler84, log85, logLevel86);
        retrofit.RestAdapter.Builder builder88 = builder58.setLogLevel(logLevel86);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("hi!");
        retrofit.RestAdapter.Log log91 = builder90.log;
        retrofit.RequestInterceptor requestInterceptor92 = builder90.requestInterceptor;
        retrofit.Server server93 = builder90.server;
        builder45.server = server93;
        restAdapter25.server = server93;
        restAdapter10.server = server93;
        retrofit.ErrorHandler errorHandler97 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel98 = restAdapter10.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(provider38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNull(errorHandler97);
        org.junit.Assert.assertTrue("'" + logLevel98 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel98.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05136");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        retrofit.client.Client.Provider provider15 = restAdapter10.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor17 = restAdapter10.httpExecutor;
        retrofit.client.Response response19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response21 = restAdapter10.logAndReplaceResponse("", response19, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05137");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.Profiler profiler8 = null;
        builder6.profiler = profiler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        builder6.callbackExecutor = executor16;
        builder0.callbackExecutor = executor16;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler20 = restAdapter19.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.Profiler profiler22 = restAdapter19.profiler;
        retrofit.Server server23 = restAdapter19.server;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter35.new RestHandler();
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean47 = logLevel46.log();
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        restAdapter35.logLevel = logLevel46;
        retrofit.converter.Converter converter50 = restAdapter35.converter;
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter35.getLogLevel();
        restAdapter19.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider54 = null;
        builder53.clientProvider = provider54;
        java.util.concurrent.Executor executor56 = builder53.httpExecutor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.Profiler profiler59 = null;
        builder57.profiler = profiler59;
        retrofit.Server server61 = null;
        builder57.server = server61;
        java.util.concurrent.Executor executor63 = builder57.callbackExecutor;
        builder53.httpExecutor = executor63;
        restAdapter19.callbackExecutor = executor63;
        builder0.callbackExecutor = executor63;
        retrofit.Profiler profiler67 = null;
        builder0.profiler = profiler67;
        retrofit.Server server69 = builder0.server;
        retrofit.Server server70 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel71 = builder0.logLevel;
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(errorHandler20);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05138");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.Profiler profiler35 = null;
        builder30.profiler = profiler35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.Profiler profiler48 = restAdapter47.profiler;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean50 = logLevel49.log();
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder52 = builder30.setLogLevel(logLevel49);
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean63 = logLevel62.log();
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.Server server65 = null;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel74);
        retrofit.converter.Converter converter76 = restAdapter75.converter;
        retrofit.ErrorHandler errorHandler77 = restAdapter75.errorHandler;
        retrofit.Profiler profiler78 = null;
        restAdapter75.profiler = profiler78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.client.Client.Provider provider82 = builder80.clientProvider;
        retrofit.ErrorHandler errorHandler83 = builder80.errorHandler;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.client.Client.Provider provider86 = builder84.clientProvider;
        retrofit.ErrorHandler errorHandler87 = builder84.errorHandler;
        retrofit.RestAdapter.Builder builder88 = builder80.setErrorHandler(errorHandler87);
        restAdapter75.errorHandler = errorHandler87;
        restAdapter64.errorHandler = errorHandler87;
        builder30.errorHandler = errorHandler87;
        retrofit.converter.Converter converter92 = builder30.converter;
        retrofit.RestAdapter.Log log93 = builder30.log;
        retrofit.RestAdapter.Log log94 = builder30.log;
        java.util.concurrent.Executor executor95 = builder30.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter76);
        org.junit.Assert.assertNull(errorHandler77);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(converter92);
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertNotNull(log94);
        org.junit.Assert.assertNull(executor95);
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05139");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.client.Client.Provider provider33 = builder31.clientProvider;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.client.Client.Provider provider36 = builder34.clientProvider;
        builder31.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = builder0.setClient(provider36);
        retrofit.Profiler profiler39 = null;
        builder0.profiler = profiler39;
        retrofit.client.Client.Provider provider41 = builder0.clientProvider;
        retrofit.Server server42 = builder0.server;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel52);
        retrofit.converter.Converter converter54 = restAdapter53.converter;
        retrofit.ErrorHandler errorHandler55 = restAdapter53.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter53.logLevel;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.Builder builder58 = builder0.setLogLevel(logLevel57);
        retrofit.client.Client.Provider provider59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder58.setClient(provider59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(provider41);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(errorHandler55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05140");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.Profiler profiler13 = restAdapter12.profiler;
        java.util.concurrent.Executor executor14 = null;
        restAdapter12.httpExecutor = executor14;
        retrofit.Profiler profiler16 = null;
        restAdapter12.profiler = profiler16;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.getLogLevel();
        builder0.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel20 = builder0.logLevel;
        retrofit.converter.Converter converter21 = builder0.converter;
        retrofit.RestAdapter.Builder builder23 = builder0.setServer("hi!");
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel25 = builder0.logLevel;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter27 = builder0.build();
        retrofit.client.Client client28 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder29 = builder0.setClient(client28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(restAdapter27);
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05141");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder35.clientProvider;
        retrofit.RestAdapter.Builder builder38 = builder30.setClient(provider37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider45 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        builder43.clientProvider = provider48;
        builder39.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.Profiler profiler53 = null;
        builder51.profiler = profiler53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.Server server59 = null;
        builder55.server = server59;
        java.util.concurrent.Executor executor61 = builder55.callbackExecutor;
        builder51.callbackExecutor = executor61;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel80);
        retrofit.Profiler profiler82 = restAdapter81.profiler;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean84 = logLevel83.log();
        restAdapter81.logLevel = logLevel83;
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        restAdapter81.log = log86;
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter89 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log86, logLevel88);
        builder51.log = log86;
        retrofit.RestAdapter.Builder builder91 = builder39.setLog(log86);
        retrofit.converter.Converter converter92 = builder39.converter;
        retrofit.converter.Converter converter93 = builder39.converter;
        builder38.converter = converter93;
        retrofit.RestAdapter.Log log95 = builder38.log;
        retrofit.Profiler profiler96 = null;
        builder38.profiler = profiler96;
        retrofit.converter.Converter converter98 = builder38.converter;
        retrofit.ErrorHandler errorHandler99 = builder38.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(converter92);
        org.junit.Assert.assertNotNull(converter93);
        org.junit.Assert.assertNotNull(log95);
        org.junit.Assert.assertNotNull(converter98);
        org.junit.Assert.assertNull(errorHandler99);
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05142");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log1;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean19 = logLevel18.log();
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log21;
        builder5.log = log21;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder5.setLogLevel(logLevel33);
        java.util.concurrent.Executor executor36 = null;
        builder35.callbackExecutor = executor36;
        retrofit.ErrorHandler errorHandler38 = null;
        builder35.errorHandler = errorHandler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.client.Client.Provider provider42 = builder40.clientProvider;
        retrofit.RestAdapter.Builder builder43 = builder35.setClient(provider42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.client.Client.Provider provider46 = builder44.clientProvider;
        retrofit.ErrorHandler errorHandler47 = builder44.errorHandler;
        retrofit.RestAdapter.Builder builder48 = builder35.setErrorHandler(errorHandler47);
        restAdapter0.errorHandler = errorHandler47;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = null;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel60);
        retrofit.Profiler profiler62 = restAdapter61.profiler;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean64 = logLevel63.log();
        restAdapter61.logLevel = logLevel63;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        restAdapter61.log = log66;
        builder50.log = log66;
        retrofit.Server server69 = null;
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.RequestInterceptor requestInterceptor73 = null;
        retrofit.converter.Converter converter74 = null;
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = null;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor73, converter74, profiler75, errorHandler76, log77, logLevel78);
        retrofit.RestAdapter.Builder builder80 = builder50.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        builder81.ensureSaneDefaults();
        retrofit.client.Client.Provider provider83 = builder81.clientProvider;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.client.Client.Provider provider86 = builder84.clientProvider;
        builder81.clientProvider = provider86;
        retrofit.RestAdapter.Builder builder88 = builder50.setClient(provider86);
        restAdapter0.clientProvider = provider86;
        retrofit.ErrorHandler errorHandler90 = restAdapter0.errorHandler;
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(provider42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(provider83);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(errorHandler90);
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05143");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.Profiler profiler8 = null;
        builder6.profiler = profiler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        builder6.callbackExecutor = executor16;
        builder0.callbackExecutor = executor16;
        retrofit.RestAdapter.LogLevel logLevel19 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        builder20.log = log36;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder20.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("hi!");
        retrofit.RestAdapter.Log log53 = builder50.log;
        builder0.log = log53;
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05144");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.Profiler profiler19 = restAdapter18.profiler;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean21 = logLevel20.log();
        restAdapter18.logLevel = logLevel20;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        restAdapter18.log = log23;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel25);
        java.util.concurrent.Executor executor27 = restAdapter26.httpExecutor;
        java.util.concurrent.Executor executor28 = restAdapter26.httpExecutor;
        retrofit.ErrorHandler errorHandler29 = restAdapter26.errorHandler;
        retrofit.client.Header[] headerArray38 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList39 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList39, headerArray38);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList39, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList39, typedOutput43);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList39, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.String str48 = request46.getUrl();
        java.util.List<retrofit.client.Header> headerList49 = request46.getHeaders();
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "hi!", headerList49, typedOutput50);
        retrofit.client.Request request52 = restAdapter26.logAndReplaceRequest(request51);
        java.util.concurrent.Executor executor53 = restAdapter26.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertNotNull(headerArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(headerList49);
        org.junit.Assert.assertNotNull(request52);
        org.junit.Assert.assertNull(executor53);
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05145");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        java.util.concurrent.Executor executor13 = restAdapter11.httpExecutor;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean24 = logLevel23.log();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter25.new RestHandler();
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        restAdapter25.logLevel = logLevel36;
        retrofit.RestAdapter.Log log40 = restAdapter25.log;
        retrofit.client.Client.Provider provider41 = restAdapter25.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        retrofit.converter.Converter converter50 = builder43.converter;
        retrofit.client.Client.Provider provider51 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider54 = null;
        builder53.clientProvider = provider54;
        java.util.concurrent.Executor executor56 = builder53.httpExecutor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.Profiler profiler59 = null;
        builder57.profiler = profiler59;
        retrofit.Server server61 = null;
        builder57.server = server61;
        java.util.concurrent.Executor executor63 = builder57.callbackExecutor;
        builder53.httpExecutor = executor63;
        builder52.callbackExecutor = executor63;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.Profiler profiler68 = null;
        builder66.profiler = profiler68;
        retrofit.Server server70 = null;
        builder66.server = server70;
        java.util.concurrent.Executor executor72 = builder66.callbackExecutor;
        retrofit.RestAdapter.Builder builder73 = builder43.setExecutors(executor63, executor72);
        retrofit.client.Client.Provider provider74 = builder43.clientProvider;
        restAdapter25.clientProvider = provider74;
        restAdapter11.clientProvider = provider74;
        java.util.concurrent.Executor executor77 = restAdapter11.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor78 = restAdapter11.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor79 = restAdapter11.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(converter50);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNull(executor77);
        org.junit.Assert.assertNull(requestInterceptor78);
        org.junit.Assert.assertNull(requestInterceptor79);
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05146");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.Profiler profiler4 = null;
        builder0.profiler = profiler4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean16 = logLevel15.log();
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.client.Client.Provider provider21 = builder19.clientProvider;
        retrofit.ErrorHandler errorHandler22 = builder19.errorHandler;
        restAdapter17.errorHandler = errorHandler22;
        builder0.errorHandler = errorHandler22;
        retrofit.RestAdapter.Log log25 = builder0.log;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.Profiler profiler28 = null;
        builder26.profiler = profiler28;
        retrofit.Server server30 = null;
        builder26.server = server30;
        retrofit.client.Client.Provider provider32 = builder26.clientProvider;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.Profiler profiler45 = restAdapter44.profiler;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean47 = logLevel46.log();
        restAdapter44.logLevel = logLevel46;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        restAdapter44.log = log49;
        builder33.log = log49;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder33.setLogLevel(logLevel61);
        java.util.concurrent.Executor executor64 = null;
        builder63.callbackExecutor = executor64;
        retrofit.converter.Converter converter66 = builder63.converter;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider68 = null;
        builder67.clientProvider = provider68;
        builder67.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor71 = builder67.requestInterceptor;
        builder63.requestInterceptor = requestInterceptor71;
        retrofit.Server server73 = null;
        builder63.server = server73;
        retrofit.RequestInterceptor requestInterceptor75 = builder63.requestInterceptor;
        builder26.requestInterceptor = requestInterceptor75;
        retrofit.RestAdapter.Builder builder77 = builder0.setRequestInterceptor(requestInterceptor75);
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        java.util.concurrent.Executor executor79 = builder77.callbackExecutor;
        retrofit.ErrorHandler errorHandler80 = null;
        builder77.errorHandler = errorHandler80;
        retrofit.converter.Converter converter82 = builder77.converter;
        retrofit.client.Client.Provider provider83 = builder77.clientProvider;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertNotNull(provider32);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor79);
        org.junit.Assert.assertNull(converter82);
        org.junit.Assert.assertNull(provider83);
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05147");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder21.clientProvider;
        retrofit.ErrorHandler errorHandler24 = builder21.errorHandler;
        restAdapter10.errorHandler = errorHandler24;
        retrofit.RestAdapter.Log log26 = null;
        restAdapter10.log = log26;
        retrofit.RequestInterceptor requestInterceptor28 = restAdapter10.requestInterceptor;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log42 = null;
        restAdapter40.log = log42;
        retrofit.Profiler profiler44 = null;
        restAdapter40.profiler = profiler44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        retrofit.converter.Converter converter49 = null;
        builder46.converter = converter49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider53 = builder51.clientProvider;
        retrofit.ErrorHandler errorHandler54 = builder51.errorHandler;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = builder55.clientProvider;
        retrofit.ErrorHandler errorHandler58 = builder55.errorHandler;
        retrofit.RestAdapter.Builder builder59 = builder51.setErrorHandler(errorHandler58);
        builder46.errorHandler = errorHandler58;
        restAdapter40.errorHandler = errorHandler58;
        restAdapter10.errorHandler = errorHandler58;
        java.lang.Throwable throwable63 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable63, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(errorHandler24);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(provider53);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05148");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.lang.String str10 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05149");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.converter.Converter converter15 = restAdapter10.converter;
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        java.util.concurrent.Executor executor29 = null;
        restAdapter27.httpExecutor = executor29;
        retrofit.converter.Converter converter31 = restAdapter27.converter;
        java.util.concurrent.Executor executor32 = restAdapter27.httpExecutor;
        retrofit.ErrorHandler errorHandler33 = restAdapter27.errorHandler;
        retrofit.client.Client.Provider provider34 = restAdapter27.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        java.util.concurrent.Executor executor46 = builder35.httpExecutor;
        restAdapter27.httpExecutor = executor46;
        restAdapter10.httpExecutor = executor46;
        retrofit.converter.Converter converter49 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNull(converter49);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05150");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.logLevel;
        retrofit.client.Client.Provider provider13 = restAdapter11.clientProvider;
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler29 = restAdapter28.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        restAdapter28.logLevel = logLevel30;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        restAdapter28.log = log33;
        builder17.log = log33;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder17.setLogLevel(logLevel45);
        java.util.concurrent.Executor executor48 = null;
        builder47.callbackExecutor = executor48;
        retrofit.RestAdapter.Log log50 = builder47.log;
        retrofit.RequestInterceptor requestInterceptor51 = builder47.requestInterceptor;
        retrofit.Profiler profiler52 = null;
        builder47.profiler = profiler52;
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel55 = builder47.logLevel;
        java.lang.reflect.Method method56 = null;
        java.lang.Object[] objArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = restHandler16.invoke((java.lang.Object) logLevel55, method56, objArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNull(requestInterceptor51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05151");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler12 = restAdapter11.errorHandler;
        retrofit.client.Client.Provider provider13 = restAdapter11.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.Profiler profiler17 = null;
        builder15.profiler = profiler17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        builder19.log = log35;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.RestAdapter.Builder builder49 = builder19.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider54 = null;
        builder53.clientProvider = provider54;
        java.util.concurrent.Executor executor56 = builder53.httpExecutor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.Profiler profiler59 = null;
        builder57.profiler = profiler59;
        retrofit.Server server61 = null;
        builder57.server = server61;
        java.util.concurrent.Executor executor63 = builder57.callbackExecutor;
        builder53.httpExecutor = executor63;
        builder52.callbackExecutor = executor63;
        builder49.httpExecutor = executor63;
        retrofit.Server server67 = null;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel76);
        retrofit.Profiler profiler78 = restAdapter77.profiler;
        retrofit.ErrorHandler errorHandler79 = restAdapter77.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter77.setLogLevel(logLevel80);
        retrofit.Server server82 = restAdapter77.server;
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.Builder builder84 = builder49.setLogLevel(logLevel83);
        retrofit.Server server85 = builder49.server;
        retrofit.RestAdapter.Builder builder86 = builder15.setServer(server85);
        retrofit.RestAdapter.Log log87 = builder15.log;
        java.util.concurrent.Executor executor88 = builder15.callbackExecutor;
        restAdapter11.httpExecutor = executor88;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler78);
        org.junit.Assert.assertNull(errorHandler79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNotNull(executor88);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05152");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler6 = restAdapter5.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter5.new RestHandler();
        retrofit.Profiler profiler8 = restAdapter5.profiler;
        retrofit.Server server9 = restAdapter5.server;
        retrofit.ErrorHandler errorHandler10 = restAdapter5.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter5.getLogLevel();
        retrofit.Profiler profiler12 = null;
        restAdapter5.profiler = profiler12;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log37;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log37, logLevel39);
        restAdapter5.log = log37;
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log37);
        java.util.concurrent.Executor executor43 = builder42.httpExecutor;
        java.util.concurrent.Executor executor44 = builder42.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel45 = builder42.logLevel;
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05153");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder13.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder13.errorHandler;
        restAdapter11.errorHandler = errorHandler16;
        retrofit.RestAdapter.Log log18 = restAdapter11.log;
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter11.requestInterceptor;
        java.util.concurrent.Executor executor20 = restAdapter11.httpExecutor;
        retrofit.RestAdapter.Log log21 = restAdapter11.log;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(log21);
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05154");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider22 = null;
        builder21.clientProvider = provider22;
        retrofit.Server server24 = null;
        builder21.server = server24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.Profiler profiler28 = null;
        builder26.profiler = profiler28;
        retrofit.Server server30 = null;
        builder26.server = server30;
        java.util.concurrent.Executor executor32 = builder26.callbackExecutor;
        builder21.httpExecutor = executor32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.Server server38 = null;
        builder34.server = server38;
        retrofit.client.Client.Provider provider40 = builder34.clientProvider;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.Profiler profiler53 = restAdapter52.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean55 = logLevel54.log();
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        restAdapter52.log = log57;
        builder41.log = log57;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel69);
        retrofit.RestAdapter.Builder builder71 = builder41.setLogLevel(logLevel69);
        java.util.concurrent.Executor executor72 = null;
        builder71.callbackExecutor = executor72;
        retrofit.converter.Converter converter74 = builder71.converter;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider76 = null;
        builder75.clientProvider = provider76;
        builder75.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor79 = builder75.requestInterceptor;
        builder71.requestInterceptor = requestInterceptor79;
        retrofit.Server server81 = null;
        builder71.server = server81;
        retrofit.RequestInterceptor requestInterceptor83 = builder71.requestInterceptor;
        builder34.requestInterceptor = requestInterceptor83;
        builder21.requestInterceptor = requestInterceptor83;
        restAdapter10.requestInterceptor = requestInterceptor83;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter10.getLogLevel();
        retrofit.Profiler profiler88 = restAdapter10.profiler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler88);
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05155");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        retrofit.ErrorHandler errorHandler36 = null;
        restAdapter29.errorHandler = errorHandler36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel38;
        retrofit.RestAdapter.Log log40 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder41 = builder0.setLog(log40);
        retrofit.RestAdapter.Log log42 = builder0.log;
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor44 = builder0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor45 = builder0.requestInterceptor;
        java.lang.Class<?> wildcardClass46 = builder0.getClass();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05156");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel37);
        builder0.log = log35;
        retrofit.RequestInterceptor requestInterceptor40 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler41 = builder0.errorHandler;
        java.lang.Class<?> wildcardClass42 = builder0.getClass();
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05157");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.ErrorHandler errorHandler16 = restAdapter10.errorHandler;
        retrofit.ErrorHandler errorHandler17 = restAdapter10.errorHandler;
        retrofit.Profiler profiler18 = null;
        restAdapter10.profiler = profiler18;
        retrofit.Server server20 = null;
        restAdapter10.server = server20;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertNull(errorHandler17);
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05158");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.converter.Converter converter15 = restAdapter10.converter;
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler29 = restAdapter28.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        restAdapter28.logLevel = logLevel30;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        restAdapter28.log = log33;
        builder17.log = log33;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder17.setLogLevel(logLevel45);
        java.util.concurrent.Executor executor48 = null;
        builder47.callbackExecutor = executor48;
        retrofit.ErrorHandler errorHandler50 = null;
        builder47.errorHandler = errorHandler50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.Profiler profiler54 = null;
        builder52.profiler = profiler54;
        retrofit.Server server56 = null;
        builder52.server = server56;
        java.util.concurrent.Executor executor58 = builder52.callbackExecutor;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.client.Client.Provider provider61 = builder59.clientProvider;
        builder52.clientProvider = provider61;
        builder47.clientProvider = provider61;
        java.util.concurrent.Executor executor64 = builder47.httpExecutor;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.client.Client.Provider provider67 = builder65.clientProvider;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.client.Client.Provider provider70 = builder68.clientProvider;
        builder65.clientProvider = provider70;
        retrofit.RestAdapter.Builder builder72 = builder47.setClient(provider70);
        restAdapter10.clientProvider = provider70;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(provider61);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertNotNull(provider67);
        org.junit.Assert.assertNotNull(provider70);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05159");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder35.clientProvider;
        retrofit.RestAdapter.Builder builder38 = builder30.setClient(provider37);
        retrofit.Server server39 = null;
        builder30.server = server39;
        retrofit.ErrorHandler errorHandler41 = builder30.errorHandler;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler43 = restAdapter42.errorHandler;
        retrofit.client.Client.Provider provider44 = null;
        restAdapter42.clientProvider = provider44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.client.Client.Provider provider52 = builder50.clientProvider;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder53.clientProvider;
        builder50.clientProvider = provider55;
        builder46.clientProvider = provider55;
        java.util.concurrent.Executor executor58 = builder46.httpExecutor;
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider61 = null;
        builder60.clientProvider = provider61;
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.client.Client.Provider provider66 = builder64.clientProvider;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.client.Client.Provider provider69 = builder67.clientProvider;
        builder64.clientProvider = provider69;
        builder60.clientProvider = provider69;
        java.util.concurrent.Executor executor72 = builder60.httpExecutor;
        builder46.httpExecutor = executor72;
        restAdapter42.httpExecutor = executor72;
        retrofit.client.Client.Provider provider75 = restAdapter42.clientProvider;
        java.util.concurrent.Executor executor76 = restAdapter42.httpExecutor;
        builder30.httpExecutor = executor76;
        retrofit.client.Client client78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder30.setClient(client78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(errorHandler41);
        org.junit.Assert.assertNull(errorHandler43);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(provider66);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNotNull(executor76);
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05160");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.getUrl();
        java.lang.String str9 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput13 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05161");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.Server server17 = restAdapter10.server;
        retrofit.RequestInterceptor requestInterceptor18 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter10.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(requestInterceptor18);
        org.junit.Assert.assertNull(requestInterceptor20);
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05162");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        builder30.requestInterceptor = requestInterceptor35;
        java.util.concurrent.Executor executor37 = builder30.callbackExecutor;
        retrofit.RestAdapter.Builder builder39 = builder30.setServer("hi!");
        retrofit.client.Client client40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder30.setClient(client40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05163");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.Server server14 = restAdapter10.server;
        retrofit.Server server15 = restAdapter10.server;
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        java.util.concurrent.Executor executor28 = restAdapter26.callbackExecutor;
        retrofit.converter.Converter converter29 = null;
        restAdapter26.converter = converter29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.Profiler profiler43 = restAdapter42.profiler;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean45 = logLevel44.log();
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        restAdapter42.log = log47;
        builder31.log = log47;
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.RestAdapter.Builder builder61 = builder31.setLogLevel(logLevel59);
        java.util.concurrent.Executor executor62 = null;
        builder61.callbackExecutor = executor62;
        retrofit.ErrorHandler errorHandler64 = null;
        builder61.errorHandler = errorHandler64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.Profiler profiler68 = null;
        builder66.profiler = profiler68;
        retrofit.Server server70 = null;
        builder66.server = server70;
        java.util.concurrent.Executor executor72 = builder66.callbackExecutor;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.client.Client.Provider provider75 = builder73.clientProvider;
        builder66.clientProvider = provider75;
        builder61.clientProvider = provider75;
        restAdapter26.clientProvider = provider75;
        restAdapter10.clientProvider = provider75;
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter10.logLevel;
        boolean boolean81 = logLevel80.log();
        boolean boolean82 = logLevel80.log();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(provider75);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05164");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        retrofit.ErrorHandler errorHandler16 = restAdapter10.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        builder18.log = log34;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder18.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        java.util.concurrent.Executor executor55 = builder52.httpExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        builder52.httpExecutor = executor62;
        builder51.callbackExecutor = executor62;
        builder48.httpExecutor = executor62;
        retrofit.Server server66 = null;
        retrofit.client.Client.Provider provider67 = null;
        java.util.concurrent.Executor executor68 = null;
        java.util.concurrent.Executor executor69 = null;
        retrofit.RequestInterceptor requestInterceptor70 = null;
        retrofit.converter.Converter converter71 = null;
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Log log74 = null;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server66, provider67, executor68, executor69, requestInterceptor70, converter71, profiler72, errorHandler73, log74, logLevel75);
        retrofit.Profiler profiler77 = restAdapter76.profiler;
        retrofit.ErrorHandler errorHandler78 = restAdapter76.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.setLogLevel(logLevel79);
        retrofit.Server server81 = restAdapter76.server;
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.Builder builder83 = builder48.setLogLevel(logLevel82);
        retrofit.ErrorHandler errorHandler84 = builder83.errorHandler;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        builder85.ensureSaneDefaults();
        retrofit.client.Client.Provider provider87 = builder85.clientProvider;
        retrofit.ErrorHandler errorHandler88 = builder85.errorHandler;
        retrofit.RestAdapter.Builder builder89 = new retrofit.RestAdapter.Builder();
        builder89.ensureSaneDefaults();
        retrofit.client.Client.Provider provider91 = builder89.clientProvider;
        retrofit.ErrorHandler errorHandler92 = builder89.errorHandler;
        retrofit.RestAdapter.Builder builder93 = builder85.setErrorHandler(errorHandler92);
        builder83.errorHandler = errorHandler92;
        restAdapter10.errorHandler = errorHandler92;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler77);
        org.junit.Assert.assertNull(errorHandler78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(errorHandler84);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(provider91);
        org.junit.Assert.assertNotNull(errorHandler92);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05165");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.LogLevel logLevel35 = builder30.logLevel;
        java.util.concurrent.Executor executor36 = builder30.callbackExecutor;
        retrofit.ErrorHandler errorHandler37 = builder30.errorHandler;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.ErrorHandler errorHandler50 = restAdapter48.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.setLogLevel(logLevel51);
        retrofit.Server server53 = restAdapter48.server;
        retrofit.Server server54 = restAdapter48.server;
        retrofit.converter.Converter converter55 = restAdapter48.converter;
        java.util.concurrent.Executor executor56 = restAdapter48.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter48.logLevel;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.Profiler profiler69 = restAdapter68.profiler;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean71 = logLevel70.log();
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        restAdapter68.log = log73;
        retrofit.ErrorHandler errorHandler75 = null;
        restAdapter68.errorHandler = errorHandler75;
        retrofit.RequestInterceptor requestInterceptor77 = null;
        restAdapter68.requestInterceptor = requestInterceptor77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        retrofit.ErrorHandler errorHandler82 = builder79.errorHandler;
        restAdapter68.errorHandler = errorHandler82;
        restAdapter48.errorHandler = errorHandler82;
        builder30.errorHandler = errorHandler82;
        java.util.concurrent.Executor executor86 = builder30.callbackExecutor;
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder89 = builder30.setServer("hi!");
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNull(errorHandler37);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertNull(errorHandler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNull(executor86);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05166");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean41 = logLevel40.log();
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log44 = null;
        restAdapter42.log = log44;
        retrofit.Profiler profiler46 = null;
        restAdapter42.profiler = profiler46;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter42.requestInterceptor;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.Profiler profiler61 = restAdapter60.profiler;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean63 = logLevel62.log();
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        restAdapter60.log = log65;
        builder49.log = log65;
        retrofit.Server server68 = null;
        retrofit.client.Client.Provider provider69 = null;
        java.util.concurrent.Executor executor70 = null;
        java.util.concurrent.Executor executor71 = null;
        retrofit.RequestInterceptor requestInterceptor72 = null;
        retrofit.converter.Converter converter73 = null;
        retrofit.Profiler profiler74 = null;
        retrofit.ErrorHandler errorHandler75 = null;
        retrofit.RestAdapter.Log log76 = null;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server68, provider69, executor70, executor71, requestInterceptor72, converter73, profiler74, errorHandler75, log76, logLevel77);
        retrofit.RestAdapter.Builder builder79 = builder49.setLogLevel(logLevel77);
        java.util.concurrent.Executor executor80 = null;
        builder79.callbackExecutor = executor80;
        retrofit.converter.Converter converter82 = builder79.converter;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider84 = null;
        builder83.clientProvider = provider84;
        builder83.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor87 = builder83.requestInterceptor;
        builder79.requestInterceptor = requestInterceptor87;
        restAdapter42.requestInterceptor = requestInterceptor87;
        retrofit.RestAdapter.Builder builder90 = builder0.setRequestInterceptor(requestInterceptor87);
        retrofit.RestAdapter.Builder builder92 = builder90.setServer("hi!");
        builder90.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor94 = builder90.requestInterceptor;
        retrofit.Server server95 = builder90.server;
        retrofit.RestAdapter restAdapter96 = builder90.build();
        java.util.concurrent.Executor executor97 = builder90.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(requestInterceptor48);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(converter82);
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(requestInterceptor94);
        org.junit.Assert.assertNotNull(server95);
        org.junit.Assert.assertNotNull(restAdapter96);
        org.junit.Assert.assertNotNull(executor97);
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05167");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Log log15 = restAdapter10.log;
        retrofit.RestAdapter.Log log16 = null;
        restAdapter10.log = log16;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter10.logLevel;
        retrofit.ErrorHandler errorHandler19 = null;
        restAdapter10.errorHandler = errorHandler19;
        retrofit.client.Client.Provider provider21 = null;
        restAdapter10.clientProvider = provider21;
        retrofit.Profiler profiler23 = null;
        restAdapter10.profiler = profiler23;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter10.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05168");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.Server server31 = builder0.server;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.Profiler profiler44 = restAdapter43.profiler;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean46 = logLevel45.log();
        restAdapter43.logLevel = logLevel45;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        restAdapter43.log = log48;
        builder32.log = log48;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = null;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder32.setLogLevel(logLevel60);
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        log63.log("hi!");
        builder0.log = log63;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        builder0.requestInterceptor = requestInterceptor68;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05169");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.lang.String str8 = request6.getMethod();
        java.lang.String str9 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        java.lang.String str11 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        java.lang.String str14 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList17 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList18 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList18);
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05170");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider5 = null;
        builder4.clientProvider = provider5;
        builder4.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor8 = builder4.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider11 = null;
        builder10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = builder10.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.Profiler profiler16 = null;
        builder14.profiler = profiler16;
        retrofit.Server server18 = null;
        builder14.server = server18;
        java.util.concurrent.Executor executor20 = builder14.callbackExecutor;
        builder10.httpExecutor = executor20;
        builder9.callbackExecutor = executor20;
        builder4.callbackExecutor = executor20;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.Profiler profiler26 = null;
        builder24.profiler = profiler26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.Server server32 = null;
        builder28.server = server32;
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        builder24.callbackExecutor = executor34;
        retrofit.RestAdapter.Builder builder36 = builder0.setExecutors(executor20, executor34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder69 = builder67.setServer("hi!");
        retrofit.Server server70 = null;
        builder69.server = server70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        retrofit.ErrorHandler errorHandler75 = builder72.errorHandler;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.client.Client.Provider provider78 = builder76.clientProvider;
        retrofit.ErrorHandler errorHandler79 = builder76.errorHandler;
        retrofit.RestAdapter.Builder builder80 = builder72.setErrorHandler(errorHandler79);
        retrofit.Server server81 = builder72.server;
        retrofit.converter.Converter converter82 = builder72.converter;
        builder69.converter = converter82;
        retrofit.RestAdapter.Builder builder84 = builder36.setConverter(converter82);
        builder84.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor86 = builder84.requestInterceptor;
        retrofit.Profiler profiler87 = null;
        builder84.profiler = profiler87;
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(errorHandler79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(server81);
        org.junit.Assert.assertNotNull(converter82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(requestInterceptor86);
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05171");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        java.lang.String str12 = request10.getMethod();
        java.lang.String str13 = request10.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request10.getHeaders();
        java.util.List<retrofit.client.Header> headerList15 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.getBody();
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request17.getHeaders();
        java.lang.String str21 = request17.getMethod();
        java.util.List<retrofit.client.Header> headerList22 = request17.getHeaders();
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "hi!", headerList22, typedOutput23);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(headerList22);
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05172");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel19;
        retrofit.RestAdapter.Log log21 = restAdapter10.log;
        retrofit.Server server22 = restAdapter10.server;
        retrofit.client.Header[] headerArray25 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList26 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList26, headerArray25);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList26, typedOutput28);
        java.lang.String str30 = request29.getMethod();
        java.lang.String str31 = request29.getUrl();
        retrofit.client.Request request32 = restAdapter10.logAndReplaceRequest(request29);
        java.lang.String str33 = request32.getMethod();
        java.lang.String str34 = request32.getMethod();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertNotNull(headerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05173");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.converter.Converter converter33 = builder30.converter;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        builder34.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor38 = builder34.requestInterceptor;
        builder30.requestInterceptor = requestInterceptor38;
        retrofit.Server server40 = null;
        builder30.server = server40;
        retrofit.Profiler profiler42 = null;
        builder30.profiler = profiler42;
        retrofit.Server server44 = builder30.server;
        retrofit.RestAdapter.Log log45 = builder30.log;
        retrofit.Profiler profiler46 = null;
        builder30.profiler = profiler46;
        java.util.concurrent.Executor executor48 = builder30.httpExecutor;
        retrofit.ErrorHandler errorHandler49 = builder30.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(errorHandler49);
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05174");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.RestAdapter.Log log21 = restAdapter10.log;
        retrofit.Profiler profiler22 = restAdapter10.profiler;
        retrofit.client.Header[] headerArray25 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList26 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList26, headerArray25);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList26, typedOutput28);
        java.lang.String str30 = request29.getMethod();
        retrofit.mime.TypedOutput typedOutput31 = request29.getBody();
        java.lang.String str32 = request29.getUrl();
        java.lang.String str33 = request29.getMethod();
        retrofit.client.Request request34 = restAdapter10.logAndReplaceRequest(request29);
        java.lang.String str35 = request29.getUrl();
        java.lang.String str36 = request29.getUrl();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(headerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(request34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05175");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.Server server17 = restAdapter10.server;
        retrofit.Profiler profiler18 = null;
        restAdapter10.profiler = profiler18;
        java.util.concurrent.Executor executor20 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel21 = null;
        restAdapter10.setLogLevel(logLevel21);
        retrofit.converter.Converter converter23 = restAdapter10.converter;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.Profiler profiler35 = restAdapter34.profiler;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean37 = logLevel36.log();
        restAdapter34.logLevel = logLevel36;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        restAdapter34.log = log39;
        retrofit.ErrorHandler errorHandler41 = null;
        restAdapter34.errorHandler = errorHandler41;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        restAdapter34.requestInterceptor = requestInterceptor43;
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        retrofit.Profiler profiler56 = restAdapter55.profiler;
        retrofit.ErrorHandler errorHandler57 = restAdapter55.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider61 = null;
        builder60.clientProvider = provider61;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = null;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel72);
        retrofit.converter.Converter converter74 = restAdapter73.converter;
        retrofit.ErrorHandler errorHandler75 = restAdapter73.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter73.logLevel;
        builder60.logLevel = logLevel76;
        restAdapter55.setLogLevel(logLevel76);
        restAdapter34.logLevel = logLevel76;
        retrofit.Server server80 = null;
        retrofit.client.Client.Provider provider81 = null;
        java.util.concurrent.Executor executor82 = null;
        java.util.concurrent.Executor executor83 = null;
        retrofit.RequestInterceptor requestInterceptor84 = null;
        retrofit.converter.Converter converter85 = null;
        retrofit.Profiler profiler86 = null;
        retrofit.ErrorHandler errorHandler87 = null;
        retrofit.RestAdapter.Log log88 = null;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server80, provider81, executor82, executor83, requestInterceptor84, converter85, profiler86, errorHandler87, log88, logLevel89);
        retrofit.converter.Converter converter91 = restAdapter90.converter;
        retrofit.ErrorHandler errorHandler92 = restAdapter90.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter90.logLevel;
        restAdapter34.setLogLevel(logLevel93);
        retrofit.client.Client.Provider provider95 = restAdapter34.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel96 = restAdapter34.logLevel;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.setLogLevel(logLevel96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertNull(errorHandler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(errorHandler75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter91);
        org.junit.Assert.assertNull(errorHandler92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05176");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.Profiler profiler15 = null;
        restAdapter11.profiler = profiler15;
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter11.requestInterceptor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider19 = null;
        builder18.clientProvider = provider19;
        retrofit.Server server21 = null;
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.Profiler profiler25 = null;
        builder23.profiler = profiler25;
        retrofit.Server server27 = null;
        builder23.server = server27;
        java.util.concurrent.Executor executor29 = builder23.callbackExecutor;
        builder18.httpExecutor = executor29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.Profiler profiler33 = null;
        builder31.profiler = profiler33;
        retrofit.Server server35 = null;
        builder31.server = server35;
        retrofit.client.Client.Provider provider37 = builder31.clientProvider;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.Profiler profiler50 = restAdapter49.profiler;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean52 = logLevel51.log();
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        restAdapter49.log = log54;
        builder38.log = log54;
        retrofit.Server server57 = null;
        retrofit.client.Client.Provider provider58 = null;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.converter.Converter converter62 = null;
        retrofit.Profiler profiler63 = null;
        retrofit.ErrorHandler errorHandler64 = null;
        retrofit.RestAdapter.Log log65 = null;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server57, provider58, executor59, executor60, requestInterceptor61, converter62, profiler63, errorHandler64, log65, logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder38.setLogLevel(logLevel66);
        java.util.concurrent.Executor executor69 = null;
        builder68.callbackExecutor = executor69;
        retrofit.converter.Converter converter71 = builder68.converter;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider73 = null;
        builder72.clientProvider = provider73;
        builder72.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor76 = builder72.requestInterceptor;
        builder68.requestInterceptor = requestInterceptor76;
        retrofit.Server server78 = null;
        builder68.server = server78;
        retrofit.RequestInterceptor requestInterceptor80 = builder68.requestInterceptor;
        builder31.requestInterceptor = requestInterceptor80;
        builder18.requestInterceptor = requestInterceptor80;
        restAdapter11.requestInterceptor = requestInterceptor80;
        retrofit.Profiler profiler84 = null;
        restAdapter11.profiler = profiler84;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(converter71);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(requestInterceptor80);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05177");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler4 = null;
        restAdapter0.profiler = profiler4;
        retrofit.Profiler profiler6 = restAdapter0.profiler;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = null;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel16);
        retrofit.converter.Converter converter18 = restAdapter17.converter;
        retrofit.Profiler profiler19 = null;
        restAdapter17.profiler = profiler19;
        java.util.concurrent.Executor executor21 = restAdapter17.callbackExecutor;
        retrofit.RestAdapter.Log log22 = restAdapter17.log;
        retrofit.RestAdapter.Log log23 = null;
        restAdapter17.log = log23;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter17.logLevel;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider27 = null;
        builder26.clientProvider = provider27;
        retrofit.converter.Converter converter29 = null;
        builder26.converter = converter29;
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor32 = builder26.callbackExecutor;
        restAdapter17.callbackExecutor = executor32;
        restAdapter0.callbackExecutor = executor32;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.Profiler profiler46 = restAdapter45.profiler;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean48 = logLevel47.log();
        restAdapter45.logLevel = logLevel47;
        retrofit.Server server50 = null;
        restAdapter45.server = server50;
        java.util.concurrent.Executor executor52 = restAdapter45.callbackExecutor;
        retrofit.Profiler profiler53 = restAdapter45.profiler;
        retrofit.Server server54 = null;
        restAdapter45.server = server54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        retrofit.converter.Converter converter63 = builder56.converter;
        retrofit.client.Client.Provider provider64 = builder56.clientProvider;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider67 = null;
        builder66.clientProvider = provider67;
        java.util.concurrent.Executor executor69 = builder66.httpExecutor;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.Profiler profiler72 = null;
        builder70.profiler = profiler72;
        retrofit.Server server74 = null;
        builder70.server = server74;
        java.util.concurrent.Executor executor76 = builder70.callbackExecutor;
        builder66.httpExecutor = executor76;
        builder65.callbackExecutor = executor76;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.Profiler profiler81 = null;
        builder79.profiler = profiler81;
        retrofit.Server server83 = null;
        builder79.server = server83;
        java.util.concurrent.Executor executor85 = builder79.callbackExecutor;
        retrofit.RestAdapter.Builder builder86 = builder56.setExecutors(executor76, executor85);
        retrofit.RequestInterceptor requestInterceptor87 = builder86.requestInterceptor;
        restAdapter45.requestInterceptor = requestInterceptor87;
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter45.getLogLevel();
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.setLogLevel(logLevel89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(converter63);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05178");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.ErrorHandler errorHandler33 = restAdapter31.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider37 = null;
        builder36.clientProvider = provider37;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.converter.Converter converter50 = restAdapter49.converter;
        retrofit.ErrorHandler errorHandler51 = restAdapter49.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter49.logLevel;
        builder36.logLevel = logLevel52;
        restAdapter31.setLogLevel(logLevel52);
        restAdapter10.logLevel = logLevel52;
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter10.new RestHandler();
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        restAdapter57.log = log58;
        retrofit.RequestInterceptor requestInterceptor60 = restAdapter57.requestInterceptor;
        retrofit.client.Client.Provider provider61 = restAdapter57.clientProvider;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider63 = null;
        builder62.clientProvider = provider63;
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.client.Client.Provider provider68 = builder66.clientProvider;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider71 = builder69.clientProvider;
        builder66.clientProvider = provider71;
        builder62.clientProvider = provider71;
        java.util.concurrent.Executor executor74 = builder62.httpExecutor;
        retrofit.client.Client.Provider provider75 = builder62.clientProvider;
        java.util.concurrent.Executor executor76 = builder62.httpExecutor;
        java.util.concurrent.Executor executor77 = builder62.callbackExecutor;
        restAdapter57.httpExecutor = executor77;
        restAdapter10.httpExecutor = executor77;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNull(requestInterceptor60);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(provider75);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(executor77);
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05179");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider8 = null;
        builder7.clientProvider = provider8;
        java.util.concurrent.Executor executor10 = builder7.httpExecutor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.Profiler profiler13 = null;
        builder11.profiler = profiler13;
        retrofit.Server server15 = null;
        builder11.server = server15;
        java.util.concurrent.Executor executor17 = builder11.callbackExecutor;
        builder7.httpExecutor = executor17;
        retrofit.RestAdapter.LogLevel logLevel19 = builder7.logLevel;
        builder0.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.Profiler profiler23 = null;
        builder21.profiler = profiler23;
        retrofit.Server server25 = null;
        builder21.server = server25;
        retrofit.client.Client.Provider provider27 = builder21.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter39.log = log44;
        builder28.log = log44;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder28.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor59 = null;
        builder58.callbackExecutor = executor59;
        retrofit.converter.Converter converter61 = builder58.converter;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider63 = null;
        builder62.clientProvider = provider63;
        builder62.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor66 = builder62.requestInterceptor;
        builder58.requestInterceptor = requestInterceptor66;
        retrofit.Server server68 = null;
        builder58.server = server68;
        retrofit.RequestInterceptor requestInterceptor70 = builder58.requestInterceptor;
        builder21.requestInterceptor = requestInterceptor70;
        retrofit.RestAdapter.Builder builder72 = builder0.setRequestInterceptor(requestInterceptor70);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider74 = null;
        builder73.clientProvider = provider74;
        retrofit.converter.Converter converter76 = null;
        builder73.converter = converter76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.client.Client.Provider provider80 = builder78.clientProvider;
        retrofit.ErrorHandler errorHandler81 = builder78.errorHandler;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.client.Client.Provider provider84 = builder82.clientProvider;
        retrofit.ErrorHandler errorHandler85 = builder82.errorHandler;
        retrofit.RestAdapter.Builder builder86 = builder78.setErrorHandler(errorHandler85);
        builder73.errorHandler = errorHandler85;
        retrofit.RestAdapter.Builder builder88 = builder0.setErrorHandler(errorHandler85);
        retrofit.Profiler profiler89 = builder88.profiler;
        java.util.concurrent.Executor executor90 = builder88.callbackExecutor;
        retrofit.Server server91 = builder88.server;
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(provider80);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(profiler89);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNull(server91);
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05180");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean19 = logLevel18.log();
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log21;
        builder5.log = log21;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder5.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("hi!");
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        java.util.concurrent.Executor executor42 = builder39.httpExecutor;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        builder39.httpExecutor = executor49;
        builder38.callbackExecutor = executor49;
        builder35.httpExecutor = executor49;
        builder0.httpExecutor = executor49;
        retrofit.RestAdapter.LogLevel logLevel54 = builder0.logLevel;
        retrofit.RequestInterceptor requestInterceptor55 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor55);
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05181");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel19;
        retrofit.Profiler profiler21 = restAdapter10.profiler;
        retrofit.Server server22 = restAdapter10.server;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter10.new RestHandler();
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.converter.Converter converter35 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler36 = restAdapter34.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.logLevel;
        restAdapter10.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        retrofit.RestAdapter.LogLevel logLevel42 = builder39.logLevel;
        retrofit.RestAdapter.LogLevel logLevel43 = builder39.logLevel;
        restAdapter10.logLevel = logLevel43;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05182");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.Profiler profiler4 = null;
        builder0.profiler = profiler4;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel7 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider9 = null;
        builder8.clientProvider = provider9;
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.Profiler profiler12 = builder8.profiler;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.Profiler profiler15 = null;
        builder13.profiler = profiler15;
        retrofit.Server server17 = null;
        builder13.server = server17;
        java.util.concurrent.Executor executor19 = builder13.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder20.clientProvider;
        builder13.clientProvider = provider22;
        builder8.clientProvider = provider22;
        retrofit.RestAdapter.Builder builder25 = builder0.setClient(provider22);
        retrofit.converter.Converter converter26 = builder0.converter;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(converter26);
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05183");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.converter.Converter converter15 = restAdapter11.converter;
        retrofit.converter.Converter converter16 = restAdapter11.converter;
        retrofit.client.Client.Provider provider17 = restAdapter11.clientProvider;
        retrofit.RequestInterceptor requestInterceptor18 = restAdapter11.requestInterceptor;
        retrofit.Server server19 = restAdapter11.server;
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter11.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(requestInterceptor18);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05184");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler5 = restAdapter4.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor7 = restAdapter4.requestInterceptor;
        retrofit.Profiler profiler8 = null;
        restAdapter4.profiler = profiler8;
        retrofit.Server server10 = null;
        restAdapter4.server = server10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider13 = null;
        builder12.clientProvider = provider13;
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider17 = null;
        builder16.clientProvider = provider17;
        builder16.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor20 = builder16.requestInterceptor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider23 = null;
        builder22.clientProvider = provider23;
        java.util.concurrent.Executor executor25 = builder22.httpExecutor;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.Profiler profiler28 = null;
        builder26.profiler = profiler28;
        retrofit.Server server30 = null;
        builder26.server = server30;
        java.util.concurrent.Executor executor32 = builder26.callbackExecutor;
        builder22.httpExecutor = executor32;
        builder21.callbackExecutor = executor32;
        builder16.callbackExecutor = executor32;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.Profiler profiler38 = null;
        builder36.profiler = profiler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.Profiler profiler42 = null;
        builder40.profiler = profiler42;
        retrofit.Server server44 = null;
        builder40.server = server44;
        java.util.concurrent.Executor executor46 = builder40.callbackExecutor;
        builder36.callbackExecutor = executor46;
        retrofit.RestAdapter.Builder builder48 = builder12.setExecutors(executor32, executor46);
        retrofit.RequestInterceptor requestInterceptor49 = builder12.requestInterceptor;
        restAdapter4.requestInterceptor = requestInterceptor49;
        retrofit.RestAdapter.Builder builder51 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.Profiler profiler52 = builder51.profiler;
        retrofit.Profiler profiler53 = builder51.profiler;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertNull(errorHandler5);
        org.junit.Assert.assertNull(requestInterceptor7);
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(profiler53);
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05185");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.RestAdapter.Log log33 = builder30.log;
        retrofit.Profiler profiler34 = null;
        builder30.profiler = profiler34;
        retrofit.ErrorHandler errorHandler36 = builder30.errorHandler;
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = null;
        builder40.clientProvider = provider41;
        builder40.ensureSaneDefaults();
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = null;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel53);
        retrofit.Profiler profiler55 = restAdapter54.profiler;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean57 = logLevel56.log();
        restAdapter54.logLevel = logLevel56;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        restAdapter54.log = log59;
        builder40.log = log59;
        retrofit.RestAdapter.Builder builder62 = builder38.setLog(log59);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.client.Client.Provider provider65 = builder63.clientProvider;
        retrofit.ErrorHandler errorHandler66 = builder63.errorHandler;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.client.Client.Provider provider69 = builder67.clientProvider;
        retrofit.ErrorHandler errorHandler70 = builder67.errorHandler;
        retrofit.RestAdapter.Builder builder71 = builder63.setErrorHandler(errorHandler70);
        retrofit.Server server72 = builder63.server;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.Profiler profiler75 = null;
        builder73.profiler = profiler75;
        retrofit.Server server77 = null;
        builder73.server = server77;
        java.util.concurrent.Executor executor79 = builder73.callbackExecutor;
        retrofit.converter.Converter converter80 = builder73.converter;
        retrofit.RestAdapter.Builder builder81 = builder63.setConverter(converter80);
        retrofit.converter.Converter converter82 = builder81.converter;
        retrofit.RestAdapter.Builder builder83 = builder38.setConverter(converter82);
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider85 = null;
        builder84.clientProvider = provider85;
        retrofit.converter.Converter converter87 = null;
        builder84.converter = converter87;
        builder84.ensureSaneDefaults();
        retrofit.Server server90 = builder84.server;
        retrofit.RequestInterceptor requestInterceptor91 = builder84.requestInterceptor;
        retrofit.RestAdapter.Builder builder92 = builder38.setRequestInterceptor(requestInterceptor91);
        builder38.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor94 = builder38.requestInterceptor;
        retrofit.RestAdapter.Builder builder95 = builder30.setRequestInterceptor(requestInterceptor94);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(provider65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(converter80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(converter82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(server90);
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(requestInterceptor94);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05186");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        java.util.concurrent.Executor executor47 = builder30.httpExecutor;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder48.clientProvider;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider53 = builder51.clientProvider;
        builder48.clientProvider = provider53;
        retrofit.RestAdapter.Builder builder55 = builder30.setClient(provider53);
        retrofit.client.Client.Provider provider56 = builder55.clientProvider;
        retrofit.RequestInterceptor requestInterceptor57 = builder55.requestInterceptor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder55.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(provider53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNull(requestInterceptor57);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05187");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server11 = restAdapter10.server;
        java.util.concurrent.Executor executor12 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(provider14);
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05188");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.converter.Converter converter29 = restAdapter28.converter;
        retrofit.ErrorHandler errorHandler30 = restAdapter28.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter28.logLevel;
        builder15.logLevel = logLevel31;
        restAdapter10.setLogLevel(logLevel31);
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        restAdapter34.callbackExecutor = executor41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        retrofit.converter.Converter converter50 = builder43.converter;
        restAdapter34.converter = converter50;
        restAdapter10.converter = converter50;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = builder53.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder56 = builder53.setLogLevel(logLevel55);
        restAdapter10.setLogLevel(logLevel55);
        retrofit.ErrorHandler errorHandler58 = restAdapter10.errorHandler;
        retrofit.ErrorHandler errorHandler59 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log60 = null;
        restAdapter10.log = log60;
        retrofit.Profiler profiler62 = restAdapter10.profiler;
        retrofit.client.Response response64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response66 = restAdapter10.logAndReplaceResponse("", response64, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(converter50);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(errorHandler58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertNull(profiler62);
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05189");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        retrofit.Server server47 = builder30.server;
        retrofit.ErrorHandler errorHandler48 = builder30.errorHandler;
        retrofit.RestAdapter.Builder builder50 = builder30.setServer("hi!");
        retrofit.Server server51 = builder30.server;
        java.util.concurrent.Executor executor52 = builder30.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNull(errorHandler48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNull(executor52);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05190");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Log log36 = builder30.log;
        retrofit.client.Client.Provider provider37 = builder30.clientProvider;
        java.util.concurrent.Executor executor38 = builder30.callbackExecutor;
        retrofit.RestAdapter.Log log39 = builder30.log;
        log39.log("hi!");
        log39.log("");
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(log39);
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05191");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.Server server15 = restAdapter10.server;
        retrofit.Server server16 = restAdapter10.server;
        retrofit.converter.Converter converter17 = restAdapter10.converter;
        java.util.concurrent.Executor executor18 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.Log log20 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor22 = restAdapter10.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor22);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05192");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Server server12 = restAdapter10.server;
        retrofit.Profiler profiler13 = null;
        restAdapter10.profiler = profiler13;
        retrofit.Profiler profiler15 = null;
        restAdapter10.profiler = profiler15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler29 = restAdapter28.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        restAdapter28.logLevel = logLevel30;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        restAdapter28.log = log33;
        builder17.log = log33;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder17.setLogLevel(logLevel45);
        java.util.concurrent.Executor executor48 = null;
        builder47.callbackExecutor = executor48;
        retrofit.ErrorHandler errorHandler50 = null;
        builder47.errorHandler = errorHandler50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.client.Client.Provider provider54 = builder52.clientProvider;
        retrofit.RestAdapter.Builder builder55 = builder47.setClient(provider54);
        retrofit.Server server56 = null;
        builder47.server = server56;
        retrofit.RequestInterceptor requestInterceptor58 = builder47.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel59 = builder47.logLevel;
        boolean boolean60 = logLevel59.log();
        restAdapter10.setLogLevel(logLevel59);
        retrofit.RequestInterceptor requestInterceptor62 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(provider54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(requestInterceptor58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(requestInterceptor62);
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05193");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel19;
        retrofit.Profiler profiler21 = restAdapter10.profiler;
        retrofit.Server server22 = null;
        restAdapter10.server = server22;
        retrofit.converter.Converter converter24 = restAdapter10.converter;
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter10.requestInterceptor;
        retrofit.ErrorHandler errorHandler26 = restAdapter10.errorHandler;
        retrofit.converter.Converter converter27 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler28 = restAdapter10.errorHandler;
        java.lang.Throwable throwable29 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable29, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(converter24);
        org.junit.Assert.assertNull(requestInterceptor25);
        org.junit.Assert.assertNull(errorHandler26);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(errorHandler28);
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05194");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder13.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder13.errorHandler;
        restAdapter11.errorHandler = errorHandler16;
        retrofit.RestAdapter.Log log18 = restAdapter11.log;
        retrofit.client.Client.Provider provider19 = restAdapter11.clientProvider;
        retrofit.client.Client.Provider provider20 = restAdapter11.clientProvider;
        retrofit.client.Client.Provider provider21 = null;
        restAdapter11.clientProvider = provider21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.Profiler profiler35 = restAdapter34.profiler;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean37 = logLevel36.log();
        restAdapter34.logLevel = logLevel36;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        restAdapter34.log = log39;
        builder23.log = log39;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder23.setLogLevel(logLevel51);
        java.util.concurrent.Executor executor54 = null;
        builder53.callbackExecutor = executor54;
        retrofit.converter.Converter converter56 = builder53.converter;
        java.util.concurrent.Executor executor57 = builder53.callbackExecutor;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.Profiler profiler69 = restAdapter68.profiler;
        retrofit.ErrorHandler errorHandler70 = restAdapter68.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider74 = null;
        builder73.clientProvider = provider74;
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        builder77.ensureSaneDefaults();
        retrofit.client.Client.Provider provider79 = builder77.clientProvider;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.client.Client.Provider provider82 = builder80.clientProvider;
        builder77.clientProvider = provider82;
        builder73.clientProvider = provider82;
        java.util.concurrent.Executor executor85 = builder73.httpExecutor;
        java.util.concurrent.Executor executor86 = builder73.callbackExecutor;
        restAdapter68.callbackExecutor = executor86;
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter68.logLevel;
        retrofit.RestAdapter.Builder builder89 = builder53.setLogLevel(logLevel88);
        retrofit.RestAdapter.LogLevel logLevel90 = builder89.logLevel;
        restAdapter11.setLogLevel(logLevel90);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter11.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNull(errorHandler70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05195");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Server server12 = restAdapter10.server;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel38);
        restAdapter10.log = log36;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel41);
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel52);
        retrofit.RestAdapter.Log log54 = restAdapter53.log;
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = null;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel72);
        retrofit.Profiler profiler74 = restAdapter73.profiler;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean76 = logLevel75.log();
        restAdapter73.logLevel = logLevel75;
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        restAdapter73.log = log78;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log78, logLevel80);
        restAdapter53.log = log78;
        restAdapter10.log = log78;
        retrofit.converter.Converter converter84 = restAdapter10.converter;
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter10.getLogLevel();
        retrofit.Server server86 = restAdapter10.server;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server86);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05196");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = null;
        restAdapter10.converter = converter11;
        retrofit.ErrorHandler errorHandler13 = restAdapter10.errorHandler;
        retrofit.Server server14 = restAdapter10.server;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNull(server14);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05197");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.converter.Converter converter7 = builder0.converter;
        retrofit.client.Client.Provider provider8 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider11 = null;
        builder10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = builder10.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.Profiler profiler16 = null;
        builder14.profiler = profiler16;
        retrofit.Server server18 = null;
        builder14.server = server18;
        java.util.concurrent.Executor executor20 = builder14.callbackExecutor;
        builder10.httpExecutor = executor20;
        builder9.callbackExecutor = executor20;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.Profiler profiler25 = null;
        builder23.profiler = profiler25;
        retrofit.Server server27 = null;
        builder23.server = server27;
        java.util.concurrent.Executor executor29 = builder23.callbackExecutor;
        retrofit.RestAdapter.Builder builder30 = builder0.setExecutors(executor20, executor29);
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.Profiler profiler34 = null;
        builder32.profiler = profiler34;
        retrofit.Server server36 = null;
        builder32.server = server36;
        java.util.concurrent.Executor executor38 = builder32.callbackExecutor;
        restAdapter31.callbackExecutor = executor38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = null;
        builder40.clientProvider = provider41;
        retrofit.converter.Converter converter43 = null;
        builder40.converter = converter43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.client.Client.Provider provider47 = builder45.clientProvider;
        retrofit.ErrorHandler errorHandler48 = builder45.errorHandler;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.client.Client.Provider provider51 = builder49.clientProvider;
        retrofit.ErrorHandler errorHandler52 = builder49.errorHandler;
        retrofit.RestAdapter.Builder builder53 = builder45.setErrorHandler(errorHandler52);
        builder40.errorHandler = errorHandler52;
        restAdapter31.errorHandler = errorHandler52;
        builder30.errorHandler = errorHandler52;
        retrofit.Server server57 = builder30.server;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider59 = null;
        builder58.clientProvider = provider59;
        java.util.concurrent.Executor executor61 = builder58.httpExecutor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.Profiler profiler64 = null;
        builder62.profiler = profiler64;
        retrofit.Server server66 = null;
        builder62.server = server66;
        java.util.concurrent.Executor executor68 = builder62.callbackExecutor;
        builder58.httpExecutor = executor68;
        builder30.callbackExecutor = executor68;
        retrofit.RequestInterceptor requestInterceptor71 = builder30.requestInterceptor;
        retrofit.Profiler profiler72 = null;
        builder30.profiler = profiler72;
        retrofit.Profiler profiler74 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder75 = builder30.setProfiler(profiler74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNotNull(converter7);
        org.junit.Assert.assertNotNull(provider8);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(provider47);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(requestInterceptor71);
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05198");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter12 = null;
        restAdapter11.converter = converter12;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter11.setLogLevel(logLevel14);
        retrofit.Server server16 = null;
        restAdapter11.server = server16;
        retrofit.Profiler profiler18 = null;
        restAdapter11.profiler = profiler18;
        java.util.concurrent.Executor executor20 = restAdapter11.callbackExecutor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log37;
        builder21.log = log37;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder21.setLogLevel(logLevel49);
        java.util.concurrent.Executor executor52 = null;
        builder51.callbackExecutor = executor52;
        retrofit.RestAdapter.Log log54 = builder51.log;
        retrofit.RequestInterceptor requestInterceptor55 = builder51.requestInterceptor;
        retrofit.Profiler profiler56 = null;
        builder51.profiler = profiler56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider59 = null;
        builder58.clientProvider = provider59;
        builder58.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor62 = builder58.requestInterceptor;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider65 = null;
        builder64.clientProvider = provider65;
        java.util.concurrent.Executor executor67 = builder64.httpExecutor;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.Profiler profiler70 = null;
        builder68.profiler = profiler70;
        retrofit.Server server72 = null;
        builder68.server = server72;
        java.util.concurrent.Executor executor74 = builder68.callbackExecutor;
        builder64.httpExecutor = executor74;
        builder63.callbackExecutor = executor74;
        builder58.callbackExecutor = executor74;
        retrofit.RequestInterceptor requestInterceptor78 = builder58.requestInterceptor;
        builder51.requestInterceptor = requestInterceptor78;
        restAdapter11.requestInterceptor = requestInterceptor78;
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter11.getLogLevel();
        java.lang.Throwable throwable83 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable83, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05199");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.getMethod();
        java.lang.String str12 = request6.getUrl();
        java.lang.String str13 = request6.getUrl();
        java.lang.String str14 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05200");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.Profiler profiler17 = null;
        restAdapter10.profiler = profiler17;
        retrofit.Profiler profiler19 = null;
        restAdapter10.profiler = profiler19;
        retrofit.Server server21 = restAdapter10.server;
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter10.logLevel;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        restAdapter23.log = log24;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter23.requestInterceptor;
        retrofit.client.Client.Provider provider27 = restAdapter23.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider29 = null;
        builder28.clientProvider = provider29;
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.client.Client.Provider provider34 = builder32.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder35.clientProvider;
        builder32.clientProvider = provider37;
        builder28.clientProvider = provider37;
        java.util.concurrent.Executor executor40 = builder28.httpExecutor;
        retrofit.client.Client.Provider provider41 = builder28.clientProvider;
        java.util.concurrent.Executor executor42 = builder28.httpExecutor;
        java.util.concurrent.Executor executor43 = builder28.callbackExecutor;
        restAdapter23.httpExecutor = executor43;
        restAdapter10.httpExecutor = executor43;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNull(requestInterceptor26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(provider41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(executor43);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05201");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor7 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel18);
        retrofit.Profiler profiler20 = restAdapter19.profiler;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean22 = logLevel21.log();
        restAdapter19.logLevel = logLevel21;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        restAdapter19.log = log24;
        builder8.log = log24;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder8.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor39 = null;
        builder38.callbackExecutor = executor39;
        retrofit.ErrorHandler errorHandler41 = null;
        builder38.errorHandler = errorHandler41;
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Log log44 = builder38.log;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.Profiler profiler57 = restAdapter56.profiler;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean59 = logLevel58.log();
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        restAdapter56.log = log61;
        builder45.log = log61;
        retrofit.Server server64 = null;
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = null;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log72, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder45.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.client.Client.Provider provider78 = builder76.clientProvider;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        builder76.clientProvider = provider81;
        retrofit.RestAdapter.Builder builder83 = builder45.setClient(provider81);
        retrofit.Profiler profiler84 = null;
        builder45.profiler = profiler84;
        retrofit.RequestInterceptor requestInterceptor86 = builder45.requestInterceptor;
        builder45.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler88 = builder45.errorHandler;
        retrofit.RestAdapter.Builder builder89 = builder38.setErrorHandler(errorHandler88);
        builder0.errorHandler = errorHandler88;
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05202");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter10.getLogLevel();
        retrofit.ErrorHandler errorHandler17 = restAdapter10.errorHandler;
        java.util.concurrent.Executor executor18 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider22 = null;
        builder21.clientProvider = provider22;
        builder21.ensureSaneDefaults();
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.Profiler profiler36 = restAdapter35.profiler;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean38 = logLevel37.log();
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        restAdapter35.log = log40;
        builder21.log = log40;
        retrofit.RestAdapter.Builder builder43 = builder19.setLog(log40);
        java.util.concurrent.Executor executor44 = builder19.httpExecutor;
        restAdapter10.httpExecutor = executor44;
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.Profiler profiler57 = restAdapter56.profiler;
        retrofit.ErrorHandler errorHandler58 = restAdapter56.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.setLogLevel(logLevel59);
        retrofit.Profiler profiler61 = restAdapter56.profiler;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter56.logLevel;
        restAdapter10.setLogLevel(logLevel62);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertNull(errorHandler58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05203");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        restAdapter10.log = log30;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.Server server38 = null;
        builder34.server = server38;
        java.util.concurrent.Executor executor40 = builder34.callbackExecutor;
        restAdapter33.callbackExecutor = executor40;
        restAdapter10.httpExecutor = executor40;
        retrofit.RequestInterceptor requestInterceptor43 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.client.Client.Provider provider46 = builder44.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel47 = builder44.logLevel;
        builder44.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler49 = builder44.errorHandler;
        restAdapter10.errorHandler = errorHandler49;
        retrofit.client.Client.Provider provider51 = restAdapter10.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNull(provider51);
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05204");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.Profiler profiler35 = null;
        builder30.profiler = profiler35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.Profiler profiler48 = restAdapter47.profiler;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean50 = logLevel49.log();
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder52 = builder30.setLogLevel(logLevel49);
        retrofit.Profiler profiler53 = builder52.profiler;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = null;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel64);
        retrofit.Profiler profiler66 = restAdapter65.profiler;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean68 = logLevel67.log();
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        restAdapter65.log = log70;
        builder54.log = log70;
        retrofit.Server server73 = null;
        retrofit.client.Client.Provider provider74 = null;
        java.util.concurrent.Executor executor75 = null;
        java.util.concurrent.Executor executor76 = null;
        retrofit.RequestInterceptor requestInterceptor77 = null;
        retrofit.converter.Converter converter78 = null;
        retrofit.Profiler profiler79 = null;
        retrofit.ErrorHandler errorHandler80 = null;
        retrofit.RestAdapter.Log log81 = null;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server73, provider74, executor75, executor76, requestInterceptor77, converter78, profiler79, errorHandler80, log81, logLevel82);
        retrofit.RestAdapter.Builder builder84 = builder54.setLogLevel(logLevel82);
        java.util.concurrent.Executor executor85 = null;
        builder84.callbackExecutor = executor85;
        retrofit.converter.Converter converter87 = builder84.converter;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider89 = null;
        builder88.clientProvider = provider89;
        builder88.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor92 = builder88.requestInterceptor;
        builder84.requestInterceptor = requestInterceptor92;
        retrofit.Server server94 = null;
        builder84.server = server94;
        retrofit.RequestInterceptor requestInterceptor96 = builder84.requestInterceptor;
        retrofit.RestAdapter.Builder builder97 = builder52.setRequestInterceptor(requestInterceptor96);
        java.util.concurrent.Executor executor98 = builder52.httpExecutor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter99 = builder52.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(converter87);
        org.junit.Assert.assertNotNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(requestInterceptor96);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertNull(executor98);
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05205");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        retrofit.Profiler profiler4 = null;
        builder0.profiler = profiler4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider7 = null;
        builder6.clientProvider = provider7;
        java.util.concurrent.Executor executor9 = builder6.httpExecutor;
        retrofit.Profiler profiler10 = null;
        builder6.profiler = profiler10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Log log20 = null;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log20, logLevel21);
        retrofit.Profiler profiler23 = restAdapter22.profiler;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean25 = logLevel24.log();
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        restAdapter22.log = log27;
        retrofit.ErrorHandler errorHandler29 = null;
        restAdapter22.errorHandler = errorHandler29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter22.logLevel = logLevel31;
        retrofit.RestAdapter.Log log33 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.Builder builder35 = builder6.setLogLevel(logLevel34);
        builder0.logLevel = logLevel34;
        boolean boolean37 = logLevel34.log();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05206");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.converter.Converter converter7 = builder0.converter;
        retrofit.client.Client.Provider provider8 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider11 = null;
        builder10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = builder10.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.Profiler profiler16 = null;
        builder14.profiler = profiler16;
        retrofit.Server server18 = null;
        builder14.server = server18;
        java.util.concurrent.Executor executor20 = builder14.callbackExecutor;
        builder10.httpExecutor = executor20;
        builder9.callbackExecutor = executor20;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.Profiler profiler25 = null;
        builder23.profiler = profiler25;
        retrofit.Server server27 = null;
        builder23.server = server27;
        java.util.concurrent.Executor executor29 = builder23.callbackExecutor;
        retrofit.RestAdapter.Builder builder30 = builder0.setExecutors(executor20, executor29);
        retrofit.client.Client.Provider provider31 = builder0.clientProvider;
        builder0.ensureSaneDefaults();
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.converter.Converter converter44 = restAdapter43.converter;
        retrofit.Profiler profiler45 = null;
        restAdapter43.profiler = profiler45;
        java.util.concurrent.Executor executor47 = restAdapter43.callbackExecutor;
        retrofit.RestAdapter.Log log48 = restAdapter43.log;
        retrofit.RestAdapter.Log log49 = null;
        restAdapter43.log = log49;
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter43.logLevel;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        retrofit.converter.Converter converter55 = null;
        builder52.converter = converter55;
        builder52.ensureSaneDefaults();
        java.util.concurrent.Executor executor58 = builder52.callbackExecutor;
        restAdapter43.callbackExecutor = executor58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder60.clientProvider;
        retrofit.Profiler profiler63 = builder60.profiler;
        retrofit.converter.Converter converter64 = null;
        builder60.converter = converter64;
        retrofit.RequestInterceptor requestInterceptor66 = builder60.requestInterceptor;
        restAdapter43.requestInterceptor = requestInterceptor66;
        retrofit.RestAdapter.Builder builder68 = builder0.setRequestInterceptor(requestInterceptor66);
        builder0.ensureSaneDefaults();
        retrofit.client.Client client70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder0.setClient(client70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNotNull(converter7);
        org.junit.Assert.assertNotNull(provider8);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05207");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.converter.Converter converter16 = restAdapter15.converter;
        retrofit.Profiler profiler17 = null;
        restAdapter15.profiler = profiler17;
        java.util.concurrent.Executor executor19 = restAdapter15.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        builder20.log = log36;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder20.setLogLevel(logLevel48);
        java.util.concurrent.Executor executor51 = null;
        builder50.callbackExecutor = executor51;
        retrofit.ErrorHandler errorHandler53 = null;
        builder50.errorHandler = errorHandler53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.Server server59 = null;
        builder55.server = server59;
        java.util.concurrent.Executor executor61 = builder55.callbackExecutor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        builder55.clientProvider = provider64;
        builder50.clientProvider = provider64;
        restAdapter15.clientProvider = provider64;
        retrofit.RestAdapter.Builder builder68 = builder0.setClient(provider64);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider70 = null;
        builder69.clientProvider = provider70;
        builder69.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor73 = builder69.requestInterceptor;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider76 = null;
        builder75.clientProvider = provider76;
        java.util.concurrent.Executor executor78 = builder75.httpExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.Profiler profiler81 = null;
        builder79.profiler = profiler81;
        retrofit.Server server83 = null;
        builder79.server = server83;
        java.util.concurrent.Executor executor85 = builder79.callbackExecutor;
        builder75.httpExecutor = executor85;
        builder74.callbackExecutor = executor85;
        builder69.callbackExecutor = executor85;
        retrofit.RequestInterceptor requestInterceptor89 = builder69.requestInterceptor;
        retrofit.RestAdapter.Builder builder90 = builder0.setRequestInterceptor(requestInterceptor89);
        retrofit.RequestInterceptor requestInterceptor91 = builder90.requestInterceptor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder90.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNull(executor78);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(requestInterceptor89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(requestInterceptor91);
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05208");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider7 = null;
        builder6.clientProvider = provider7;
        java.util.concurrent.Executor executor9 = builder6.httpExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        builder6.httpExecutor = executor16;
        builder5.callbackExecutor = executor16;
        builder0.callbackExecutor = executor16;
        retrofit.Profiler profiler20 = builder0.profiler;
        java.util.concurrent.Executor executor21 = builder0.callbackExecutor;
        retrofit.Profiler profiler22 = builder0.profiler;
        retrofit.Profiler profiler23 = null;
        builder0.profiler = profiler23;
        retrofit.Profiler profiler25 = null;
        builder0.profiler = profiler25;
        retrofit.RestAdapter.LogLevel logLevel27 = builder0.logLevel;
        retrofit.RestAdapter.Log log28 = builder0.log;
        retrofit.RestAdapter.LogLevel logLevel29 = builder0.logLevel;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler31 = restAdapter30.errorHandler;
        retrofit.ErrorHandler errorHandler32 = restAdapter30.errorHandler;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.converter.Converter converter44 = restAdapter43.converter;
        retrofit.Profiler profiler45 = null;
        restAdapter43.profiler = profiler45;
        java.util.concurrent.Executor executor47 = restAdapter43.callbackExecutor;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Server server52 = null;
        builder48.server = server52;
        java.util.concurrent.Executor executor54 = builder48.callbackExecutor;
        retrofit.converter.Converter converter55 = builder48.converter;
        restAdapter43.converter = converter55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.Profiler profiler59 = null;
        builder57.profiler = profiler59;
        retrofit.Server server61 = null;
        builder57.server = server61;
        java.util.concurrent.Executor executor63 = builder57.callbackExecutor;
        restAdapter43.httpExecutor = executor63;
        restAdapter30.httpExecutor = executor63;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider67 = null;
        builder66.clientProvider = provider67;
        builder66.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor70 = builder66.requestInterceptor;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider73 = null;
        builder72.clientProvider = provider73;
        java.util.concurrent.Executor executor75 = builder72.httpExecutor;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.Profiler profiler78 = null;
        builder76.profiler = profiler78;
        retrofit.Server server80 = null;
        builder76.server = server80;
        java.util.concurrent.Executor executor82 = builder76.callbackExecutor;
        builder72.httpExecutor = executor82;
        builder71.callbackExecutor = executor82;
        builder66.callbackExecutor = executor82;
        retrofit.RequestInterceptor requestInterceptor86 = builder66.requestInterceptor;
        retrofit.ErrorHandler errorHandler87 = builder66.errorHandler;
        restAdapter30.errorHandler = errorHandler87;
        retrofit.RestAdapter.Builder builder89 = builder0.setErrorHandler(errorHandler87);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder89.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler31);
        org.junit.Assert.assertNull(errorHandler32);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(converter55);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05209");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider4 = null;
        builder3.clientProvider = provider4;
        java.util.concurrent.Executor executor6 = builder3.httpExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.Profiler profiler9 = null;
        builder7.profiler = profiler9;
        retrofit.Server server11 = null;
        builder7.server = server11;
        java.util.concurrent.Executor executor13 = builder7.callbackExecutor;
        builder3.httpExecutor = executor13;
        builder2.callbackExecutor = executor13;
        builder0.callbackExecutor = executor13;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.Profiler profiler19 = null;
        builder17.profiler = profiler19;
        retrofit.Server server21 = null;
        builder17.server = server21;
        java.util.concurrent.Executor executor23 = builder17.callbackExecutor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider25 = null;
        builder24.clientProvider = provider25;
        java.util.concurrent.Executor executor27 = builder24.httpExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.Server server32 = null;
        builder28.server = server32;
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        builder24.httpExecutor = executor34;
        retrofit.RestAdapter.LogLevel logLevel36 = builder24.logLevel;
        builder17.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.Profiler profiler40 = null;
        builder38.profiler = profiler40;
        retrofit.Server server42 = null;
        builder38.server = server42;
        retrofit.client.Client.Provider provider44 = builder38.clientProvider;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.Profiler profiler57 = restAdapter56.profiler;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean59 = logLevel58.log();
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        restAdapter56.log = log61;
        builder45.log = log61;
        retrofit.Server server64 = null;
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = null;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log72, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder45.setLogLevel(logLevel73);
        java.util.concurrent.Executor executor76 = null;
        builder75.callbackExecutor = executor76;
        retrofit.converter.Converter converter78 = builder75.converter;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider80 = null;
        builder79.clientProvider = provider80;
        builder79.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor83 = builder79.requestInterceptor;
        builder75.requestInterceptor = requestInterceptor83;
        retrofit.Server server85 = null;
        builder75.server = server85;
        retrofit.RequestInterceptor requestInterceptor87 = builder75.requestInterceptor;
        builder38.requestInterceptor = requestInterceptor87;
        retrofit.RestAdapter.Builder builder89 = builder17.setRequestInterceptor(requestInterceptor87);
        retrofit.client.Client.Provider provider90 = builder89.clientProvider;
        retrofit.RestAdapter.Log log91 = builder89.log;
        retrofit.RestAdapter.Builder builder92 = builder0.setLog(log91);
        retrofit.Profiler profiler93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder0.setProfiler(profiler93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(provider90);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05210");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.Server server31 = builder0.server;
        retrofit.Profiler profiler32 = null;
        builder0.profiler = profiler32;
        retrofit.Profiler profiler34 = null;
        builder0.profiler = profiler34;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server31);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05211");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel38);
        restAdapter10.log = log36;
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter10.logLevel;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider43 = null;
        builder42.clientProvider = provider43;
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        builder46.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor50 = builder46.requestInterceptor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        java.util.concurrent.Executor executor55 = builder52.httpExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        builder52.httpExecutor = executor62;
        builder51.callbackExecutor = executor62;
        builder46.callbackExecutor = executor62;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.Profiler profiler68 = null;
        builder66.profiler = profiler68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.Profiler profiler72 = null;
        builder70.profiler = profiler72;
        retrofit.Server server74 = null;
        builder70.server = server74;
        java.util.concurrent.Executor executor76 = builder70.callbackExecutor;
        builder66.callbackExecutor = executor76;
        retrofit.RestAdapter.Builder builder78 = builder42.setExecutors(executor62, executor76);
        restAdapter10.httpExecutor = executor62;
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter10.logLevel;
        retrofit.RequestInterceptor requestInterceptor81 = restAdapter10.requestInterceptor;
        java.lang.Throwable throwable82 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable82, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor81);
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05212");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput15);
        java.lang.String str17 = request16.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        java.lang.String str21 = request20.getUrl();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05213");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Server server14 = restAdapter10.server;
        retrofit.Profiler profiler15 = null;
        restAdapter10.profiler = profiler15;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server14);
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05214");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = null;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel13);
        retrofit.Profiler profiler15 = restAdapter14.profiler;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean17 = logLevel16.log();
        restAdapter14.logLevel = logLevel16;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        restAdapter14.log = log19;
        builder0.log = log19;
        retrofit.Profiler profiler22 = builder0.profiler;
        java.util.concurrent.Executor executor23 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.Profiler profiler36 = restAdapter35.profiler;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean38 = logLevel37.log();
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        restAdapter35.log = log40;
        builder24.log = log40;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel52);
        retrofit.RestAdapter.Builder builder54 = builder24.setLogLevel(logLevel52);
        java.util.concurrent.Executor executor55 = null;
        builder54.callbackExecutor = executor55;
        retrofit.Server server57 = null;
        retrofit.client.Client.Provider provider58 = null;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.converter.Converter converter62 = null;
        retrofit.Profiler profiler63 = null;
        retrofit.ErrorHandler errorHandler64 = null;
        retrofit.RestAdapter.Log log65 = null;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server57, provider58, executor59, executor60, requestInterceptor61, converter62, profiler63, errorHandler64, log65, logLevel66);
        retrofit.converter.Converter converter68 = restAdapter67.converter;
        retrofit.Profiler profiler69 = null;
        restAdapter67.profiler = profiler69;
        java.util.concurrent.Executor executor71 = restAdapter67.callbackExecutor;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.Profiler profiler74 = null;
        builder72.profiler = profiler74;
        retrofit.Server server76 = null;
        builder72.server = server76;
        java.util.concurrent.Executor executor78 = builder72.callbackExecutor;
        retrofit.converter.Converter converter79 = builder72.converter;
        restAdapter67.converter = converter79;
        builder54.converter = converter79;
        retrofit.Server server82 = builder54.server;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean84 = logLevel83.log();
        retrofit.RestAdapter.Builder builder85 = builder54.setLogLevel(logLevel83);
        retrofit.RestAdapter.Log log86 = builder85.log;
        retrofit.RestAdapter.Builder builder87 = builder0.setLog(log86);
        retrofit.Profiler profiler88 = builder0.profiler;
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(converter79);
        org.junit.Assert.assertNull(server82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNull(profiler88);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05215");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        java.lang.Throwable throwable15 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable15, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05216");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server12 = restAdapter11.server;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.ErrorHandler errorHandler25 = restAdapter23.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.setLogLevel(logLevel26);
        retrofit.Server server28 = restAdapter23.server;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.Log log30 = restAdapter23.log;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.Profiler profiler42 = restAdapter41.profiler;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter41.getLogLevel();
        restAdapter23.setLogLevel(logLevel46);
        boolean boolean48 = logLevel46.log();
        restAdapter11.logLevel = logLevel46;
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter11.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        restAdapter11.requestInterceptor = requestInterceptor51;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(requestInterceptor50);
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05217");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter10.logLevel;
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        builder14.log = log30;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder14.setLogLevel(logLevel42);
        java.util.concurrent.Executor executor45 = null;
        builder44.callbackExecutor = executor45;
        retrofit.ErrorHandler errorHandler47 = null;
        builder44.errorHandler = errorHandler47;
        builder44.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder44.clientProvider;
        restAdapter10.clientProvider = provider50;
        java.util.concurrent.Executor executor52 = restAdapter10.httpExecutor;
        retrofit.ErrorHandler errorHandler53 = restAdapter10.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(errorHandler53);
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05218");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.Server server15 = restAdapter10.server;
        retrofit.Server server16 = restAdapter10.server;
        retrofit.converter.Converter converter17 = restAdapter10.converter;
        java.util.concurrent.Executor executor18 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter10.logLevel;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.ErrorHandler errorHandler37 = null;
        restAdapter30.errorHandler = errorHandler37;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        restAdapter30.requestInterceptor = requestInterceptor39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.client.Client.Provider provider43 = builder41.clientProvider;
        retrofit.ErrorHandler errorHandler44 = builder41.errorHandler;
        restAdapter30.errorHandler = errorHandler44;
        restAdapter10.errorHandler = errorHandler44;
        retrofit.converter.Converter converter47 = restAdapter10.converter;
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter10.new RestHandler();
        retrofit.client.Client.Provider provider49 = restAdapter10.clientProvider;
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.Profiler profiler61 = restAdapter60.profiler;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean63 = logLevel62.log();
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter60.getLogLevel();
        boolean boolean66 = logLevel65.log();
        restAdapter10.setLogLevel(logLevel65);
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter10.logLevel;
        retrofit.Profiler profiler69 = null;
        restAdapter10.profiler = profiler69;
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter10.getLogLevel();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertNotNull(errorHandler44);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05219");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.client.Client.Provider provider5 = restAdapter0.clientProvider;
        retrofit.Profiler profiler6 = restAdapter0.profiler;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor8 = restAdapter7.httpExecutor;
        java.util.concurrent.Executor executor9 = restAdapter7.callbackExecutor;
        java.util.concurrent.Executor executor10 = restAdapter7.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean26 = logLevel25.log();
        restAdapter23.logLevel = logLevel25;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        restAdapter23.log = log28;
        builder12.log = log28;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.Profiler profiler42 = restAdapter41.profiler;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        restAdapter41.log = log46;
        retrofit.ErrorHandler errorHandler48 = null;
        restAdapter41.errorHandler = errorHandler48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter41.logLevel = logLevel50;
        retrofit.RestAdapter.Log log52 = restAdapter41.log;
        retrofit.RestAdapter.Builder builder53 = builder12.setLog(log52);
        retrofit.RestAdapter.Log log54 = builder12.log;
        builder12.ensureSaneDefaults();
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.Server server64 = null;
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = null;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log72, logLevel73);
        retrofit.Profiler profiler75 = restAdapter74.profiler;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean77 = logLevel76.log();
        restAdapter74.logLevel = logLevel76;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        restAdapter74.log = log79;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log79, logLevel81);
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider84 = null;
        builder83.clientProvider = provider84;
        builder83.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor87 = builder83.requestInterceptor;
        restAdapter82.requestInterceptor = requestInterceptor87;
        builder12.requestInterceptor = requestInterceptor87;
        restAdapter7.requestInterceptor = requestInterceptor87;
        restAdapter0.requestInterceptor = requestInterceptor87;
        retrofit.Server server92 = restAdapter0.server;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertNull(server92);
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05220");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor15 = restAdapter10.callbackExecutor;
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean29 = logLevel28.log();
        restAdapter26.logLevel = logLevel28;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        restAdapter26.log = log31;
        retrofit.ErrorHandler errorHandler33 = null;
        restAdapter26.errorHandler = errorHandler33;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        restAdapter26.requestInterceptor = requestInterceptor35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean47 = logLevel46.log();
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter48.new RestHandler();
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean60 = logLevel59.log();
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        restAdapter48.logLevel = logLevel59;
        retrofit.converter.Converter converter63 = restAdapter48.converter;
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter48.getLogLevel();
        restAdapter26.setLogLevel(logLevel64);
        retrofit.client.Client.Provider provider66 = null;
        restAdapter26.clientProvider = provider66;
        retrofit.Profiler profiler68 = restAdapter26.profiler;
        retrofit.RestAdapter.Log log69 = restAdapter26.log;
        restAdapter10.log = log69;
        log69.log("");
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler68);
        org.junit.Assert.assertNotNull(log69);
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05221");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider7 = null;
        builder6.clientProvider = provider7;
        java.util.concurrent.Executor executor9 = builder6.httpExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        builder6.httpExecutor = executor16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider20 = null;
        builder19.clientProvider = provider20;
        java.util.concurrent.Executor executor22 = builder19.httpExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.Profiler profiler25 = null;
        builder23.profiler = profiler25;
        retrofit.Server server27 = null;
        builder23.server = server27;
        java.util.concurrent.Executor executor29 = builder23.callbackExecutor;
        builder19.httpExecutor = executor29;
        builder18.callbackExecutor = executor29;
        builder6.callbackExecutor = executor29;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider34 = null;
        builder33.clientProvider = provider34;
        java.util.concurrent.Executor executor36 = builder33.httpExecutor;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.Profiler profiler39 = null;
        builder37.profiler = profiler39;
        retrofit.Server server41 = null;
        builder37.server = server41;
        java.util.concurrent.Executor executor43 = builder37.callbackExecutor;
        builder33.httpExecutor = executor43;
        java.util.concurrent.Executor executor45 = builder33.httpExecutor;
        retrofit.RestAdapter.Builder builder46 = builder0.setExecutors(executor29, executor45);
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        builder46.ensureSaneDefaults();
        retrofit.converter.Converter converter49 = builder46.converter;
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter49);
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05222");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput19);
        java.lang.String str21 = request20.getUrl();
        java.util.List<retrofit.client.Header> headerList22 = request20.getHeaders();
        java.util.List<retrofit.client.Header> headerList23 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList23, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "hi!", headerList23, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05223");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder13.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder13.errorHandler;
        restAdapter11.errorHandler = errorHandler16;
        retrofit.Profiler profiler18 = null;
        restAdapter11.profiler = profiler18;
        java.util.concurrent.Executor executor20 = restAdapter11.httpExecutor;
        java.util.concurrent.Executor executor21 = restAdapter11.callbackExecutor;
        retrofit.Server server22 = restAdapter11.server;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(server22);
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05224");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        boolean boolean15 = logLevel14.log();
        boolean boolean16 = logLevel14.log();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05225");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.Log log12 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter11.logLevel;
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.ErrorHandler errorHandler27 = restAdapter25.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider31 = null;
        builder30.clientProvider = provider31;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.converter.Converter converter44 = restAdapter43.converter;
        retrofit.ErrorHandler errorHandler45 = restAdapter43.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter43.logLevel;
        builder30.logLevel = logLevel46;
        restAdapter25.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.Profiler profiler52 = null;
        builder50.profiler = profiler52;
        retrofit.Server server54 = null;
        builder50.server = server54;
        java.util.concurrent.Executor executor56 = builder50.callbackExecutor;
        restAdapter49.callbackExecutor = executor56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.Profiler profiler60 = null;
        builder58.profiler = profiler60;
        retrofit.Server server62 = null;
        builder58.server = server62;
        java.util.concurrent.Executor executor64 = builder58.callbackExecutor;
        retrofit.converter.Converter converter65 = builder58.converter;
        restAdapter49.converter = converter65;
        restAdapter25.converter = converter65;
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter25.getLogLevel();
        restAdapter11.setLogLevel(logLevel68);
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter11.getLogLevel();
        java.util.concurrent.Executor executor71 = restAdapter11.httpExecutor;
        retrofit.client.Client.Provider provider72 = restAdapter11.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(errorHandler45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(converter65);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNull(provider72);
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05226");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        java.util.concurrent.Executor executor12 = builder0.httpExecutor;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        java.util.concurrent.Executor executor18 = builder15.httpExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.Profiler profiler21 = null;
        builder19.profiler = profiler21;
        retrofit.Server server23 = null;
        builder19.server = server23;
        java.util.concurrent.Executor executor25 = builder19.callbackExecutor;
        builder15.httpExecutor = executor25;
        builder14.callbackExecutor = executor25;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter39.log = log44;
        builder28.log = log44;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder28.setLogLevel(logLevel56);
        builder14.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder60 = builder0.setLogLevel(logLevel56);
        retrofit.ErrorHandler errorHandler61 = builder0.errorHandler;
        java.util.concurrent.Executor executor62 = builder0.callbackExecutor;
        retrofit.RestAdapter.Log log63 = builder0.log;
        retrofit.client.Client.Provider provider64 = builder0.clientProvider;
        retrofit.RequestInterceptor requestInterceptor65 = builder0.requestInterceptor;
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(requestInterceptor65);
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05227");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        retrofit.Server server47 = null;
        builder30.server = server47;
        retrofit.Server server49 = null;
        builder30.server = server49;
        java.util.concurrent.Executor executor51 = builder30.httpExecutor;
        retrofit.client.Client.Provider provider52 = builder30.clientProvider;
        retrofit.RestAdapter.Builder builder54 = builder30.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = builder54.build();
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.Profiler profiler69 = restAdapter68.profiler;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean71 = logLevel70.log();
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        restAdapter68.log = log73;
        retrofit.ErrorHandler errorHandler75 = null;
        restAdapter68.errorHandler = errorHandler75;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter68.logLevel = logLevel77;
        retrofit.RestAdapter.Log log79 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter68.log;
        retrofit.client.Header[] headerArray87 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList88 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList88, headerArray87);
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList88, typedOutput90);
        retrofit.mime.TypedOutput typedOutput92 = null;
        retrofit.client.Request request93 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList88, typedOutput92);
        retrofit.mime.TypedOutput typedOutput94 = request93.getBody();
        java.util.List<retrofit.client.Header> headerList95 = request93.getHeaders();
        retrofit.client.Request request96 = restAdapter68.logAndReplaceRequest(request93);
        java.lang.String str97 = request96.getUrl();
        retrofit.client.Request request98 = restAdapter57.logAndReplaceRequest(request96);
        java.util.List<retrofit.client.Header> headerList99 = request98.getHeaders();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(restAdapter57);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(headerArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(typedOutput94);
        org.junit.Assert.assertNotNull(headerList95);
        org.junit.Assert.assertNotNull(request96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "hi!" + "'", str97, "hi!");
        org.junit.Assert.assertNotNull(request98);
        org.junit.Assert.assertNotNull(headerList99);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05228");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        java.util.concurrent.Executor executor12 = builder0.httpExecutor;
        java.util.concurrent.Executor executor13 = builder0.callbackExecutor;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter14.log = log15;
        log15.log("");
        log15.log("");
        log15.log("hi!");
        retrofit.RestAdapter.Builder builder23 = builder0.setLog(log15);
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.client.Client client25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder26 = builder23.setClient(client25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05229");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        java.lang.String str13 = request12.getMethod();
        java.lang.String str14 = request12.getMethod();
        java.lang.String str15 = request12.getUrl();
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList17, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.getHeaders();
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("", "hi!", headerList22, typedOutput23);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList22);
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05230");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.Profiler profiler15 = null;
        restAdapter11.profiler = profiler15;
        retrofit.Profiler profiler17 = null;
        restAdapter11.profiler = profiler17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        builder19.log = log35;
        restAdapter11.log = log35;
        retrofit.client.Header[] headerArray41 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList42 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList42, headerArray41);
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList42, typedOutput44);
        java.lang.String str46 = request45.getMethod();
        java.util.List<retrofit.client.Header> headerList47 = request45.getHeaders();
        java.lang.String str48 = request45.getUrl();
        retrofit.client.Request request49 = restAdapter11.logAndReplaceRequest(request45);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider51 = null;
        builder50.clientProvider = provider51;
        retrofit.converter.Converter converter53 = null;
        builder50.converter = converter53;
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider57 = null;
        builder56.clientProvider = provider57;
        java.util.concurrent.Executor executor59 = builder56.httpExecutor;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.Profiler profiler62 = null;
        builder60.profiler = profiler62;
        retrofit.Server server64 = null;
        builder60.server = server64;
        java.util.concurrent.Executor executor66 = builder60.callbackExecutor;
        builder56.httpExecutor = executor66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider70 = null;
        builder69.clientProvider = provider70;
        java.util.concurrent.Executor executor72 = builder69.httpExecutor;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.Profiler profiler75 = null;
        builder73.profiler = profiler75;
        retrofit.Server server77 = null;
        builder73.server = server77;
        java.util.concurrent.Executor executor79 = builder73.callbackExecutor;
        builder69.httpExecutor = executor79;
        builder68.callbackExecutor = executor79;
        builder56.callbackExecutor = executor79;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider84 = null;
        builder83.clientProvider = provider84;
        java.util.concurrent.Executor executor86 = builder83.httpExecutor;
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        builder87.ensureSaneDefaults();
        retrofit.Profiler profiler89 = null;
        builder87.profiler = profiler89;
        retrofit.Server server91 = null;
        builder87.server = server91;
        java.util.concurrent.Executor executor93 = builder87.callbackExecutor;
        builder83.httpExecutor = executor93;
        java.util.concurrent.Executor executor95 = builder83.httpExecutor;
        retrofit.RestAdapter.Builder builder96 = builder50.setExecutors(executor79, executor95);
        restAdapter11.callbackExecutor = executor95;
        retrofit.RestAdapter.LogLevel logLevel98 = restAdapter11.logLevel;
        retrofit.ErrorHandler errorHandler99 = restAdapter11.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(headerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(request49);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNull(executor86);
        org.junit.Assert.assertNotNull(executor93);
        org.junit.Assert.assertNotNull(executor95);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertTrue("'" + logLevel98 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel98.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler99);
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05231");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.Profiler profiler14 = null;
        builder12.profiler = profiler14;
        retrofit.Server server16 = null;
        builder12.server = server16;
        java.util.concurrent.Executor executor18 = builder12.callbackExecutor;
        retrofit.converter.Converter converter19 = builder12.converter;
        restAdapter11.converter = converter19;
        retrofit.Profiler profiler21 = null;
        restAdapter11.profiler = profiler21;
        retrofit.Profiler profiler23 = null;
        restAdapter11.profiler = profiler23;
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter11.requestInterceptor;
        java.util.concurrent.Executor executor26 = restAdapter11.httpExecutor;
        java.util.concurrent.Executor executor27 = restAdapter11.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(converter19);
        org.junit.Assert.assertNull(requestInterceptor25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05232");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.Profiler profiler19 = restAdapter18.profiler;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean21 = logLevel20.log();
        restAdapter18.logLevel = logLevel20;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        restAdapter18.log = log23;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider28 = null;
        builder27.clientProvider = provider28;
        builder27.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor31 = builder27.requestInterceptor;
        restAdapter26.requestInterceptor = requestInterceptor31;
        retrofit.Profiler profiler33 = restAdapter26.profiler;
        retrofit.RestAdapter.Log log34 = restAdapter26.log;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter26.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05233");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.ErrorHandler errorHandler7 = builder4.errorHandler;
        retrofit.RestAdapter.Builder builder8 = builder0.setErrorHandler(errorHandler7);
        java.util.concurrent.Executor executor9 = builder8.httpExecutor;
        retrofit.Profiler profiler10 = builder8.profiler;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(executor9);
        org.junit.Assert.assertNull(profiler10);
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05234");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        retrofit.Server server15 = null;
        restAdapter10.server = server15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler29 = restAdapter28.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        restAdapter28.logLevel = logLevel30;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        restAdapter28.log = log33;
        builder17.log = log33;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.Profiler profiler47 = restAdapter46.profiler;
        retrofit.ErrorHandler errorHandler48 = restAdapter46.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider52 = null;
        builder51.clientProvider = provider52;
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = null;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel63);
        retrofit.converter.Converter converter65 = restAdapter64.converter;
        retrofit.ErrorHandler errorHandler66 = restAdapter64.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter64.logLevel;
        builder51.logLevel = logLevel67;
        restAdapter46.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder17.setLogLevel(logLevel67);
        restAdapter10.setLogLevel(logLevel67);
        retrofit.client.Client.Provider provider72 = restAdapter10.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter10.logLevel;
        retrofit.ErrorHandler errorHandler74 = restAdapter10.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertNull(errorHandler48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(errorHandler66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler74);
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05235");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Log log20 = null;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log20, logLevel21);
        retrofit.Profiler profiler23 = restAdapter22.profiler;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean25 = logLevel24.log();
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        restAdapter22.log = log27;
        builder11.log = log27;
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = null;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log38, logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder11.setLogLevel(logLevel39);
        java.util.concurrent.Executor executor42 = null;
        builder41.callbackExecutor = executor42;
        retrofit.ErrorHandler errorHandler44 = null;
        builder41.errorHandler = errorHandler44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        retrofit.RestAdapter.Builder builder49 = builder41.setClient(provider48);
        retrofit.Server server50 = null;
        builder41.server = server50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = null;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel63);
        retrofit.Profiler profiler65 = restAdapter64.profiler;
        java.util.concurrent.Executor executor66 = null;
        restAdapter64.httpExecutor = executor66;
        retrofit.Profiler profiler68 = null;
        restAdapter64.profiler = profiler68;
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter64.getLogLevel();
        builder52.logLevel = logLevel70;
        retrofit.RestAdapter.LogLevel logLevel72 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder41.setLogLevel(logLevel72);
        restAdapter10.setLogLevel(logLevel72);
        retrofit.RequestInterceptor requestInterceptor75 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler65);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(requestInterceptor75);
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05236");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.Profiler profiler35 = null;
        builder30.profiler = profiler35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.Profiler profiler48 = restAdapter47.profiler;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean50 = logLevel49.log();
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder52 = builder30.setLogLevel(logLevel49);
        retrofit.Profiler profiler53 = builder52.profiler;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = null;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel64);
        retrofit.Profiler profiler66 = restAdapter65.profiler;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean68 = logLevel67.log();
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        restAdapter65.log = log70;
        builder54.log = log70;
        retrofit.Server server73 = null;
        retrofit.client.Client.Provider provider74 = null;
        java.util.concurrent.Executor executor75 = null;
        java.util.concurrent.Executor executor76 = null;
        retrofit.RequestInterceptor requestInterceptor77 = null;
        retrofit.converter.Converter converter78 = null;
        retrofit.Profiler profiler79 = null;
        retrofit.ErrorHandler errorHandler80 = null;
        retrofit.RestAdapter.Log log81 = null;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server73, provider74, executor75, executor76, requestInterceptor77, converter78, profiler79, errorHandler80, log81, logLevel82);
        retrofit.RestAdapter.Builder builder84 = builder54.setLogLevel(logLevel82);
        java.util.concurrent.Executor executor85 = null;
        builder84.callbackExecutor = executor85;
        retrofit.converter.Converter converter87 = builder84.converter;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider89 = null;
        builder88.clientProvider = provider89;
        builder88.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor92 = builder88.requestInterceptor;
        builder84.requestInterceptor = requestInterceptor92;
        retrofit.Server server94 = null;
        builder84.server = server94;
        retrofit.RequestInterceptor requestInterceptor96 = builder84.requestInterceptor;
        retrofit.RestAdapter.Builder builder97 = builder52.setRequestInterceptor(requestInterceptor96);
        retrofit.ErrorHandler errorHandler98 = builder97.errorHandler;
        java.util.concurrent.Executor executor99 = builder97.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(converter87);
        org.junit.Assert.assertNotNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(requestInterceptor96);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertNull(errorHandler98);
        org.junit.Assert.assertNull(executor99);
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05237");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel37);
        builder0.log = log35;
        retrofit.Profiler profiler40 = builder0.profiler;
        retrofit.client.Client.Provider provider41 = builder0.clientProvider;
        java.util.concurrent.Executor executor42 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = null;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel53);
        retrofit.Profiler profiler55 = restAdapter54.profiler;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean57 = logLevel56.log();
        restAdapter54.logLevel = logLevel56;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        restAdapter54.log = log59;
        builder43.log = log59;
        retrofit.Server server62 = null;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel71);
        retrofit.RestAdapter.Builder builder73 = builder43.setLogLevel(logLevel71);
        java.util.concurrent.Executor executor74 = null;
        builder73.callbackExecutor = executor74;
        retrofit.ErrorHandler errorHandler76 = null;
        builder73.errorHandler = errorHandler76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.Profiler profiler80 = null;
        builder78.profiler = profiler80;
        retrofit.Server server82 = null;
        builder78.server = server82;
        java.util.concurrent.Executor executor84 = builder78.callbackExecutor;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        builder85.ensureSaneDefaults();
        retrofit.client.Client.Provider provider87 = builder85.clientProvider;
        builder78.clientProvider = provider87;
        builder73.clientProvider = provider87;
        java.util.concurrent.Executor executor90 = builder73.httpExecutor;
        java.util.concurrent.Executor executor91 = builder73.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor92 = builder73.requestInterceptor;
        retrofit.RestAdapter.Log log93 = builder73.log;
        log93.log("");
        builder0.log = log93;
        log93.log("hi!");
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(provider41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNull(executor90);
        org.junit.Assert.assertNull(executor91);
        org.junit.Assert.assertNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(log93);
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05238");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean29 = logLevel28.log();
        restAdapter26.logLevel = logLevel28;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        restAdapter26.log = log31;
        builder15.log = log31;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.RestAdapter.Builder builder45 = builder15.setLogLevel(logLevel43);
        java.util.concurrent.Executor executor46 = null;
        builder45.callbackExecutor = executor46;
        retrofit.ErrorHandler errorHandler48 = null;
        builder45.errorHandler = errorHandler48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.Profiler profiler52 = null;
        builder50.profiler = profiler52;
        retrofit.Server server54 = null;
        builder50.server = server54;
        java.util.concurrent.Executor executor56 = builder50.callbackExecutor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.client.Client.Provider provider59 = builder57.clientProvider;
        builder50.clientProvider = provider59;
        builder45.clientProvider = provider59;
        restAdapter10.clientProvider = provider59;
        retrofit.RestAdapter.LogLevel logLevel63 = null;
        restAdapter10.setLogLevel(logLevel63);
        retrofit.Profiler profiler65 = null;
        restAdapter10.profiler = profiler65;
        retrofit.Profiler profiler67 = restAdapter10.profiler;
        retrofit.RequestInterceptor requestInterceptor68 = restAdapter10.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor69 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(provider59);
        org.junit.Assert.assertNull(profiler67);
        org.junit.Assert.assertNull(requestInterceptor68);
        org.junit.Assert.assertNull(requestInterceptor69);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05239");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter11.new RestHandler();
        retrofit.Profiler profiler27 = restAdapter11.profiler;
        retrofit.converter.Converter converter28 = restAdapter11.converter;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.Profiler profiler31 = null;
        builder29.profiler = profiler31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.Profiler profiler35 = null;
        builder33.profiler = profiler35;
        retrofit.Server server37 = null;
        builder33.server = server37;
        java.util.concurrent.Executor executor39 = builder33.callbackExecutor;
        builder29.callbackExecutor = executor39;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = null;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel58);
        retrofit.Profiler profiler60 = restAdapter59.profiler;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean62 = logLevel61.log();
        restAdapter59.logLevel = logLevel61;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        restAdapter59.log = log64;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log64, logLevel66);
        builder29.log = log64;
        retrofit.Profiler profiler69 = builder29.profiler;
        retrofit.Profiler profiler70 = null;
        builder29.profiler = profiler70;
        retrofit.Profiler profiler72 = null;
        builder29.profiler = profiler72;
        builder29.ensureSaneDefaults();
        retrofit.Server server75 = builder29.server;
        retrofit.RestAdapter.Log log76 = builder29.log;
        restAdapter11.log = log76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.client.Client.Provider provider80 = builder78.clientProvider;
        retrofit.ErrorHandler errorHandler81 = builder78.errorHandler;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.client.Client.Provider provider84 = builder82.clientProvider;
        retrofit.ErrorHandler errorHandler85 = builder82.errorHandler;
        retrofit.RestAdapter.Builder builder86 = builder78.setErrorHandler(errorHandler85);
        retrofit.converter.Converter converter87 = builder78.converter;
        restAdapter11.converter = converter87;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNull(server75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(provider80);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(converter87);
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05240");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.Server server37 = null;
        builder30.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.Profiler profiler41 = null;
        builder39.profiler = profiler41;
        retrofit.Server server43 = null;
        builder39.server = server43;
        java.util.concurrent.Executor executor45 = builder39.callbackExecutor;
        retrofit.converter.Converter converter46 = builder39.converter;
        builder30.converter = converter46;
        retrofit.converter.Converter converter48 = builder30.converter;
        retrofit.Profiler profiler49 = null;
        builder30.profiler = profiler49;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(converter46);
        org.junit.Assert.assertNotNull(converter48);
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05241");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter11.new RestHandler();
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.converter.Converter converter38 = restAdapter37.converter;
        retrofit.Profiler profiler39 = null;
        restAdapter37.profiler = profiler39;
        java.util.concurrent.Executor executor41 = restAdapter37.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        retrofit.converter.Converter converter49 = builder42.converter;
        restAdapter37.converter = converter49;
        restAdapter11.converter = converter49;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        retrofit.converter.Converter converter55 = null;
        builder52.converter = converter55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.client.Client.Provider provider59 = builder57.clientProvider;
        retrofit.ErrorHandler errorHandler60 = builder57.errorHandler;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder61.clientProvider;
        retrofit.ErrorHandler errorHandler64 = builder61.errorHandler;
        retrofit.RestAdapter.Builder builder65 = builder57.setErrorHandler(errorHandler64);
        builder52.errorHandler = errorHandler64;
        restAdapter11.errorHandler = errorHandler64;
        retrofit.Server server68 = restAdapter11.server;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter11.logLevel;
        retrofit.ErrorHandler errorHandler70 = restAdapter11.errorHandler;
        retrofit.Server server71 = restAdapter11.server;
        java.lang.Class<?> wildcardClass72 = restAdapter11.getClass();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNotNull(provider59);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05242");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        java.util.concurrent.Executor executor12 = builder0.httpExecutor;
        java.util.concurrent.Executor executor13 = builder0.callbackExecutor;
        retrofit.Profiler profiler14 = null;
        builder0.profiler = profiler14;
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(executor13);
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05243");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.converter.Converter converter15 = restAdapter11.converter;
        retrofit.Profiler profiler16 = restAdapter11.profiler;
        retrofit.client.Client.Provider provider17 = restAdapter11.clientProvider;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.Profiler profiler20 = null;
        builder18.profiler = profiler20;
        retrofit.Server server22 = null;
        builder18.server = server22;
        retrofit.client.Client.Provider provider24 = builder18.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = null;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel35);
        retrofit.Profiler profiler37 = restAdapter36.profiler;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean39 = logLevel38.log();
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        restAdapter36.log = log41;
        builder25.log = log41;
        log41.log("");
        retrofit.RestAdapter.Builder builder46 = builder18.setLog(log41);
        restAdapter11.log = log41;
        java.util.concurrent.Executor executor48 = restAdapter11.httpExecutor;
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = null;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel58);
        retrofit.Profiler profiler60 = restAdapter59.profiler;
        retrofit.ErrorHandler errorHandler61 = restAdapter59.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter59.setLogLevel(logLevel62);
        retrofit.Server server64 = restAdapter59.server;
        retrofit.Server server65 = restAdapter59.server;
        retrofit.converter.Converter converter66 = restAdapter59.converter;
        java.util.concurrent.Executor executor67 = restAdapter59.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter59.logLevel;
        retrofit.Server server69 = null;
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.RequestInterceptor requestInterceptor73 = null;
        retrofit.converter.Converter converter74 = null;
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = null;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor73, converter74, profiler75, errorHandler76, log77, logLevel78);
        retrofit.Profiler profiler80 = restAdapter79.profiler;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean82 = logLevel81.log();
        restAdapter79.logLevel = logLevel81;
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        restAdapter79.log = log84;
        retrofit.ErrorHandler errorHandler86 = null;
        restAdapter79.errorHandler = errorHandler86;
        retrofit.RequestInterceptor requestInterceptor88 = null;
        restAdapter79.requestInterceptor = requestInterceptor88;
        retrofit.RestAdapter.Builder builder90 = new retrofit.RestAdapter.Builder();
        builder90.ensureSaneDefaults();
        retrofit.client.Client.Provider provider92 = builder90.clientProvider;
        retrofit.ErrorHandler errorHandler93 = builder90.errorHandler;
        restAdapter79.errorHandler = errorHandler93;
        restAdapter59.errorHandler = errorHandler93;
        restAdapter11.errorHandler = errorHandler93;
        retrofit.RestAdapter.RestHandler restHandler97 = restAdapter11.new RestHandler();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(provider92);
        org.junit.Assert.assertNotNull(errorHandler93);
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05244");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.ErrorHandler errorHandler7 = builder4.errorHandler;
        retrofit.RestAdapter.Builder builder8 = builder0.setErrorHandler(errorHandler7);
        retrofit.Server server9 = builder0.server;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        retrofit.converter.Converter converter17 = builder10.converter;
        retrofit.RestAdapter.Builder builder18 = builder0.setConverter(converter17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        builder19.log = log35;
        log35.log("");
        retrofit.RestAdapter.Builder builder40 = builder0.setLog(log35);
        java.util.concurrent.Executor executor41 = null;
        builder40.httpExecutor = executor41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        retrofit.converter.Converter converter50 = builder43.converter;
        retrofit.client.Client.Provider provider51 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider54 = null;
        builder53.clientProvider = provider54;
        java.util.concurrent.Executor executor56 = builder53.httpExecutor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.Profiler profiler59 = null;
        builder57.profiler = profiler59;
        retrofit.Server server61 = null;
        builder57.server = server61;
        java.util.concurrent.Executor executor63 = builder57.callbackExecutor;
        builder53.httpExecutor = executor63;
        builder52.callbackExecutor = executor63;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.Profiler profiler68 = null;
        builder66.profiler = profiler68;
        retrofit.Server server70 = null;
        builder66.server = server70;
        java.util.concurrent.Executor executor72 = builder66.callbackExecutor;
        retrofit.RestAdapter.Builder builder73 = builder43.setExecutors(executor63, executor72);
        retrofit.client.Client.Provider provider74 = builder43.clientProvider;
        builder43.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor76 = builder43.requestInterceptor;
        retrofit.RestAdapter.Builder builder77 = builder40.setRequestInterceptor(requestInterceptor76);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter78 = builder40.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(converter17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(converter50);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05245");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean29 = logLevel28.log();
        restAdapter26.logLevel = logLevel28;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        restAdapter26.log = log31;
        retrofit.ErrorHandler errorHandler33 = null;
        restAdapter26.errorHandler = errorHandler33;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        restAdapter26.requestInterceptor = requestInterceptor35;
        retrofit.Profiler profiler37 = null;
        restAdapter26.profiler = profiler37;
        retrofit.RestAdapter.Log log39 = restAdapter26.log;
        restAdapter10.log = log39;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.Profiler profiler52 = restAdapter51.profiler;
        java.util.concurrent.Executor executor53 = null;
        restAdapter51.httpExecutor = executor53;
        retrofit.converter.Converter converter55 = restAdapter51.converter;
        retrofit.Server server56 = null;
        restAdapter51.server = server56;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.Profiler profiler69 = restAdapter68.profiler;
        retrofit.ErrorHandler errorHandler70 = restAdapter68.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.setLogLevel(logLevel71);
        retrofit.Server server73 = restAdapter68.server;
        retrofit.Server server74 = restAdapter68.server;
        retrofit.converter.Converter converter75 = restAdapter68.converter;
        java.util.concurrent.Executor executor76 = restAdapter68.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter68.getLogLevel();
        restAdapter51.logLevel = logLevel77;
        restAdapter10.setLogLevel(logLevel77);
        retrofit.client.Client.Provider provider80 = restAdapter10.clientProvider;
        retrofit.client.Response response82 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response84 = restAdapter10.logAndReplaceResponse("", response82, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNull(errorHandler70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertNull(converter75);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider80);
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05246");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = null;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel13);
        retrofit.Profiler profiler15 = restAdapter14.profiler;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean17 = logLevel16.log();
        restAdapter14.logLevel = logLevel16;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        restAdapter14.log = log19;
        builder0.log = log19;
        log19.log("hi!");
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(log19);
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05247");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.converter.Converter converter27 = restAdapter26.converter;
        retrofit.Profiler profiler28 = null;
        restAdapter26.profiler = profiler28;
        java.util.concurrent.Executor executor30 = restAdapter26.callbackExecutor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.Profiler profiler33 = null;
        builder31.profiler = profiler33;
        retrofit.Server server35 = null;
        builder31.server = server35;
        java.util.concurrent.Executor executor37 = builder31.callbackExecutor;
        retrofit.converter.Converter converter38 = builder31.converter;
        restAdapter26.converter = converter38;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter26.logLevel;
        restAdapter10.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider43 = null;
        builder42.clientProvider = provider43;
        retrofit.converter.Converter converter45 = null;
        builder42.converter = converter45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.client.Client.Provider provider49 = builder47.clientProvider;
        retrofit.ErrorHandler errorHandler50 = builder47.errorHandler;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.client.Client.Provider provider53 = builder51.clientProvider;
        retrofit.ErrorHandler errorHandler54 = builder51.errorHandler;
        retrofit.RestAdapter.Builder builder55 = builder47.setErrorHandler(errorHandler54);
        builder42.errorHandler = errorHandler54;
        java.util.concurrent.Executor executor57 = builder42.callbackExecutor;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.client.Client.Provider provider60 = builder58.clientProvider;
        retrofit.ErrorHandler errorHandler61 = builder58.errorHandler;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        retrofit.ErrorHandler errorHandler65 = builder62.errorHandler;
        retrofit.RestAdapter.Builder builder66 = builder58.setErrorHandler(errorHandler65);
        retrofit.Server server67 = builder58.server;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.Profiler profiler70 = null;
        builder68.profiler = profiler70;
        retrofit.Server server72 = null;
        builder68.server = server72;
        java.util.concurrent.Executor executor74 = builder68.callbackExecutor;
        retrofit.converter.Converter converter75 = builder68.converter;
        retrofit.RestAdapter.Builder builder76 = builder58.setConverter(converter75);
        retrofit.converter.Converter converter77 = builder76.converter;
        retrofit.RestAdapter.Builder builder78 = builder42.setConverter(converter77);
        retrofit.Server server79 = builder42.server;
        retrofit.Profiler profiler80 = null;
        builder42.profiler = profiler80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.client.Client.Provider provider84 = builder82.clientProvider;
        retrofit.Profiler profiler85 = builder82.profiler;
        retrofit.converter.Converter converter86 = null;
        builder82.converter = converter86;
        retrofit.RequestInterceptor requestInterceptor88 = builder82.requestInterceptor;
        builder42.requestInterceptor = requestInterceptor88;
        restAdapter10.requestInterceptor = requestInterceptor88;
        retrofit.Profiler profiler91 = restAdapter10.profiler;
        java.util.concurrent.Executor executor92 = restAdapter10.callbackExecutor;
        java.lang.Throwable throwable93 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable93, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider49);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(provider53);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(converter75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(converter77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNull(profiler85);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNull(profiler91);
        org.junit.Assert.assertNull(executor92);
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05248");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Log log20 = null;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log20, logLevel21);
        retrofit.converter.Converter converter23 = restAdapter22.converter;
        retrofit.ErrorHandler errorHandler24 = restAdapter22.errorHandler;
        retrofit.Profiler profiler25 = null;
        restAdapter22.profiler = profiler25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.client.Client.Provider provider29 = builder27.clientProvider;
        retrofit.ErrorHandler errorHandler30 = builder27.errorHandler;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.client.Client.Provider provider33 = builder31.clientProvider;
        retrofit.ErrorHandler errorHandler34 = builder31.errorHandler;
        retrofit.RestAdapter.Builder builder35 = builder27.setErrorHandler(errorHandler34);
        restAdapter22.errorHandler = errorHandler34;
        restAdapter11.errorHandler = errorHandler34;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter11.logLevel;
        retrofit.Profiler profiler39 = restAdapter11.profiler;
        retrofit.Profiler profiler40 = restAdapter11.profiler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(errorHandler24);
        org.junit.Assert.assertNotNull(provider29);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertNull(profiler40);
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05249");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel37);
        builder0.log = log35;
        retrofit.Profiler profiler40 = builder0.profiler;
        retrofit.Profiler profiler41 = null;
        builder0.profiler = profiler41;
        retrofit.converter.Converter converter43 = builder0.converter;
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = null;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel53);
        retrofit.Profiler profiler55 = restAdapter54.profiler;
        retrofit.ErrorHandler errorHandler56 = restAdapter54.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter54.logLevel;
        java.util.concurrent.Executor executor58 = restAdapter54.httpExecutor;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel69);
        retrofit.Profiler profiler71 = restAdapter70.profiler;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean73 = logLevel72.log();
        restAdapter70.logLevel = logLevel72;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        restAdapter70.log = log75;
        builder59.log = log75;
        retrofit.Server server78 = null;
        retrofit.client.Client.Provider provider79 = null;
        java.util.concurrent.Executor executor80 = null;
        java.util.concurrent.Executor executor81 = null;
        retrofit.RequestInterceptor requestInterceptor82 = null;
        retrofit.converter.Converter converter83 = null;
        retrofit.Profiler profiler84 = null;
        retrofit.ErrorHandler errorHandler85 = null;
        retrofit.RestAdapter.Log log86 = null;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server78, provider79, executor80, executor81, requestInterceptor82, converter83, profiler84, errorHandler85, log86, logLevel87);
        retrofit.RestAdapter.Builder builder89 = builder59.setLogLevel(logLevel87);
        java.util.concurrent.Executor executor90 = null;
        builder89.callbackExecutor = executor90;
        retrofit.ErrorHandler errorHandler92 = null;
        builder89.errorHandler = errorHandler92;
        builder89.ensureSaneDefaults();
        retrofit.RestAdapter.Log log95 = builder89.log;
        retrofit.client.Client.Provider provider96 = builder89.clientProvider;
        restAdapter54.clientProvider = provider96;
        retrofit.RestAdapter.Builder builder98 = builder0.setClient(provider96);
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNull(errorHandler56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(log95);
        org.junit.Assert.assertNotNull(provider96);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05250");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.Profiler profiler5 = null;
        builder3.profiler = profiler5;
        java.util.concurrent.Executor executor7 = builder3.callbackExecutor;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter19.new RestHandler();
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        restAdapter19.logLevel = logLevel30;
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter19.new RestHandler();
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.converter.Converter converter46 = restAdapter45.converter;
        retrofit.Profiler profiler47 = null;
        restAdapter45.profiler = profiler47;
        java.util.concurrent.Executor executor49 = restAdapter45.callbackExecutor;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.Profiler profiler52 = null;
        builder50.profiler = profiler52;
        retrofit.Server server54 = null;
        builder50.server = server54;
        java.util.concurrent.Executor executor56 = builder50.callbackExecutor;
        retrofit.converter.Converter converter57 = builder50.converter;
        restAdapter45.converter = converter57;
        restAdapter19.converter = converter57;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider61 = null;
        builder60.clientProvider = provider61;
        retrofit.converter.Converter converter63 = null;
        builder60.converter = converter63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.client.Client.Provider provider67 = builder65.clientProvider;
        retrofit.ErrorHandler errorHandler68 = builder65.errorHandler;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider71 = builder69.clientProvider;
        retrofit.ErrorHandler errorHandler72 = builder69.errorHandler;
        retrofit.RestAdapter.Builder builder73 = builder65.setErrorHandler(errorHandler72);
        builder60.errorHandler = errorHandler72;
        restAdapter19.errorHandler = errorHandler72;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider77 = null;
        builder76.clientProvider = provider77;
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.client.Client.Provider provider82 = builder80.clientProvider;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        builder83.ensureSaneDefaults();
        retrofit.client.Client.Provider provider85 = builder83.clientProvider;
        builder80.clientProvider = provider85;
        builder76.clientProvider = provider85;
        java.util.concurrent.Executor executor88 = builder76.httpExecutor;
        java.util.concurrent.Executor executor89 = builder76.callbackExecutor;
        restAdapter19.httpExecutor = executor89;
        retrofit.RestAdapter.Builder builder91 = builder0.setExecutors(executor7, executor89);
        retrofit.Profiler profiler92 = null;
        builder0.profiler = profiler92;
        org.junit.Assert.assertNotNull(converter2);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(converter57);
        org.junit.Assert.assertNotNull(provider67);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(provider85);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05251");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList16, typedOutput19);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05252");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder21.clientProvider;
        retrofit.ErrorHandler errorHandler24 = builder21.errorHandler;
        restAdapter10.errorHandler = errorHandler24;
        retrofit.RestAdapter.Log log26 = restAdapter10.log;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.Profiler profiler38 = restAdapter37.profiler;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        restAdapter37.log = log42;
        retrofit.ErrorHandler errorHandler44 = null;
        restAdapter37.errorHandler = errorHandler44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter37.logLevel = logLevel46;
        retrofit.RestAdapter.Log log48 = restAdapter37.log;
        retrofit.Server server49 = restAdapter37.server;
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        java.lang.String str57 = request56.getMethod();
        java.lang.String str58 = request56.getUrl();
        retrofit.client.Request request59 = restAdapter37.logAndReplaceRequest(request56);
        retrofit.client.Request request60 = restAdapter10.logAndReplaceRequest(request56);
        retrofit.client.Client.Provider provider61 = null;
        restAdapter10.clientProvider = provider61;
        java.lang.Throwable throwable63 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable63, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(errorHandler24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(request60);
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05253");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.Profiler profiler13 = restAdapter12.profiler;
        java.util.concurrent.Executor executor14 = null;
        restAdapter12.httpExecutor = executor14;
        retrofit.Profiler profiler16 = null;
        restAdapter12.profiler = profiler16;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.getLogLevel();
        builder0.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel20 = builder0.logLevel;
        retrofit.converter.Converter converter21 = builder0.converter;
        retrofit.RestAdapter.Builder builder23 = builder0.setServer("hi!");
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider25 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider27 = null;
        builder26.clientProvider = provider27;
        java.util.concurrent.Executor executor29 = builder26.httpExecutor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.Profiler profiler32 = null;
        builder30.profiler = profiler32;
        retrofit.Server server34 = null;
        builder30.server = server34;
        java.util.concurrent.Executor executor36 = builder30.callbackExecutor;
        builder26.httpExecutor = executor36;
        java.util.concurrent.Executor executor38 = builder26.httpExecutor;
        builder0.callbackExecutor = executor38;
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(provider25);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(executor38);
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05254");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        java.util.concurrent.Executor executor15 = restAdapter11.callbackExecutor;
        retrofit.Server server16 = restAdapter11.server;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.Log log19 = null;
        restAdapter11.log = log19;
        retrofit.Profiler profiler21 = null;
        restAdapter11.profiler = profiler21;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05255");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        retrofit.Server server47 = builder30.server;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider49 = null;
        builder48.clientProvider = provider49;
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.client.Client.Provider provider54 = builder52.clientProvider;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = builder55.clientProvider;
        builder52.clientProvider = provider57;
        builder48.clientProvider = provider57;
        retrofit.RestAdapter.Builder builder60 = builder30.setClient(provider57);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.Profiler profiler63 = null;
        builder61.profiler = profiler63;
        retrofit.Server server65 = null;
        builder61.server = server65;
        java.util.concurrent.Executor executor67 = builder61.callbackExecutor;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.client.Client.Provider provider70 = builder68.clientProvider;
        builder61.clientProvider = provider70;
        retrofit.RestAdapter.Builder builder72 = builder30.setClient(provider70);
        retrofit.RequestInterceptor requestInterceptor73 = builder30.requestInterceptor;
        java.util.concurrent.Executor executor74 = builder30.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor75 = builder30.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel76 = builder30.logLevel;
        retrofit.Profiler profiler77 = null;
        builder30.profiler = profiler77;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNotNull(provider54);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(provider70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(requestInterceptor73);
        org.junit.Assert.assertNull(executor74);
        org.junit.Assert.assertNull(requestInterceptor75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05256");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        retrofit.client.Client.Provider provider16 = restAdapter10.clientProvider;
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        builder18.log = log34;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.Profiler profiler48 = restAdapter47.profiler;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean50 = logLevel49.log();
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        restAdapter47.log = log52;
        retrofit.ErrorHandler errorHandler54 = null;
        restAdapter47.errorHandler = errorHandler54;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter47.logLevel = logLevel56;
        retrofit.RestAdapter.Log log58 = restAdapter47.log;
        retrofit.RestAdapter.Builder builder59 = builder18.setLog(log58);
        retrofit.RestAdapter.Log log60 = builder18.log;
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.RestAdapter.Log log65 = builder63.log;
        restAdapter10.log = log65;
        retrofit.RequestInterceptor requestInterceptor67 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(requestInterceptor17);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNull(requestInterceptor67);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05257");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.converter.Converter converter16 = restAdapter10.converter;
        retrofit.Server server17 = null;
        restAdapter10.server = server17;
        retrofit.Server server19 = restAdapter10.server;
        retrofit.RestAdapter.Log log20 = restAdapter10.log;
        retrofit.converter.Converter converter21 = restAdapter10.converter;
        retrofit.Server server22 = restAdapter10.server;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.client.Client.Provider provider38 = builder36.clientProvider;
        retrofit.ErrorHandler errorHandler39 = builder36.errorHandler;
        restAdapter34.errorHandler = errorHandler39;
        retrofit.RestAdapter.Log log41 = restAdapter34.log;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean52 = logLevel51.log();
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter53.new RestHandler();
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = null;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean65 = logLevel64.log();
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel64);
        restAdapter53.logLevel = logLevel64;
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter53.new RestHandler();
        retrofit.Server server69 = null;
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.RequestInterceptor requestInterceptor73 = null;
        retrofit.converter.Converter converter74 = null;
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = null;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor73, converter74, profiler75, errorHandler76, log77, logLevel78);
        retrofit.converter.Converter converter80 = restAdapter79.converter;
        retrofit.Profiler profiler81 = null;
        restAdapter79.profiler = profiler81;
        java.util.concurrent.Executor executor83 = restAdapter79.callbackExecutor;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.Profiler profiler86 = null;
        builder84.profiler = profiler86;
        retrofit.Server server88 = null;
        builder84.server = server88;
        java.util.concurrent.Executor executor90 = builder84.callbackExecutor;
        retrofit.converter.Converter converter91 = builder84.converter;
        restAdapter79.converter = converter91;
        restAdapter53.converter = converter91;
        restAdapter34.converter = converter91;
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter34.getLogLevel();
        restAdapter10.setLogLevel(logLevel95);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(provider38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter80);
        org.junit.Assert.assertNull(executor83);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNotNull(converter91);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05258");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.converter.Converter converter3 = builder0.converter;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = null;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel13);
        retrofit.Profiler profiler15 = restAdapter14.profiler;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean17 = logLevel16.log();
        restAdapter14.logLevel = logLevel16;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        restAdapter14.log = log19;
        retrofit.client.Header[] headerArray25 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList26 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList26, headerArray25);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList26, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList26, typedOutput30);
        retrofit.client.Request request32 = restAdapter14.logAndReplaceRequest(request31);
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter14.requestInterceptor;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler35 = restAdapter34.errorHandler;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.ErrorHandler errorHandler38 = restAdapter36.errorHandler;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.converter.Converter converter50 = restAdapter49.converter;
        retrofit.Profiler profiler51 = null;
        restAdapter49.profiler = profiler51;
        java.util.concurrent.Executor executor53 = restAdapter49.callbackExecutor;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.Profiler profiler56 = null;
        builder54.profiler = profiler56;
        retrofit.Server server58 = null;
        builder54.server = server58;
        java.util.concurrent.Executor executor60 = builder54.callbackExecutor;
        retrofit.converter.Converter converter61 = builder54.converter;
        restAdapter49.converter = converter61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.Profiler profiler65 = null;
        builder63.profiler = profiler65;
        retrofit.Server server67 = null;
        builder63.server = server67;
        java.util.concurrent.Executor executor69 = builder63.callbackExecutor;
        restAdapter49.httpExecutor = executor69;
        restAdapter36.httpExecutor = executor69;
        restAdapter34.callbackExecutor = executor69;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.Profiler profiler76 = null;
        builder74.profiler = profiler76;
        retrofit.Server server78 = null;
        builder74.server = server78;
        java.util.concurrent.Executor executor80 = builder74.callbackExecutor;
        restAdapter73.callbackExecutor = executor80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.Profiler profiler84 = null;
        builder82.profiler = profiler84;
        retrofit.Server server86 = null;
        builder82.server = server86;
        java.util.concurrent.Executor executor88 = builder82.callbackExecutor;
        retrofit.converter.Converter converter89 = builder82.converter;
        restAdapter73.converter = converter89;
        java.util.concurrent.Executor executor91 = restAdapter73.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor92 = restAdapter73.requestInterceptor;
        retrofit.converter.Converter converter93 = restAdapter73.converter;
        restAdapter34.converter = converter93;
        restAdapter14.converter = converter93;
        retrofit.RestAdapter.Builder builder96 = builder0.setConverter(converter93);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(headerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(request32);
        org.junit.Assert.assertNull(requestInterceptor33);
        org.junit.Assert.assertNull(errorHandler35);
        org.junit.Assert.assertNull(errorHandler37);
        org.junit.Assert.assertNull(errorHandler38);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(converter61);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(converter89);
        org.junit.Assert.assertNotNull(executor91);
        org.junit.Assert.assertNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(converter93);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05259");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = builder0.server;
        retrofit.converter.Converter converter20 = builder0.converter;
        retrofit.RestAdapter.LogLevel logLevel21 = builder0.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05260");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel37);
        builder0.log = log35;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.Profiler profiler52 = restAdapter51.profiler;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean54 = logLevel53.log();
        restAdapter51.logLevel = logLevel53;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        restAdapter51.log = log56;
        builder40.log = log56;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder40.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("hi!");
        retrofit.RestAdapter.Log log73 = builder72.log;
        builder0.log = log73;
        retrofit.RestAdapter.Builder builder76 = builder0.setServer("hi!");
        retrofit.client.Client client77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder76.setClient(client77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05261");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel19;
        retrofit.Profiler profiler21 = restAdapter10.profiler;
        retrofit.Server server22 = restAdapter10.server;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter10.new RestHandler();
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.converter.Converter converter35 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler36 = restAdapter34.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.logLevel;
        restAdapter10.logLevel = logLevel37;
        retrofit.client.Client.Provider provider39 = restAdapter10.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider39);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05262");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter32.new RestHandler();
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        restAdapter32.logLevel = logLevel43;
        retrofit.converter.Converter converter47 = restAdapter32.converter;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter32.getLogLevel();
        restAdapter10.setLogLevel(logLevel48);
        retrofit.Profiler profiler50 = restAdapter10.profiler;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        restAdapter51.log = log52;
        log52.log("");
        log52.log("");
        restAdapter10.log = log52;
        retrofit.RequestInterceptor requestInterceptor59 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(requestInterceptor59);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05263");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder13.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder13.errorHandler;
        restAdapter11.errorHandler = errorHandler16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        builder18.log = log34;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder18.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.Server server51 = null;
        builder50.server = server51;
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean63 = logLevel62.log();
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log66 = null;
        restAdapter64.log = log66;
        retrofit.Profiler profiler68 = null;
        restAdapter64.profiler = profiler68;
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter64.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter64.getLogLevel();
        builder50.logLevel = logLevel71;
        restAdapter11.setLogLevel(logLevel71);
        retrofit.RestAdapter.RestHandler restHandler74 = restAdapter11.new RestHandler();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(requestInterceptor70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05264");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.client.Client.Provider provider2 = null;
        restAdapter0.clientProvider = provider2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider5 = null;
        builder4.clientProvider = provider5;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.client.Client.Provider provider10 = builder8.clientProvider;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider13 = builder11.clientProvider;
        builder8.clientProvider = provider13;
        builder4.clientProvider = provider13;
        java.util.concurrent.Executor executor16 = builder4.httpExecutor;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider19 = null;
        builder18.clientProvider = provider19;
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.client.Client.Provider provider24 = builder22.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder25.clientProvider;
        builder22.clientProvider = provider27;
        builder18.clientProvider = provider27;
        java.util.concurrent.Executor executor30 = builder18.httpExecutor;
        builder4.httpExecutor = executor30;
        restAdapter0.httpExecutor = executor30;
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNotNull(provider10);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(executor30);
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05265");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean41 = logLevel40.log();
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log44 = null;
        restAdapter42.log = log44;
        retrofit.Profiler profiler46 = null;
        restAdapter42.profiler = profiler46;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter42.requestInterceptor;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.Profiler profiler61 = restAdapter60.profiler;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean63 = logLevel62.log();
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        restAdapter60.log = log65;
        builder49.log = log65;
        retrofit.Server server68 = null;
        retrofit.client.Client.Provider provider69 = null;
        java.util.concurrent.Executor executor70 = null;
        java.util.concurrent.Executor executor71 = null;
        retrofit.RequestInterceptor requestInterceptor72 = null;
        retrofit.converter.Converter converter73 = null;
        retrofit.Profiler profiler74 = null;
        retrofit.ErrorHandler errorHandler75 = null;
        retrofit.RestAdapter.Log log76 = null;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server68, provider69, executor70, executor71, requestInterceptor72, converter73, profiler74, errorHandler75, log76, logLevel77);
        retrofit.RestAdapter.Builder builder79 = builder49.setLogLevel(logLevel77);
        java.util.concurrent.Executor executor80 = null;
        builder79.callbackExecutor = executor80;
        retrofit.converter.Converter converter82 = builder79.converter;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider84 = null;
        builder83.clientProvider = provider84;
        builder83.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor87 = builder83.requestInterceptor;
        builder79.requestInterceptor = requestInterceptor87;
        restAdapter42.requestInterceptor = requestInterceptor87;
        retrofit.RestAdapter.Builder builder90 = builder0.setRequestInterceptor(requestInterceptor87);
        java.util.concurrent.Executor executor91 = builder0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel92 = builder0.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(requestInterceptor48);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(converter82);
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNull(executor91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05266");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel37);
        builder0.log = log35;
        retrofit.Profiler profiler40 = builder0.profiler;
        retrofit.Profiler profiler41 = null;
        builder0.profiler = profiler41;
        retrofit.Profiler profiler43 = null;
        builder0.profiler = profiler43;
        builder0.ensureSaneDefaults();
        retrofit.Server server46 = builder0.server;
        retrofit.RestAdapter.Log log47 = builder0.log;
        log47.log("hi!");
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertNotNull(log47);
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05267");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server12 = restAdapter11.server;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter11.logLevel;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        builder14.log = log30;
        log30.log("");
        log30.log("hi!");
        log30.log("hi!");
        restAdapter11.log = log30;
        retrofit.RestAdapter.Log log40 = restAdapter11.log;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.Profiler profiler53 = restAdapter52.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean55 = logLevel54.log();
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        restAdapter52.log = log57;
        builder41.log = log57;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel69);
        retrofit.RestAdapter.Builder builder71 = builder41.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.client.Client.Provider provider77 = builder75.clientProvider;
        builder72.clientProvider = provider77;
        retrofit.RestAdapter.Builder builder79 = builder41.setClient(provider77);
        retrofit.client.Client.Provider provider80 = builder41.clientProvider;
        restAdapter11.clientProvider = provider80;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(provider80);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05268");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = builder5.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder8 = builder5.setLogLevel(logLevel7);
        retrofit.RequestInterceptor requestInterceptor9 = builder5.requestInterceptor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Log log19 = null;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log19, logLevel20);
        retrofit.Profiler profiler22 = restAdapter21.profiler;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean24 = logLevel23.log();
        restAdapter21.logLevel = logLevel23;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        restAdapter21.log = log26;
        builder10.log = log26;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.RestAdapter.Builder builder40 = builder10.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider45 = null;
        builder44.clientProvider = provider45;
        java.util.concurrent.Executor executor47 = builder44.httpExecutor;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Server server52 = null;
        builder48.server = server52;
        java.util.concurrent.Executor executor54 = builder48.callbackExecutor;
        builder44.httpExecutor = executor54;
        builder43.callbackExecutor = executor54;
        builder40.httpExecutor = executor54;
        builder5.httpExecutor = executor54;
        retrofit.Profiler profiler59 = builder5.profiler;
        retrofit.client.Client.Provider provider60 = builder5.clientProvider;
        retrofit.Server server61 = null;
        retrofit.client.Client.Provider provider62 = null;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.converter.Converter converter66 = null;
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Log log69 = null;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server61, provider62, executor63, executor64, requestInterceptor65, converter66, profiler67, errorHandler68, log69, logLevel70);
        retrofit.Profiler profiler72 = restAdapter71.profiler;
        retrofit.ErrorHandler errorHandler73 = restAdapter71.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.setLogLevel(logLevel74);
        retrofit.Server server76 = null;
        retrofit.client.Client.Provider provider77 = null;
        java.util.concurrent.Executor executor78 = null;
        java.util.concurrent.Executor executor79 = null;
        retrofit.RequestInterceptor requestInterceptor80 = null;
        retrofit.converter.Converter converter81 = null;
        retrofit.Profiler profiler82 = null;
        retrofit.ErrorHandler errorHandler83 = null;
        retrofit.RestAdapter.Log log84 = null;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server76, provider77, executor78, executor79, requestInterceptor80, converter81, profiler82, errorHandler83, log84, logLevel85);
        retrofit.Profiler profiler87 = restAdapter86.profiler;
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean89 = logLevel88.log();
        restAdapter86.logLevel = logLevel88;
        retrofit.RestAdapter.Log log91 = retrofit.RestAdapter.Log.NONE;
        restAdapter86.log = log91;
        restAdapter71.log = log91;
        retrofit.RestAdapter.Builder builder94 = builder5.setLog(log91);
        retrofit.RestAdapter.Builder builder95 = builder0.setLog(log91);
        retrofit.Profiler profiler96 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder97 = builder95.setProfiler(profiler96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler72);
        org.junit.Assert.assertNull(errorHandler73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05269");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.lang.String str8 = request6.getMethod();
        java.lang.String str9 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        java.lang.String str11 = request6.getMethod();
        java.lang.String str12 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request6.getBody();
        java.lang.String str14 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05270");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider13 = restAdapter10.clientProvider;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean24 = logLevel23.log();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.client.Client.Provider provider29 = builder27.clientProvider;
        retrofit.ErrorHandler errorHandler30 = builder27.errorHandler;
        restAdapter25.errorHandler = errorHandler30;
        restAdapter10.errorHandler = errorHandler30;
        retrofit.Profiler profiler33 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter10.logLevel;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.Profiler profiler38 = restAdapter35.profiler;
        retrofit.Server server39 = restAdapter35.server;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean50 = logLevel49.log();
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter51.new RestHandler();
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean63 = logLevel62.log();
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        restAdapter51.logLevel = logLevel62;
        retrofit.converter.Converter converter66 = restAdapter51.converter;
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter51.getLogLevel();
        restAdapter35.logLevel = logLevel67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider70 = null;
        builder69.clientProvider = provider70;
        builder69.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor73 = builder69.requestInterceptor;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider76 = null;
        builder75.clientProvider = provider76;
        java.util.concurrent.Executor executor78 = builder75.httpExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.Profiler profiler81 = null;
        builder79.profiler = profiler81;
        retrofit.Server server83 = null;
        builder79.server = server83;
        java.util.concurrent.Executor executor85 = builder79.callbackExecutor;
        builder75.httpExecutor = executor85;
        builder74.callbackExecutor = executor85;
        builder69.callbackExecutor = executor85;
        retrofit.RequestInterceptor requestInterceptor89 = builder69.requestInterceptor;
        restAdapter35.requestInterceptor = requestInterceptor89;
        restAdapter10.requestInterceptor = requestInterceptor89;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(provider29);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNull(executor78);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(requestInterceptor89);
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05271");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.Server server15 = restAdapter10.server;
        retrofit.Server server16 = restAdapter10.server;
        retrofit.converter.Converter converter17 = restAdapter10.converter;
        java.util.concurrent.Executor executor18 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter10.logLevel;
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter10.new RestHandler();
        retrofit.ErrorHandler errorHandler21 = restAdapter10.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler21);
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05272");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider5 = null;
        builder4.clientProvider = provider5;
        builder4.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor8 = builder4.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider11 = null;
        builder10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = builder10.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.Profiler profiler16 = null;
        builder14.profiler = profiler16;
        retrofit.Server server18 = null;
        builder14.server = server18;
        java.util.concurrent.Executor executor20 = builder14.callbackExecutor;
        builder10.httpExecutor = executor20;
        builder9.callbackExecutor = executor20;
        builder4.callbackExecutor = executor20;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.Profiler profiler26 = null;
        builder24.profiler = profiler26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.Server server32 = null;
        builder28.server = server32;
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        builder24.callbackExecutor = executor34;
        retrofit.RestAdapter.Builder builder36 = builder0.setExecutors(executor20, executor34);
        retrofit.converter.Converter converter37 = builder0.converter;
        retrofit.client.Client.Provider provider38 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.Profiler profiler51 = restAdapter50.profiler;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean53 = logLevel52.log();
        restAdapter50.logLevel = logLevel52;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        restAdapter50.log = log55;
        builder39.log = log55;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder39.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("hi!");
        retrofit.RestAdapter.Log log72 = builder71.log;
        retrofit.RequestInterceptor requestInterceptor73 = builder71.requestInterceptor;
        retrofit.Server server74 = builder71.server;
        retrofit.RestAdapter.Builder builder75 = builder0.setServer(server74);
        retrofit.client.Client.Provider provider76 = builder0.clientProvider;
        builder0.ensureSaneDefaults();
        retrofit.converter.Converter converter78 = builder0.converter;
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(converter37);
        org.junit.Assert.assertNotNull(provider38);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNotNull(converter78);
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05273");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("hi!");
        retrofit.Server server33 = null;
        builder32.server = server33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder35.clientProvider;
        retrofit.ErrorHandler errorHandler38 = builder35.errorHandler;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.client.Client.Provider provider41 = builder39.clientProvider;
        retrofit.ErrorHandler errorHandler42 = builder39.errorHandler;
        retrofit.RestAdapter.Builder builder43 = builder35.setErrorHandler(errorHandler42);
        retrofit.Server server44 = builder35.server;
        retrofit.converter.Converter converter45 = builder35.converter;
        builder32.converter = converter45;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.Profiler profiler58 = restAdapter57.profiler;
        retrofit.ErrorHandler errorHandler59 = restAdapter57.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.setLogLevel(logLevel60);
        retrofit.Server server62 = restAdapter57.server;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.Builder builder64 = builder32.setLogLevel(logLevel63);
        retrofit.RequestInterceptor requestInterceptor65 = builder64.requestInterceptor;
        retrofit.Profiler profiler66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder64.setProfiler(profiler66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(provider41);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertNotNull(converter45);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(requestInterceptor65);
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05274");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.client.Client.Provider provider7 = builder5.clientProvider;
        retrofit.ErrorHandler errorHandler8 = builder5.errorHandler;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.client.Client.Provider provider11 = builder9.clientProvider;
        retrofit.ErrorHandler errorHandler12 = builder9.errorHandler;
        retrofit.RestAdapter.Builder builder13 = builder5.setErrorHandler(errorHandler12);
        builder0.errorHandler = errorHandler12;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler16 = restAdapter15.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.Profiler profiler18 = restAdapter15.profiler;
        retrofit.Server server19 = restAdapter15.server;
        retrofit.ErrorHandler errorHandler20 = restAdapter15.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter15.getLogLevel();
        java.util.concurrent.Executor executor22 = restAdapter15.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter15.new RestHandler();
        retrofit.Server server24 = restAdapter15.server;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.Profiler profiler27 = null;
        builder25.profiler = profiler27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.Profiler profiler31 = null;
        builder29.profiler = profiler31;
        retrofit.Server server33 = null;
        builder29.server = server33;
        java.util.concurrent.Executor executor35 = builder29.callbackExecutor;
        builder25.callbackExecutor = executor35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        retrofit.Profiler profiler56 = restAdapter55.profiler;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean58 = logLevel57.log();
        restAdapter55.logLevel = logLevel57;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        restAdapter55.log = log60;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log60, logLevel62);
        builder25.log = log60;
        retrofit.RequestInterceptor requestInterceptor65 = builder25.requestInterceptor;
        retrofit.ErrorHandler errorHandler66 = builder25.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel67 = builder25.logLevel;
        restAdapter15.logLevel = logLevel67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider71 = builder69.clientProvider;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        builder69.clientProvider = provider74;
        retrofit.client.Client.Provider provider76 = builder69.clientProvider;
        retrofit.Profiler profiler77 = null;
        builder69.profiler = profiler77;
        retrofit.RestAdapter.Log log79 = builder69.log;
        retrofit.RestAdapter.Log log80 = builder69.log;
        restAdapter15.log = log80;
        retrofit.RestAdapter.Builder builder82 = builder0.setLog(log80);
        retrofit.Server server83 = builder82.server;
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(errorHandler20);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(server83);
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05275");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        java.util.concurrent.Executor executor12 = builder0.httpExecutor;
        builder0.ensureSaneDefaults();
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean24 = logLevel23.log();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.client.Client.Provider provider29 = builder27.clientProvider;
        retrofit.ErrorHandler errorHandler30 = builder27.errorHandler;
        restAdapter25.errorHandler = errorHandler30;
        retrofit.RestAdapter.Log log32 = restAdapter25.log;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean43 = logLevel42.log();
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter44.new RestHandler();
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean56 = logLevel55.log();
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        restAdapter44.logLevel = logLevel55;
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter44.new RestHandler();
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel69);
        retrofit.converter.Converter converter71 = restAdapter70.converter;
        retrofit.Profiler profiler72 = null;
        restAdapter70.profiler = profiler72;
        java.util.concurrent.Executor executor74 = restAdapter70.callbackExecutor;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.Profiler profiler77 = null;
        builder75.profiler = profiler77;
        retrofit.Server server79 = null;
        builder75.server = server79;
        java.util.concurrent.Executor executor81 = builder75.callbackExecutor;
        retrofit.converter.Converter converter82 = builder75.converter;
        restAdapter70.converter = converter82;
        restAdapter44.converter = converter82;
        restAdapter25.converter = converter82;
        builder0.converter = converter82;
        java.util.concurrent.Executor executor87 = builder0.httpExecutor;
        java.util.concurrent.Executor executor88 = builder0.httpExecutor;
        retrofit.client.Client client89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder90 = builder0.setClient(client89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(provider29);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter71);
        org.junit.Assert.assertNull(executor74);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(converter82);
        org.junit.Assert.assertNotNull(executor87);
        org.junit.Assert.assertNotNull(executor88);
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05276");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder13.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder13.errorHandler;
        restAdapter11.errorHandler = errorHandler16;
        retrofit.Profiler profiler18 = null;
        restAdapter11.profiler = profiler18;
        java.util.concurrent.Executor executor20 = restAdapter11.httpExecutor;
        java.util.concurrent.Executor executor21 = restAdapter11.callbackExecutor;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider23 = null;
        builder22.clientProvider = provider23;
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.client.Client.Provider provider28 = builder26.clientProvider;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder29.clientProvider;
        builder26.clientProvider = provider31;
        builder22.clientProvider = provider31;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.Profiler profiler40 = null;
        builder38.profiler = profiler40;
        retrofit.Server server42 = null;
        builder38.server = server42;
        java.util.concurrent.Executor executor44 = builder38.callbackExecutor;
        builder34.callbackExecutor = executor44;
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = null;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel63);
        retrofit.Profiler profiler65 = restAdapter64.profiler;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean67 = logLevel66.log();
        restAdapter64.logLevel = logLevel66;
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        restAdapter64.log = log69;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log69, logLevel71);
        builder34.log = log69;
        retrofit.RestAdapter.Builder builder74 = builder22.setLog(log69);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.client.Client.Provider provider77 = builder75.clientProvider;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.client.Client.Provider provider80 = builder78.clientProvider;
        builder75.clientProvider = provider80;
        retrofit.client.Client.Provider provider82 = builder75.clientProvider;
        retrofit.RestAdapter.Builder builder83 = builder22.setClient(provider82);
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.client.Client.Provider provider86 = builder84.clientProvider;
        retrofit.ErrorHandler errorHandler87 = builder84.errorHandler;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        builder88.ensureSaneDefaults();
        retrofit.client.Client.Provider provider90 = builder88.clientProvider;
        retrofit.ErrorHandler errorHandler91 = builder88.errorHandler;
        retrofit.RestAdapter.Builder builder92 = builder84.setErrorHandler(errorHandler91);
        retrofit.RestAdapter.Builder builder93 = builder83.setErrorHandler(errorHandler91);
        retrofit.converter.Converter converter94 = builder93.converter;
        retrofit.RequestInterceptor requestInterceptor95 = builder93.requestInterceptor;
        restAdapter11.requestInterceptor = requestInterceptor95;
        java.util.concurrent.Executor executor97 = restAdapter11.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(provider80);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(provider90);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(converter94);
        org.junit.Assert.assertNotNull(requestInterceptor95);
        org.junit.Assert.assertNull(executor97);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05277");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter32.new RestHandler();
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        restAdapter32.logLevel = logLevel43;
        retrofit.converter.Converter converter47 = restAdapter32.converter;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter32.getLogLevel();
        restAdapter10.setLogLevel(logLevel48);
        retrofit.Server server50 = restAdapter10.server;
        retrofit.RestAdapter.Log log51 = restAdapter10.log;
        java.util.concurrent.Executor executor52 = restAdapter10.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor53 = restAdapter10.requestInterceptor;
        retrofit.client.Response response55 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response57 = restAdapter10.logAndReplaceResponse("", response55, (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(requestInterceptor53);
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05278");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = builder0.server;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean30 = logLevel29.log();
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log33 = null;
        restAdapter31.log = log33;
        retrofit.Profiler profiler35 = null;
        restAdapter31.profiler = profiler35;
        retrofit.Profiler profiler37 = null;
        restAdapter31.profiler = profiler37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.Profiler profiler51 = restAdapter50.profiler;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean53 = logLevel52.log();
        restAdapter50.logLevel = logLevel52;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        restAdapter50.log = log55;
        builder39.log = log55;
        restAdapter31.log = log55;
        log55.log("");
        retrofit.RestAdapter.Builder builder61 = builder0.setLog(log55);
        retrofit.Profiler profiler62 = builder61.profiler;
        java.util.concurrent.Executor executor63 = builder61.callbackExecutor;
        retrofit.Server server64 = null;
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = null;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log72, logLevel73);
        retrofit.Profiler profiler75 = restAdapter74.profiler;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean77 = logLevel76.log();
        restAdapter74.logLevel = logLevel76;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        restAdapter74.log = log79;
        log79.log("hi!");
        retrofit.RestAdapter.Builder builder83 = builder61.setLog(log79);
        log79.log("hi!");
        log79.log("");
        log79.log("hi!");
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05279");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.Server server3 = null;
        retrofit.client.Client.Provider provider4 = null;
        java.util.concurrent.Executor executor5 = null;
        java.util.concurrent.Executor executor6 = null;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        retrofit.converter.Converter converter8 = null;
        retrofit.Profiler profiler9 = null;
        retrofit.ErrorHandler errorHandler10 = null;
        retrofit.RestAdapter.Log log11 = null;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server3, provider4, executor5, executor6, requestInterceptor7, converter8, profiler9, errorHandler10, log11, logLevel12);
        retrofit.converter.Converter converter14 = restAdapter13.converter;
        retrofit.ErrorHandler errorHandler15 = restAdapter13.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter13.logLevel;
        builder0.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        builder18.log = log34;
        retrofit.Server server37 = builder18.server;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean48 = logLevel47.log();
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log51 = null;
        restAdapter49.log = log51;
        retrofit.Profiler profiler53 = null;
        restAdapter49.profiler = profiler53;
        retrofit.Profiler profiler55 = null;
        restAdapter49.profiler = profiler55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.Profiler profiler69 = restAdapter68.profiler;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean71 = logLevel70.log();
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        restAdapter68.log = log73;
        builder57.log = log73;
        restAdapter49.log = log73;
        log73.log("");
        retrofit.RestAdapter.Builder builder79 = builder18.setLog(log73);
        retrofit.RestAdapter.Builder builder80 = builder0.setLog(log73);
        retrofit.RestAdapter.Log log81 = builder80.log;
        log81.log("");
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05280");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = null;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel16);
        retrofit.Profiler profiler18 = restAdapter17.profiler;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean20 = logLevel19.log();
        restAdapter17.logLevel = logLevel19;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        restAdapter17.log = log22;
        builder6.log = log22;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.RestAdapter.Builder builder36 = builder6.setLogLevel(logLevel34);
        java.util.concurrent.Executor executor37 = null;
        builder36.callbackExecutor = executor37;
        retrofit.converter.Converter converter39 = builder36.converter;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = null;
        builder40.clientProvider = provider41;
        builder40.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor44 = builder40.requestInterceptor;
        builder36.requestInterceptor = requestInterceptor44;
        retrofit.RestAdapter.Builder builder46 = builder0.setRequestInterceptor(requestInterceptor44);
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.converter.Converter converter58 = restAdapter57.converter;
        retrofit.ErrorHandler errorHandler59 = restAdapter57.errorHandler;
        retrofit.Profiler profiler60 = null;
        restAdapter57.profiler = profiler60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        retrofit.ErrorHandler errorHandler65 = builder62.errorHandler;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.client.Client.Provider provider68 = builder66.clientProvider;
        retrofit.ErrorHandler errorHandler69 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder70 = builder62.setErrorHandler(errorHandler69);
        restAdapter57.errorHandler = errorHandler69;
        retrofit.RestAdapter.Builder builder72 = builder46.setErrorHandler(errorHandler69);
        retrofit.client.Client.Provider provider73 = builder46.clientProvider;
        builder46.ensureSaneDefaults();
        retrofit.Server server75 = null;
        retrofit.client.Client.Provider provider76 = null;
        java.util.concurrent.Executor executor77 = null;
        java.util.concurrent.Executor executor78 = null;
        retrofit.RequestInterceptor requestInterceptor79 = null;
        retrofit.converter.Converter converter80 = null;
        retrofit.Profiler profiler81 = null;
        retrofit.ErrorHandler errorHandler82 = null;
        retrofit.RestAdapter.Log log83 = null;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server75, provider76, executor77, executor78, requestInterceptor79, converter80, profiler81, errorHandler82, log83, logLevel84);
        retrofit.client.Client.Provider provider86 = null;
        restAdapter85.clientProvider = provider86;
        java.util.concurrent.Executor executor88 = restAdapter85.callbackExecutor;
        retrofit.client.Client.Provider provider89 = restAdapter85.clientProvider;
        retrofit.client.Client.Provider provider90 = restAdapter85.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter85.getLogLevel();
        builder46.logLevel = logLevel91;
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor88);
        org.junit.Assert.assertNull(provider89);
        org.junit.Assert.assertNull(provider90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05281");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean26 = logLevel25.log();
        restAdapter23.logLevel = logLevel25;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        restAdapter23.log = log28;
        builder12.log = log28;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder12.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider45 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        builder43.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder50 = builder12.setClient(provider48);
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = null;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel60);
        retrofit.Profiler profiler62 = restAdapter61.profiler;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean64 = logLevel63.log();
        restAdapter61.logLevel = logLevel63;
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.Builder builder67 = builder50.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider69 = null;
        builder68.clientProvider = provider69;
        builder68.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.client.Client.Provider provider77 = builder75.clientProvider;
        builder72.clientProvider = provider77;
        builder68.clientProvider = provider77;
        builder50.clientProvider = provider77;
        builder0.clientProvider = provider77;
        retrofit.RestAdapter.LogLevel logLevel82 = builder0.logLevel;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05282");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server11 = null;
        restAdapter10.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = builder13.callbackExecutor;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean25 = logLevel24.log();
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log28 = null;
        restAdapter26.log = log28;
        retrofit.Profiler profiler30 = null;
        restAdapter26.profiler = profiler30;
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter26.requestInterceptor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.Profiler profiler45 = restAdapter44.profiler;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean47 = logLevel46.log();
        restAdapter44.logLevel = logLevel46;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        restAdapter44.log = log49;
        builder33.log = log49;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder33.setLogLevel(logLevel61);
        java.util.concurrent.Executor executor64 = null;
        builder63.callbackExecutor = executor64;
        retrofit.converter.Converter converter66 = builder63.converter;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider68 = null;
        builder67.clientProvider = provider68;
        builder67.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor71 = builder67.requestInterceptor;
        builder63.requestInterceptor = requestInterceptor71;
        retrofit.Server server73 = null;
        builder63.server = server73;
        retrofit.RequestInterceptor requestInterceptor75 = builder63.requestInterceptor;
        restAdapter26.requestInterceptor = requestInterceptor75;
        retrofit.RestAdapter.Builder builder77 = builder13.setRequestInterceptor(requestInterceptor75);
        restAdapter10.requestInterceptor = requestInterceptor75;
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter10.logLevel;
        retrofit.Server server80 = restAdapter10.server;
        retrofit.RestAdapter.Log log81 = restAdapter10.log;
        java.util.concurrent.Executor executor82 = restAdapter10.callbackExecutor;
        retrofit.Profiler profiler83 = restAdapter10.profiler;
        retrofit.client.Client.Provider provider84 = restAdapter10.clientProvider;
        retrofit.Profiler profiler85 = null;
        restAdapter10.profiler = profiler85;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(requestInterceptor32);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server80);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNull(profiler83);
        org.junit.Assert.assertNull(provider84);
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05283");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.converter.Converter converter16 = restAdapter15.converter;
        retrofit.Profiler profiler17 = null;
        restAdapter15.profiler = profiler17;
        java.util.concurrent.Executor executor19 = restAdapter15.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        builder20.log = log36;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder20.setLogLevel(logLevel48);
        java.util.concurrent.Executor executor51 = null;
        builder50.callbackExecutor = executor51;
        retrofit.ErrorHandler errorHandler53 = null;
        builder50.errorHandler = errorHandler53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.Server server59 = null;
        builder55.server = server59;
        java.util.concurrent.Executor executor61 = builder55.callbackExecutor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        builder55.clientProvider = provider64;
        builder50.clientProvider = provider64;
        restAdapter15.clientProvider = provider64;
        retrofit.RestAdapter.Builder builder68 = builder0.setClient(provider64);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider70 = null;
        builder69.clientProvider = provider70;
        java.util.concurrent.Executor executor72 = builder69.httpExecutor;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.Profiler profiler75 = null;
        builder73.profiler = profiler75;
        retrofit.Server server77 = null;
        builder73.server = server77;
        java.util.concurrent.Executor executor79 = builder73.callbackExecutor;
        builder69.httpExecutor = executor79;
        java.util.concurrent.Executor executor81 = builder69.httpExecutor;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.Profiler profiler84 = null;
        builder82.profiler = profiler84;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        builder86.ensureSaneDefaults();
        retrofit.Profiler profiler88 = null;
        builder86.profiler = profiler88;
        retrofit.Server server90 = null;
        builder86.server = server90;
        java.util.concurrent.Executor executor92 = builder86.callbackExecutor;
        builder82.callbackExecutor = executor92;
        retrofit.RestAdapter.Builder builder94 = builder0.setExecutors(executor81, executor92);
        retrofit.client.Client.Provider provider95 = builder0.clientProvider;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter96 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(executor92);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(provider95);
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05284");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder13.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder13.errorHandler;
        restAdapter11.errorHandler = errorHandler16;
        retrofit.RestAdapter.Log log18 = restAdapter11.log;
        retrofit.ErrorHandler errorHandler19 = restAdapter11.errorHandler;
        retrofit.Server server20 = restAdapter11.server;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log37;
        builder21.log = log37;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder21.setLogLevel(logLevel49);
        java.util.concurrent.Executor executor52 = null;
        builder51.callbackExecutor = executor52;
        retrofit.converter.Converter converter54 = builder51.converter;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider56 = null;
        builder55.clientProvider = provider56;
        builder55.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor59 = builder55.requestInterceptor;
        builder51.requestInterceptor = requestInterceptor59;
        retrofit.Server server61 = null;
        builder51.server = server61;
        java.util.concurrent.Executor executor63 = builder51.httpExecutor;
        retrofit.RestAdapter.Log log64 = builder51.log;
        retrofit.RequestInterceptor requestInterceptor65 = builder51.requestInterceptor;
        restAdapter11.requestInterceptor = requestInterceptor65;
        retrofit.Server server67 = null;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel76);
        retrofit.converter.Converter converter78 = restAdapter77.converter;
        retrofit.ErrorHandler errorHandler79 = restAdapter77.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter77.logLevel;
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter77.logLevel;
        restAdapter11.setLogLevel(logLevel84);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNotNull(errorHandler19);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNull(errorHandler79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05285");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        java.util.concurrent.Executor executor12 = builder0.httpExecutor;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.ErrorHandler errorHandler25 = restAdapter23.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider29 = null;
        builder28.clientProvider = provider29;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.converter.Converter converter42 = restAdapter41.converter;
        retrofit.ErrorHandler errorHandler43 = restAdapter41.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter41.logLevel;
        builder28.logLevel = logLevel44;
        restAdapter23.setLogLevel(logLevel44);
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Server server52 = null;
        builder48.server = server52;
        java.util.concurrent.Executor executor54 = builder48.callbackExecutor;
        restAdapter47.callbackExecutor = executor54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        retrofit.converter.Converter converter63 = builder56.converter;
        restAdapter47.converter = converter63;
        restAdapter23.converter = converter63;
        retrofit.RestAdapter.Builder builder66 = builder0.setConverter(converter63);
        retrofit.RestAdapter.LogLevel logLevel67 = builder0.logLevel;
        retrofit.client.Client client68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder69 = builder0.setClient(client68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(errorHandler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(converter63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05286");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log1;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor7 = null;
        restAdapter0.callbackExecutor = executor7;
        retrofit.RestAdapter.Log log9 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNull(logLevel10);
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05287");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder13.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder13.errorHandler;
        restAdapter11.errorHandler = errorHandler16;
        retrofit.RestAdapter.Log log18 = restAdapter11.log;
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter11.requestInterceptor;
        java.util.concurrent.Executor executor20 = restAdapter11.httpExecutor;
        retrofit.client.Client.Provider provider21 = restAdapter11.clientProvider;
        retrofit.RestAdapter.Log log22 = restAdapter11.log;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(log22);
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05288");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.Profiler profiler25 = restAdapter24.profiler;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        restAdapter24.log = log29;
        builder13.log = log29;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.RestAdapter.Builder builder43 = builder13.setLogLevel(logLevel41);
        java.util.concurrent.Executor executor44 = null;
        builder43.callbackExecutor = executor44;
        retrofit.ErrorHandler errorHandler46 = null;
        builder43.errorHandler = errorHandler46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder48.clientProvider;
        retrofit.RestAdapter.Builder builder51 = builder43.setClient(provider50);
        retrofit.Server server52 = null;
        builder43.server = server52;
        retrofit.RequestInterceptor requestInterceptor54 = builder43.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel55 = builder43.logLevel;
        restAdapter10.setLogLevel(logLevel55);
        retrofit.RestAdapter.Log log57 = restAdapter10.log;
        retrofit.client.Client.Provider provider58 = restAdapter10.clientProvider;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel68);
        retrofit.Profiler profiler70 = restAdapter69.profiler;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean72 = logLevel71.log();
        restAdapter69.logLevel = logLevel71;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        restAdapter69.log = log74;
        retrofit.ErrorHandler errorHandler76 = null;
        restAdapter69.errorHandler = errorHandler76;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter69.logLevel = logLevel78;
        retrofit.Profiler profiler80 = restAdapter69.profiler;
        retrofit.Server server81 = null;
        restAdapter69.server = server81;
        retrofit.RequestInterceptor requestInterceptor83 = restAdapter69.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter69.getLogLevel();
        restAdapter10.setLogLevel(logLevel84);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(requestInterceptor54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler80);
        org.junit.Assert.assertNull(requestInterceptor83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05289");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = null;
        restAdapter10.converter = converter11;
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter10.requestInterceptor;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.client.Client.Provider provider16 = restAdapter10.clientProvider;
        retrofit.client.Response response18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response20 = restAdapter10.logAndReplaceResponse("", response18, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(provider16);
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05290");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        retrofit.client.Client.Provider provider6 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.Profiler profiler19 = restAdapter18.profiler;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean21 = logLevel20.log();
        restAdapter18.logLevel = logLevel20;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        restAdapter18.log = log23;
        builder7.log = log23;
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = null;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel35);
        retrofit.RestAdapter.Builder builder37 = builder7.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor38 = null;
        builder37.callbackExecutor = executor38;
        retrofit.converter.Converter converter40 = builder37.converter;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider42 = null;
        builder41.clientProvider = provider42;
        builder41.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor45 = builder41.requestInterceptor;
        builder37.requestInterceptor = requestInterceptor45;
        retrofit.Server server47 = null;
        builder37.server = server47;
        retrofit.RequestInterceptor requestInterceptor49 = builder37.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor49;
        retrofit.ErrorHandler errorHandler51 = builder0.errorHandler;
        java.util.concurrent.Executor executor52 = builder0.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor53 = builder0.requestInterceptor;
        retrofit.Profiler profiler54 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder55 = builder0.setProfiler(profiler54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(requestInterceptor53);
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05291");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        restAdapter10.log = log30;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel33;
        java.lang.Class<?> wildcardClass35 = restAdapter10.getClass();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05292");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.Server server4 = restAdapter0.server;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean15 = logLevel14.log();
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter16.new RestHandler();
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        restAdapter16.logLevel = logLevel27;
        retrofit.converter.Converter converter31 = restAdapter16.converter;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter16.getLogLevel();
        restAdapter0.logLevel = logLevel32;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter0.getLogLevel();
        retrofit.client.Client.Provider provider35 = restAdapter0.clientProvider;
        retrofit.Profiler profiler36 = null;
        restAdapter0.profiler = profiler36;
        java.lang.Throwable throwable38 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable38, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider35);
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05293");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider3 = null;
        builder2.clientProvider = provider3;
        builder2.ensureSaneDefaults();
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean19 = logLevel18.log();
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log21;
        builder2.log = log21;
        retrofit.RestAdapter.Builder builder24 = builder0.setLog(log21);
        java.util.concurrent.Executor executor25 = null;
        builder0.httpExecutor = executor25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = null;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel37);
        retrofit.Profiler profiler39 = restAdapter38.profiler;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean41 = logLevel40.log();
        restAdapter38.logLevel = logLevel40;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        restAdapter38.log = log43;
        builder27.log = log43;
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.RestAdapter.Builder builder57 = builder27.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.client.Client.Provider provider60 = builder58.clientProvider;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder61.clientProvider;
        builder58.clientProvider = provider63;
        retrofit.RestAdapter.Builder builder65 = builder27.setClient(provider63);
        retrofit.Server server66 = null;
        retrofit.client.Client.Provider provider67 = null;
        java.util.concurrent.Executor executor68 = null;
        java.util.concurrent.Executor executor69 = null;
        retrofit.RequestInterceptor requestInterceptor70 = null;
        retrofit.converter.Converter converter71 = null;
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Log log74 = null;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server66, provider67, executor68, executor69, requestInterceptor70, converter71, profiler72, errorHandler73, log74, logLevel75);
        retrofit.Profiler profiler77 = restAdapter76.profiler;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean79 = logLevel78.log();
        restAdapter76.logLevel = logLevel78;
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.Builder builder82 = builder65.setLogLevel(logLevel81);
        retrofit.converter.Converter converter83 = builder65.converter;
        retrofit.converter.Converter converter84 = builder65.converter;
        retrofit.RequestInterceptor requestInterceptor85 = builder65.requestInterceptor;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        builder86.ensureSaneDefaults();
        retrofit.client.Client.Provider provider88 = builder86.clientProvider;
        builder65.clientProvider = provider88;
        builder0.clientProvider = provider88;
        retrofit.Profiler profiler91 = builder0.profiler;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter92 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(converter83);
        org.junit.Assert.assertNull(converter84);
        org.junit.Assert.assertNull(requestInterceptor85);
        org.junit.Assert.assertNotNull(provider88);
        org.junit.Assert.assertNull(profiler91);
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05294");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = null;
        restAdapter10.converter = converter11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.Profiler profiler15 = null;
        builder13.profiler = profiler15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler29 = restAdapter28.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        restAdapter28.logLevel = logLevel30;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        restAdapter28.log = log33;
        builder17.log = log33;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder17.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider52 = null;
        builder51.clientProvider = provider52;
        java.util.concurrent.Executor executor54 = builder51.httpExecutor;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.Server server59 = null;
        builder55.server = server59;
        java.util.concurrent.Executor executor61 = builder55.callbackExecutor;
        builder51.httpExecutor = executor61;
        builder50.callbackExecutor = executor61;
        builder47.httpExecutor = executor61;
        retrofit.Server server65 = null;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel74);
        retrofit.Profiler profiler76 = restAdapter75.profiler;
        retrofit.ErrorHandler errorHandler77 = restAdapter75.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.setLogLevel(logLevel78);
        retrofit.Server server80 = restAdapter75.server;
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder82 = builder47.setLogLevel(logLevel81);
        retrofit.Server server83 = builder47.server;
        retrofit.RestAdapter.Builder builder84 = builder13.setServer(server83);
        restAdapter10.server = server83;
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter10.logLevel;
        retrofit.RestAdapter.Log log87 = restAdapter10.log;
        retrofit.RequestInterceptor requestInterceptor88 = restAdapter10.requestInterceptor;
        retrofit.converter.Converter converter89 = restAdapter10.converter;
        retrofit.RequestInterceptor requestInterceptor90 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler76);
        org.junit.Assert.assertNull(errorHandler77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log87);
        org.junit.Assert.assertNull(requestInterceptor88);
        org.junit.Assert.assertNull(converter89);
        org.junit.Assert.assertNull(requestInterceptor90);
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05295");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.converter.Converter converter7 = builder0.converter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel18);
        retrofit.Profiler profiler20 = restAdapter19.profiler;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean22 = logLevel21.log();
        restAdapter19.logLevel = logLevel21;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        restAdapter19.log = log24;
        builder8.log = log24;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.Profiler profiler38 = restAdapter37.profiler;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        restAdapter37.log = log42;
        retrofit.ErrorHandler errorHandler44 = null;
        restAdapter37.errorHandler = errorHandler44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter37.logLevel = logLevel46;
        retrofit.RestAdapter.Log log48 = restAdapter37.log;
        retrofit.RestAdapter.Builder builder49 = builder8.setLog(log48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.Profiler profiler52 = null;
        builder50.profiler = profiler52;
        retrofit.Server server54 = null;
        builder50.server = server54;
        retrofit.client.Client.Provider provider56 = builder50.clientProvider;
        builder8.clientProvider = provider56;
        retrofit.RestAdapter.Builder builder58 = builder0.setClient(provider56);
        retrofit.Profiler profiler59 = builder58.profiler;
        retrofit.client.Client.Provider provider60 = builder58.clientProvider;
        retrofit.converter.Converter converter61 = builder58.converter;
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNotNull(converter7);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(converter61);
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05296");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.ErrorHandler errorHandler16 = restAdapter10.errorHandler;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.ErrorHandler errorHandler29 = restAdapter27.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.setLogLevel(logLevel30);
        retrofit.Server server32 = restAdapter27.server;
        retrofit.Server server33 = restAdapter27.server;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log47 = null;
        restAdapter45.log = log47;
        retrofit.Profiler profiler49 = null;
        restAdapter45.profiler = profiler49;
        retrofit.RequestInterceptor requestInterceptor51 = restAdapter45.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.Profiler profiler64 = restAdapter63.profiler;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean66 = logLevel65.log();
        restAdapter63.logLevel = logLevel65;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        restAdapter63.log = log68;
        builder52.log = log68;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder52.setLogLevel(logLevel80);
        java.util.concurrent.Executor executor83 = null;
        builder82.callbackExecutor = executor83;
        retrofit.converter.Converter converter85 = builder82.converter;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider87 = null;
        builder86.clientProvider = provider87;
        builder86.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor90 = builder86.requestInterceptor;
        builder82.requestInterceptor = requestInterceptor90;
        restAdapter45.requestInterceptor = requestInterceptor90;
        restAdapter27.requestInterceptor = requestInterceptor90;
        restAdapter10.requestInterceptor = requestInterceptor90;
        retrofit.converter.Converter converter95 = restAdapter10.converter;
        java.util.concurrent.Executor executor96 = restAdapter10.httpExecutor;
        retrofit.Server server97 = restAdapter10.server;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(requestInterceptor51);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNull(converter95);
        org.junit.Assert.assertNull(executor96);
        org.junit.Assert.assertNull(server97);
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05297");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.Profiler profiler16 = restAdapter15.profiler;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        restAdapter15.log = log20;
        builder4.log = log20;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder4.setLogLevel(logLevel32);
        java.util.concurrent.Executor executor35 = null;
        builder34.callbackExecutor = executor35;
        retrofit.ErrorHandler errorHandler37 = null;
        builder34.errorHandler = errorHandler37;
        builder34.ensureSaneDefaults();
        retrofit.client.Client.Provider provider40 = builder34.clientProvider;
        builder0.clientProvider = provider40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider43 = null;
        builder42.clientProvider = provider43;
        java.util.concurrent.Executor executor45 = builder42.httpExecutor;
        retrofit.Profiler profiler46 = null;
        builder42.profiler = profiler46;
        retrofit.Server server48 = null;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = null;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean58 = logLevel57.log();
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel57);
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter59.new RestHandler();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder61.clientProvider;
        retrofit.ErrorHandler errorHandler64 = builder61.errorHandler;
        restAdapter59.errorHandler = errorHandler64;
        builder42.errorHandler = errorHandler64;
        retrofit.RestAdapter.Log log67 = builder42.log;
        retrofit.ErrorHandler errorHandler68 = builder42.errorHandler;
        retrofit.RestAdapter.Builder builder69 = builder0.setErrorHandler(errorHandler68);
        retrofit.Profiler profiler70 = builder69.profiler;
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter.Log log73 = builder69.log;
        retrofit.RestAdapter.Log log74 = builder69.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertNull(log74);
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05298");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Server server12 = restAdapter10.server;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel38);
        restAdapter10.log = log36;
        java.util.concurrent.Executor executor41 = restAdapter10.callbackExecutor;
        retrofit.Profiler profiler42 = restAdapter10.profiler;
        retrofit.Profiler profiler43 = restAdapter10.profiler;
        retrofit.Profiler profiler44 = null;
        restAdapter10.profiler = profiler44;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNull(profiler43);
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05299");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.client.Client.Provider provider33 = builder31.clientProvider;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.client.Client.Provider provider36 = builder34.clientProvider;
        builder31.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = builder0.setClient(provider36);
        retrofit.client.Client.Provider provider39 = builder0.clientProvider;
        java.util.concurrent.Executor executor40 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.Profiler profiler53 = restAdapter52.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean55 = logLevel54.log();
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        restAdapter52.log = log57;
        builder41.log = log57;
        retrofit.converter.Converter converter60 = builder41.converter;
        retrofit.RestAdapter.Log log61 = builder41.log;
        retrofit.converter.Converter converter62 = builder41.converter;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = null;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel72);
        retrofit.converter.Converter converter74 = restAdapter73.converter;
        retrofit.ErrorHandler errorHandler75 = restAdapter73.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter73.logLevel;
        retrofit.Profiler profiler77 = null;
        restAdapter73.profiler = profiler77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.converter.Converter converter81 = builder79.converter;
        restAdapter73.converter = converter81;
        retrofit.Server server83 = restAdapter73.server;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider85 = null;
        builder84.clientProvider = provider85;
        retrofit.converter.Converter converter87 = null;
        builder84.converter = converter87;
        builder84.ensureSaneDefaults();
        java.util.concurrent.Executor executor90 = builder84.callbackExecutor;
        retrofit.ErrorHandler errorHandler91 = builder84.errorHandler;
        restAdapter73.errorHandler = errorHandler91;
        retrofit.RestAdapter.Builder builder93 = builder41.setErrorHandler(errorHandler91);
        builder0.errorHandler = errorHandler91;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(provider39);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNull(converter62);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(errorHandler75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter81);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05300");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList16, typedOutput19);
        java.lang.Class<?> wildcardClass21 = headerList16.getClass();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05301");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider8 = null;
        builder7.clientProvider = provider8;
        java.util.concurrent.Executor executor10 = builder7.httpExecutor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.Profiler profiler13 = null;
        builder11.profiler = profiler13;
        retrofit.Server server15 = null;
        builder11.server = server15;
        java.util.concurrent.Executor executor17 = builder11.callbackExecutor;
        builder7.httpExecutor = executor17;
        retrofit.RestAdapter.LogLevel logLevel19 = builder7.logLevel;
        builder0.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.Profiler profiler23 = null;
        builder21.profiler = profiler23;
        retrofit.Server server25 = null;
        builder21.server = server25;
        retrofit.client.Client.Provider provider27 = builder21.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter39.log = log44;
        builder28.log = log44;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder28.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor59 = null;
        builder58.callbackExecutor = executor59;
        retrofit.converter.Converter converter61 = builder58.converter;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider63 = null;
        builder62.clientProvider = provider63;
        builder62.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor66 = builder62.requestInterceptor;
        builder58.requestInterceptor = requestInterceptor66;
        retrofit.Server server68 = null;
        builder58.server = server68;
        retrofit.RequestInterceptor requestInterceptor70 = builder58.requestInterceptor;
        builder21.requestInterceptor = requestInterceptor70;
        retrofit.RestAdapter.Builder builder72 = builder0.setRequestInterceptor(requestInterceptor70);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider74 = null;
        builder73.clientProvider = provider74;
        retrofit.converter.Converter converter76 = null;
        builder73.converter = converter76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.client.Client.Provider provider80 = builder78.clientProvider;
        retrofit.ErrorHandler errorHandler81 = builder78.errorHandler;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.client.Client.Provider provider84 = builder82.clientProvider;
        retrofit.ErrorHandler errorHandler85 = builder82.errorHandler;
        retrofit.RestAdapter.Builder builder86 = builder78.setErrorHandler(errorHandler85);
        builder73.errorHandler = errorHandler85;
        retrofit.RestAdapter.Builder builder88 = builder0.setErrorHandler(errorHandler85);
        retrofit.Profiler profiler89 = builder88.profiler;
        retrofit.client.Client client90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder88.setClient(client90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(provider80);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(profiler89);
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05302");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.Profiler profiler3 = builder0.profiler;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor7 = null;
        builder0.callbackExecutor = executor7;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(requestInterceptor6);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05303");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        builder1.ensureSaneDefaults();
        retrofit.Profiler profiler3 = null;
        builder1.profiler = profiler3;
        retrofit.Server server5 = null;
        builder1.server = server5;
        java.util.concurrent.Executor executor7 = builder1.callbackExecutor;
        restAdapter0.callbackExecutor = executor7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.Profiler profiler11 = null;
        builder9.profiler = profiler11;
        retrofit.Server server13 = null;
        builder9.server = server13;
        java.util.concurrent.Executor executor15 = builder9.callbackExecutor;
        retrofit.converter.Converter converter16 = builder9.converter;
        restAdapter0.converter = converter16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        builder18.log = log34;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder18.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor49 = null;
        builder48.callbackExecutor = executor49;
        retrofit.ErrorHandler errorHandler51 = null;
        builder48.errorHandler = errorHandler51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.Profiler profiler55 = null;
        builder53.profiler = profiler55;
        retrofit.Server server57 = null;
        builder53.server = server57;
        java.util.concurrent.Executor executor59 = builder53.callbackExecutor;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder60.clientProvider;
        builder53.clientProvider = provider62;
        builder48.clientProvider = provider62;
        java.util.concurrent.Executor executor65 = builder48.httpExecutor;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.client.Client.Provider provider68 = builder66.clientProvider;
        retrofit.ErrorHandler errorHandler69 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.client.Client.Provider provider72 = builder70.clientProvider;
        retrofit.ErrorHandler errorHandler73 = builder70.errorHandler;
        retrofit.RestAdapter.Builder builder74 = builder66.setErrorHandler(errorHandler73);
        builder48.errorHandler = errorHandler73;
        restAdapter0.errorHandler = errorHandler73;
        retrofit.RestAdapter.LogLevel logLevel77 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.setLogLevel(logLevel77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNull(executor65);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05304");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = null;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel13);
        retrofit.Profiler profiler15 = restAdapter14.profiler;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean17 = logLevel16.log();
        restAdapter14.logLevel = logLevel16;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        restAdapter14.log = log19;
        builder0.log = log19;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider24 = null;
        builder23.clientProvider = provider24;
        java.util.concurrent.Executor executor26 = builder23.httpExecutor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.Profiler profiler29 = null;
        builder27.profiler = profiler29;
        retrofit.Server server31 = null;
        builder27.server = server31;
        java.util.concurrent.Executor executor33 = builder27.callbackExecutor;
        builder23.httpExecutor = executor33;
        builder22.callbackExecutor = executor33;
        retrofit.RestAdapter.Log log36 = builder22.log;
        retrofit.Profiler profiler37 = builder22.profiler;
        retrofit.RestAdapter.Builder builder39 = builder22.setServer("hi!");
        retrofit.Server server40 = builder39.server;
        builder0.server = server40;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(server40);
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05305");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.client.Client.Provider provider7 = builder5.clientProvider;
        retrofit.ErrorHandler errorHandler8 = builder5.errorHandler;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.client.Client.Provider provider11 = builder9.clientProvider;
        retrofit.ErrorHandler errorHandler12 = builder9.errorHandler;
        retrofit.RestAdapter.Builder builder13 = builder5.setErrorHandler(errorHandler12);
        builder0.errorHandler = errorHandler12;
        java.util.concurrent.Executor executor15 = builder0.callbackExecutor;
        retrofit.RestAdapter.Log log16 = builder0.log;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder17.clientProvider;
        retrofit.ErrorHandler errorHandler20 = builder17.errorHandler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder21.clientProvider;
        retrofit.ErrorHandler errorHandler24 = builder21.errorHandler;
        retrofit.RestAdapter.Builder builder25 = builder17.setErrorHandler(errorHandler24);
        retrofit.Server server26 = builder17.server;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.Profiler profiler29 = null;
        builder27.profiler = profiler29;
        retrofit.Server server31 = null;
        builder27.server = server31;
        java.util.concurrent.Executor executor33 = builder27.callbackExecutor;
        retrofit.converter.Converter converter34 = builder27.converter;
        retrofit.RestAdapter.Builder builder35 = builder17.setConverter(converter34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder39 = builder36.setLogLevel(logLevel38);
        retrofit.RequestInterceptor requestInterceptor40 = builder36.requestInterceptor;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.Profiler profiler53 = restAdapter52.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean55 = logLevel54.log();
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        restAdapter52.log = log57;
        builder41.log = log57;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel69);
        retrofit.RestAdapter.Builder builder71 = builder41.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("hi!");
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider76 = null;
        builder75.clientProvider = provider76;
        java.util.concurrent.Executor executor78 = builder75.httpExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.Profiler profiler81 = null;
        builder79.profiler = profiler81;
        retrofit.Server server83 = null;
        builder79.server = server83;
        java.util.concurrent.Executor executor85 = builder79.callbackExecutor;
        builder75.httpExecutor = executor85;
        builder74.callbackExecutor = executor85;
        builder71.httpExecutor = executor85;
        builder36.httpExecutor = executor85;
        builder17.httpExecutor = executor85;
        builder0.httpExecutor = executor85;
        retrofit.RestAdapter.Log log92 = builder0.log;
        retrofit.Server server93 = builder0.server;
        retrofit.client.Client.Provider provider94 = builder0.clientProvider;
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(errorHandler24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(requestInterceptor40);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(executor78);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNull(log92);
        org.junit.Assert.assertNull(server93);
        org.junit.Assert.assertNull(provider94);
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05306");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Log log15 = restAdapter10.log;
        retrofit.RestAdapter.Log log16 = null;
        restAdapter10.log = log16;
        retrofit.RequestInterceptor requestInterceptor18 = restAdapter10.requestInterceptor;
        retrofit.Profiler profiler19 = restAdapter10.profiler;
        retrofit.Profiler profiler20 = null;
        restAdapter10.profiler = profiler20;
        retrofit.RestAdapter.Log log22 = restAdapter10.log;
        retrofit.Profiler profiler23 = restAdapter10.profiler;
        retrofit.RestAdapter.Log log24 = restAdapter10.log;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertNull(requestInterceptor18);
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(log24);
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05307");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = builder15.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder18 = builder15.setLogLevel(logLevel17);
        retrofit.client.Client.Provider provider19 = builder18.clientProvider;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider21 = null;
        builder20.clientProvider = provider21;
        retrofit.converter.Converter converter23 = null;
        builder20.converter = converter23;
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.Profiler profiler38 = restAdapter37.profiler;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        restAdapter37.log = log42;
        builder26.log = log42;
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        retrofit.RestAdapter.Builder builder56 = builder26.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider61 = null;
        builder60.clientProvider = provider61;
        java.util.concurrent.Executor executor63 = builder60.httpExecutor;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.Profiler profiler66 = null;
        builder64.profiler = profiler66;
        retrofit.Server server68 = null;
        builder64.server = server68;
        java.util.concurrent.Executor executor70 = builder64.callbackExecutor;
        builder60.httpExecutor = executor70;
        builder59.callbackExecutor = executor70;
        builder56.httpExecutor = executor70;
        retrofit.Server server74 = null;
        retrofit.client.Client.Provider provider75 = null;
        java.util.concurrent.Executor executor76 = null;
        java.util.concurrent.Executor executor77 = null;
        retrofit.RequestInterceptor requestInterceptor78 = null;
        retrofit.converter.Converter converter79 = null;
        retrofit.Profiler profiler80 = null;
        retrofit.ErrorHandler errorHandler81 = null;
        retrofit.RestAdapter.Log log82 = null;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server74, provider75, executor76, executor77, requestInterceptor78, converter79, profiler80, errorHandler81, log82, logLevel83);
        retrofit.Profiler profiler85 = restAdapter84.profiler;
        retrofit.ErrorHandler errorHandler86 = restAdapter84.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter84.setLogLevel(logLevel87);
        retrofit.Server server89 = restAdapter84.server;
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter84.getLogLevel();
        retrofit.RestAdapter.Builder builder91 = builder56.setLogLevel(logLevel90);
        retrofit.Server server92 = builder56.server;
        builder20.server = server92;
        builder18.server = server92;
        restAdapter10.server = server92;
        retrofit.RestAdapter.LogLevel logLevel96 = restAdapter10.getLogLevel();
        retrofit.Profiler profiler97 = restAdapter10.profiler;
        java.util.concurrent.Executor executor98 = restAdapter10.httpExecutor;
        retrofit.Server server99 = restAdapter10.server;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler85);
        org.junit.Assert.assertNull(errorHandler86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(server92);
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler97);
        org.junit.Assert.assertNull(executor98);
        org.junit.Assert.assertNotNull(server99);
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05308");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.converter.Converter converter16 = restAdapter10.converter;
        retrofit.RestAdapter.Log log17 = restAdapter10.log;
        retrofit.ErrorHandler errorHandler18 = restAdapter10.errorHandler;
        retrofit.Server server19 = restAdapter10.server;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.ErrorHandler errorHandler37 = null;
        restAdapter30.errorHandler = errorHandler37;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter30.logLevel = logLevel39;
        retrofit.Profiler profiler41 = restAdapter30.profiler;
        retrofit.Server server42 = restAdapter30.server;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean53 = logLevel52.log();
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel52);
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder56.clientProvider;
        retrofit.ErrorHandler errorHandler59 = builder56.errorHandler;
        restAdapter54.errorHandler = errorHandler59;
        retrofit.Profiler profiler61 = null;
        restAdapter54.profiler = profiler61;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter54.logLevel;
        restAdapter30.setLogLevel(logLevel63);
        restAdapter10.setLogLevel(logLevel63);
        java.lang.Throwable throwable66 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable66, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(errorHandler59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05309");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.client.Client.Provider provider7 = builder5.clientProvider;
        retrofit.ErrorHandler errorHandler8 = builder5.errorHandler;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.client.Client.Provider provider11 = builder9.clientProvider;
        retrofit.ErrorHandler errorHandler12 = builder9.errorHandler;
        retrofit.RestAdapter.Builder builder13 = builder5.setErrorHandler(errorHandler12);
        builder0.errorHandler = errorHandler12;
        java.util.concurrent.Executor executor15 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider16 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler29 = restAdapter28.profiler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        restAdapter28.logLevel = logLevel30;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        restAdapter28.log = log33;
        builder17.log = log33;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.RestAdapter.Builder builder47 = builder17.setLogLevel(logLevel45);
        java.util.concurrent.Executor executor48 = null;
        builder47.callbackExecutor = executor48;
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.converter.Converter converter61 = restAdapter60.converter;
        retrofit.Profiler profiler62 = null;
        restAdapter60.profiler = profiler62;
        java.util.concurrent.Executor executor64 = restAdapter60.callbackExecutor;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.Profiler profiler67 = null;
        builder65.profiler = profiler67;
        retrofit.Server server69 = null;
        builder65.server = server69;
        java.util.concurrent.Executor executor71 = builder65.callbackExecutor;
        retrofit.converter.Converter converter72 = builder65.converter;
        restAdapter60.converter = converter72;
        builder47.converter = converter72;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor76 = builder75.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder78 = builder75.setLogLevel(logLevel77);
        boolean boolean79 = logLevel77.log();
        retrofit.RestAdapter.Builder builder80 = builder47.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder81 = builder0.setLogLevel(logLevel77);
        retrofit.Profiler profiler82 = builder0.profiler;
        retrofit.RestAdapter.Log log83 = builder0.log;
        java.util.concurrent.Executor executor84 = builder0.callbackExecutor;
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(converter72);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(profiler82);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertNull(executor84);
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05310");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter10.clientProvider;
        retrofit.ErrorHandler errorHandler17 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        builder18.log = log34;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder18.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.client.Client.Provider provider51 = builder49.clientProvider;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.client.Client.Provider provider54 = builder52.clientProvider;
        builder49.clientProvider = provider54;
        retrofit.RestAdapter.Builder builder56 = builder18.setClient(provider54);
        retrofit.Server server57 = null;
        retrofit.client.Client.Provider provider58 = null;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.converter.Converter converter62 = null;
        retrofit.Profiler profiler63 = null;
        retrofit.ErrorHandler errorHandler64 = null;
        retrofit.RestAdapter.Log log65 = null;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server57, provider58, executor59, executor60, requestInterceptor61, converter62, profiler63, errorHandler64, log65, logLevel66);
        retrofit.Profiler profiler68 = restAdapter67.profiler;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean70 = logLevel69.log();
        restAdapter67.logLevel = logLevel69;
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.Builder builder73 = builder56.setLogLevel(logLevel72);
        retrofit.client.Client.Provider provider74 = builder56.clientProvider;
        restAdapter10.clientProvider = provider74;
        retrofit.RestAdapter.RestHandler restHandler76 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log77 = restAdapter10.log;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNotNull(provider54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNull(log77);
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05311");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.logLevel;
        retrofit.client.Client.Provider provider13 = restAdapter11.clientProvider;
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter11.requestInterceptor;
        java.util.concurrent.Executor executor15 = restAdapter11.callbackExecutor;
        java.util.concurrent.Executor executor16 = restAdapter11.httpExecutor;
        retrofit.client.Client.Provider provider17 = restAdapter11.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(provider17);
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05312");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter11.new RestHandler();
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.converter.Converter converter38 = restAdapter37.converter;
        retrofit.Profiler profiler39 = null;
        restAdapter37.profiler = profiler39;
        java.util.concurrent.Executor executor41 = restAdapter37.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        retrofit.converter.Converter converter49 = builder42.converter;
        restAdapter37.converter = converter49;
        restAdapter11.converter = converter49;
        retrofit.ErrorHandler errorHandler52 = restAdapter11.errorHandler;
        retrofit.Profiler profiler53 = null;
        restAdapter11.profiler = profiler53;
        retrofit.RestAdapter.Log log55 = restAdapter11.log;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.converter.Converter converter67 = restAdapter66.converter;
        retrofit.Profiler profiler68 = null;
        restAdapter66.profiler = profiler68;
        retrofit.Profiler profiler70 = restAdapter66.profiler;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.Profiler profiler73 = null;
        builder71.profiler = profiler73;
        retrofit.Server server75 = null;
        builder71.server = server75;
        retrofit.client.Client.Provider provider77 = builder71.clientProvider;
        restAdapter66.clientProvider = provider77;
        restAdapter11.clientProvider = provider77;
        java.lang.Throwable throwable80 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable80, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNull(errorHandler52);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNotNull(provider77);
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05313");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.RestAdapter.Log log21 = restAdapter10.log;
        retrofit.Profiler profiler22 = restAdapter10.profiler;
        retrofit.Profiler profiler23 = null;
        restAdapter10.profiler = profiler23;
        retrofit.Server server25 = restAdapter10.server;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter10.requestInterceptor;
        retrofit.client.Response response28 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response30 = restAdapter10.logAndReplaceResponse("hi!", response28, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertNull(requestInterceptor26);
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05314");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.Profiler profiler4 = null;
        builder0.profiler = profiler4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean19 = logLevel18.log();
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log21;
        retrofit.ErrorHandler errorHandler23 = null;
        restAdapter16.errorHandler = errorHandler23;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter16.logLevel = logLevel25;
        retrofit.RestAdapter.Log log27 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Builder builder29 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor30 = builder29.callbackExecutor;
        java.lang.Class<?> wildcardClass31 = builder29.getClass();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05315");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        retrofit.ErrorHandler errorHandler15 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean30 = logLevel29.log();
        restAdapter27.logLevel = logLevel29;
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        restAdapter27.log = log32;
        builder16.log = log32;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder16.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.client.Client.Provider provider49 = builder47.clientProvider;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.client.Client.Provider provider52 = builder50.clientProvider;
        builder47.clientProvider = provider52;
        retrofit.RestAdapter.Builder builder54 = builder16.setClient(provider52);
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = null;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel64);
        retrofit.Profiler profiler66 = restAdapter65.profiler;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean68 = logLevel67.log();
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.Builder builder71 = builder54.setLogLevel(logLevel70);
        restAdapter10.logLevel = logLevel70;
        retrofit.Profiler profiler73 = null;
        restAdapter10.profiler = profiler73;
        retrofit.client.Client.Provider provider75 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor76 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter10.getLogLevel();
        java.lang.Throwable throwable78 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable78, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(provider49);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05316");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.Server server15 = null;
        restAdapter10.server = server15;
        retrofit.ErrorHandler errorHandler17 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log18 = restAdapter10.log;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider20 = null;
        builder19.clientProvider = provider20;
        retrofit.converter.Converter converter22 = null;
        builder19.converter = converter22;
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider26 = null;
        builder25.clientProvider = provider26;
        java.util.concurrent.Executor executor28 = builder25.httpExecutor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.Profiler profiler31 = null;
        builder29.profiler = profiler31;
        retrofit.Server server33 = null;
        builder29.server = server33;
        java.util.concurrent.Executor executor35 = builder29.callbackExecutor;
        builder25.httpExecutor = executor35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = null;
        builder38.clientProvider = provider39;
        java.util.concurrent.Executor executor41 = builder38.httpExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        builder38.httpExecutor = executor48;
        builder37.callbackExecutor = executor48;
        builder25.callbackExecutor = executor48;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        java.util.concurrent.Executor executor55 = builder52.httpExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        builder52.httpExecutor = executor62;
        java.util.concurrent.Executor executor64 = builder52.httpExecutor;
        retrofit.RestAdapter.Builder builder65 = builder19.setExecutors(executor48, executor64);
        retrofit.ErrorHandler errorHandler66 = builder65.errorHandler;
        restAdapter10.errorHandler = errorHandler66;
        java.util.concurrent.Executor executor68 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter10.new RestHandler();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNull(executor68);
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05317");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean15 = logLevel14.log();
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log18 = null;
        restAdapter16.log = log18;
        retrofit.Profiler profiler20 = null;
        restAdapter16.profiler = profiler20;
        retrofit.RequestInterceptor requestInterceptor22 = restAdapter16.requestInterceptor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.Profiler profiler35 = restAdapter34.profiler;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean37 = logLevel36.log();
        restAdapter34.logLevel = logLevel36;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        restAdapter34.log = log39;
        builder23.log = log39;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder23.setLogLevel(logLevel51);
        java.util.concurrent.Executor executor54 = null;
        builder53.callbackExecutor = executor54;
        retrofit.converter.Converter converter56 = builder53.converter;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider58 = null;
        builder57.clientProvider = provider58;
        builder57.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor61 = builder57.requestInterceptor;
        builder53.requestInterceptor = requestInterceptor61;
        restAdapter16.requestInterceptor = requestInterceptor61;
        builder0.requestInterceptor = requestInterceptor61;
        retrofit.Server server65 = null;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel74);
        retrofit.Profiler profiler76 = restAdapter75.profiler;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean78 = logLevel77.log();
        restAdapter75.logLevel = logLevel77;
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        restAdapter75.log = log80;
        retrofit.ErrorHandler errorHandler82 = null;
        restAdapter75.errorHandler = errorHandler82;
        retrofit.RequestInterceptor requestInterceptor84 = null;
        restAdapter75.requestInterceptor = requestInterceptor84;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        builder86.ensureSaneDefaults();
        retrofit.client.Client.Provider provider88 = builder86.clientProvider;
        retrofit.ErrorHandler errorHandler89 = builder86.errorHandler;
        restAdapter75.errorHandler = errorHandler89;
        retrofit.RestAdapter.Log log91 = restAdapter75.log;
        builder0.log = log91;
        log91.log("");
        log91.log("hi!");
        log91.log("hi!");
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(requestInterceptor22);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(provider88);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertNotNull(log91);
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05318");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.converter.Converter converter19 = builder0.converter;
        retrofit.RestAdapter.Log log20 = builder0.log;
        retrofit.RestAdapter.Log log21 = builder0.log;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter22 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(log21);
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05319");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.Profiler profiler3 = builder0.profiler;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        retrofit.Server server7 = builder0.server;
        retrofit.Profiler profiler8 = builder0.profiler;
        java.util.concurrent.Executor executor9 = builder0.callbackExecutor;
        retrofit.Server server10 = null;
        retrofit.client.Client.Provider provider11 = null;
        java.util.concurrent.Executor executor12 = null;
        java.util.concurrent.Executor executor13 = null;
        retrofit.RequestInterceptor requestInterceptor14 = null;
        retrofit.converter.Converter converter15 = null;
        retrofit.Profiler profiler16 = null;
        retrofit.ErrorHandler errorHandler17 = null;
        retrofit.RestAdapter.Log log18 = null;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server10, provider11, executor12, executor13, requestInterceptor14, converter15, profiler16, errorHandler17, log18, logLevel19);
        retrofit.Profiler profiler21 = restAdapter20.profiler;
        retrofit.ErrorHandler errorHandler22 = restAdapter20.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter20.setLogLevel(logLevel23);
        retrofit.Server server25 = restAdapter20.server;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter20.getLogLevel();
        retrofit.ErrorHandler errorHandler27 = restAdapter20.errorHandler;
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = null;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel37);
        retrofit.converter.Converter converter39 = restAdapter38.converter;
        retrofit.Profiler profiler40 = null;
        restAdapter38.profiler = profiler40;
        java.util.concurrent.Executor executor42 = restAdapter38.callbackExecutor;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = null;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel53);
        retrofit.Profiler profiler55 = restAdapter54.profiler;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean57 = logLevel56.log();
        restAdapter54.logLevel = logLevel56;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        restAdapter54.log = log59;
        builder43.log = log59;
        retrofit.Server server62 = null;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel71);
        retrofit.RestAdapter.Builder builder73 = builder43.setLogLevel(logLevel71);
        java.util.concurrent.Executor executor74 = null;
        builder73.callbackExecutor = executor74;
        retrofit.ErrorHandler errorHandler76 = null;
        builder73.errorHandler = errorHandler76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.Profiler profiler80 = null;
        builder78.profiler = profiler80;
        retrofit.Server server82 = null;
        builder78.server = server82;
        java.util.concurrent.Executor executor84 = builder78.callbackExecutor;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        builder85.ensureSaneDefaults();
        retrofit.client.Client.Provider provider87 = builder85.clientProvider;
        builder78.clientProvider = provider87;
        builder73.clientProvider = provider87;
        restAdapter38.clientProvider = provider87;
        restAdapter20.clientProvider = provider87;
        retrofit.RestAdapter.Builder builder92 = builder0.setClient(provider87);
        retrofit.client.Client client93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder92.setClient(client93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNotNull(executor9);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(errorHandler22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05320");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        builder30.requestInterceptor = requestInterceptor35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = null;
        builder67.callbackExecutor = executor68;
        retrofit.ErrorHandler errorHandler70 = null;
        builder67.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.Profiler profiler74 = null;
        builder72.profiler = profiler74;
        retrofit.Server server76 = null;
        builder72.server = server76;
        java.util.concurrent.Executor executor78 = builder72.callbackExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        builder72.clientProvider = provider81;
        builder67.clientProvider = provider81;
        builder30.clientProvider = provider81;
        java.util.concurrent.Executor executor85 = builder30.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel86 = builder30.logLevel;
        retrofit.Server server87 = builder30.server;
        retrofit.Server server88 = builder30.server;
        retrofit.RestAdapter.Builder builder90 = builder30.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel91 = builder90.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server87);
        org.junit.Assert.assertNull(server88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05321");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.Profiler profiler3 = builder0.profiler;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.Server server6 = null;
        builder0.server = server6;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log21 = null;
        restAdapter19.log = log21;
        java.util.concurrent.Executor executor23 = restAdapter19.callbackExecutor;
        retrofit.client.Client.Provider provider24 = restAdapter19.clientProvider;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter36.new RestHandler();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean48 = logLevel47.log();
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        restAdapter36.logLevel = logLevel47;
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter36.logLevel;
        retrofit.Profiler profiler52 = restAdapter36.profiler;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider54 = null;
        builder53.clientProvider = provider54;
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.client.Client.Provider provider59 = builder57.clientProvider;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder60.clientProvider;
        builder57.clientProvider = provider62;
        builder53.clientProvider = provider62;
        java.util.concurrent.Executor executor65 = builder53.httpExecutor;
        java.util.concurrent.Executor executor66 = builder53.callbackExecutor;
        restAdapter36.httpExecutor = executor66;
        restAdapter19.httpExecutor = executor66;
        builder0.callbackExecutor = executor66;
        java.util.concurrent.Executor executor70 = builder0.httpExecutor;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel80);
        retrofit.converter.Converter converter82 = restAdapter81.converter;
        retrofit.Profiler profiler83 = null;
        restAdapter81.profiler = profiler83;
        java.util.concurrent.Executor executor85 = restAdapter81.callbackExecutor;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        builder86.ensureSaneDefaults();
        retrofit.Profiler profiler88 = null;
        builder86.profiler = profiler88;
        retrofit.Server server90 = null;
        builder86.server = server90;
        java.util.concurrent.Executor executor92 = builder86.callbackExecutor;
        retrofit.converter.Converter converter93 = builder86.converter;
        restAdapter81.converter = converter93;
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter81.getLogLevel();
        retrofit.converter.Converter converter96 = restAdapter81.converter;
        builder0.converter = converter96;
        retrofit.ErrorHandler errorHandler98 = builder0.errorHandler;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(provider59);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter82);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNotNull(executor92);
        org.junit.Assert.assertNotNull(converter93);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter96);
        org.junit.Assert.assertNotNull(errorHandler98);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05322");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("hi!");
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        java.util.concurrent.Executor executor37 = builder34.httpExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.Profiler profiler40 = null;
        builder38.profiler = profiler40;
        retrofit.Server server42 = null;
        builder38.server = server42;
        java.util.concurrent.Executor executor44 = builder38.callbackExecutor;
        builder34.httpExecutor = executor44;
        builder33.callbackExecutor = executor44;
        builder30.httpExecutor = executor44;
        retrofit.Profiler profiler48 = builder30.profiler;
        builder30.ensureSaneDefaults();
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.Profiler profiler61 = restAdapter60.profiler;
        java.util.concurrent.Executor executor62 = null;
        restAdapter60.httpExecutor = executor62;
        retrofit.Server server64 = restAdapter60.server;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.Profiler profiler68 = null;
        builder66.profiler = profiler68;
        retrofit.Server server70 = null;
        builder66.server = server70;
        java.util.concurrent.Executor executor72 = builder66.callbackExecutor;
        restAdapter65.callbackExecutor = executor72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.Profiler profiler76 = null;
        builder74.profiler = profiler76;
        retrofit.Server server78 = null;
        builder74.server = server78;
        java.util.concurrent.Executor executor80 = builder74.callbackExecutor;
        retrofit.converter.Converter converter81 = builder74.converter;
        restAdapter65.converter = converter81;
        restAdapter60.converter = converter81;
        retrofit.RestAdapter.Builder builder84 = builder30.setConverter(converter81);
        retrofit.RestAdapter.Builder builder86 = builder30.setServer("hi!");
        retrofit.Profiler profiler87 = builder86.profiler;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(converter81);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(profiler87);
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05323");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean19 = logLevel18.log();
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log21;
        builder5.log = log21;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder5.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("hi!");
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        java.util.concurrent.Executor executor42 = builder39.httpExecutor;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        builder39.httpExecutor = executor49;
        builder38.callbackExecutor = executor49;
        builder35.httpExecutor = executor49;
        builder0.httpExecutor = executor49;
        retrofit.Profiler profiler54 = builder0.profiler;
        retrofit.RestAdapter.Log log55 = builder0.log;
        retrofit.RequestInterceptor requestInterceptor56 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertNull(requestInterceptor56);
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05324");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.client.Client.Provider provider2 = null;
        restAdapter0.clientProvider = provider2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider5 = null;
        builder4.clientProvider = provider5;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.client.Client.Provider provider10 = builder8.clientProvider;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.client.Client.Provider provider13 = builder11.clientProvider;
        builder8.clientProvider = provider13;
        builder4.clientProvider = provider13;
        java.util.concurrent.Executor executor16 = builder4.httpExecutor;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider19 = null;
        builder18.clientProvider = provider19;
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.client.Client.Provider provider24 = builder22.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder25.clientProvider;
        builder22.clientProvider = provider27;
        builder18.clientProvider = provider27;
        java.util.concurrent.Executor executor30 = builder18.httpExecutor;
        builder4.httpExecutor = executor30;
        restAdapter0.httpExecutor = executor30;
        retrofit.ErrorHandler errorHandler33 = restAdapter0.errorHandler;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.Profiler profiler45 = restAdapter44.profiler;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean47 = logLevel46.log();
        restAdapter44.logLevel = logLevel46;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        restAdapter44.log = log49;
        retrofit.ErrorHandler errorHandler51 = null;
        restAdapter44.errorHandler = errorHandler51;
        retrofit.Server server53 = null;
        restAdapter44.server = server53;
        retrofit.RestAdapter.Log log55 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter44.getLogLevel();
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.setLogLevel(logLevel56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNotNull(provider10);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05325");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.RestAdapter.Log log33 = builder30.log;
        retrofit.RequestInterceptor requestInterceptor34 = builder30.requestInterceptor;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.Profiler profiler47 = restAdapter46.profiler;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean49 = logLevel48.log();
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        restAdapter46.log = log51;
        builder35.log = log51;
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = null;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder35.setLogLevel(logLevel63);
        java.util.concurrent.Executor executor66 = null;
        builder65.callbackExecutor = executor66;
        retrofit.ErrorHandler errorHandler68 = null;
        builder65.errorHandler = errorHandler68;
        builder65.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = builder65.log;
        retrofit.client.Client.Provider provider72 = builder65.clientProvider;
        builder30.clientProvider = provider72;
        retrofit.RequestInterceptor requestInterceptor74 = builder30.requestInterceptor;
        retrofit.Profiler profiler75 = builder30.profiler;
        java.util.concurrent.Executor executor76 = builder30.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel77 = builder30.logLevel;
        boolean boolean78 = logLevel77.log();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(requestInterceptor34);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05326");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.converter.Converter converter15 = restAdapter10.converter;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor17 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter10.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05327");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.Server server4 = restAdapter0.server;
        retrofit.ErrorHandler errorHandler5 = restAdapter0.errorHandler;
        retrofit.Profiler profiler6 = restAdapter0.profiler;
        java.util.concurrent.Executor executor7 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(errorHandler5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05328");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.client.Client.Provider provider4 = builder3.clientProvider;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider6 = null;
        builder5.clientProvider = provider6;
        retrofit.converter.Converter converter8 = null;
        builder5.converter = converter8;
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Log log20 = null;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log20, logLevel21);
        retrofit.Profiler profiler23 = restAdapter22.profiler;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean25 = logLevel24.log();
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        restAdapter22.log = log27;
        builder11.log = log27;
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = null;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log38, logLevel39);
        retrofit.RestAdapter.Builder builder41 = builder11.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider46 = null;
        builder45.clientProvider = provider46;
        java.util.concurrent.Executor executor48 = builder45.httpExecutor;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.Profiler profiler51 = null;
        builder49.profiler = profiler51;
        retrofit.Server server53 = null;
        builder49.server = server53;
        java.util.concurrent.Executor executor55 = builder49.callbackExecutor;
        builder45.httpExecutor = executor55;
        builder44.callbackExecutor = executor55;
        builder41.httpExecutor = executor55;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel68);
        retrofit.Profiler profiler70 = restAdapter69.profiler;
        retrofit.ErrorHandler errorHandler71 = restAdapter69.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter69.setLogLevel(logLevel72);
        retrofit.Server server74 = restAdapter69.server;
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.Builder builder76 = builder41.setLogLevel(logLevel75);
        retrofit.Server server77 = builder41.server;
        builder5.server = server77;
        builder3.server = server77;
        retrofit.Profiler profiler80 = null;
        builder3.profiler = profiler80;
        retrofit.client.Client client82 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder83 = builder3.setClient(client82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNull(errorHandler71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(server77);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05329");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.Profiler profiler4 = null;
        builder0.profiler = profiler4;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel7 = builder0.logLevel;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.Profiler profiler19 = restAdapter18.profiler;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean21 = logLevel20.log();
        restAdapter18.logLevel = logLevel20;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        restAdapter18.log = log23;
        retrofit.ErrorHandler errorHandler25 = null;
        restAdapter18.errorHandler = errorHandler25;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter18.logLevel = logLevel27;
        retrofit.Profiler profiler29 = restAdapter18.profiler;
        retrofit.Server server30 = null;
        restAdapter18.server = server30;
        retrofit.RestAdapter.Log log32 = restAdapter18.log;
        log32.log("");
        builder0.log = log32;
        retrofit.Server server36 = builder0.server;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNull(server36);
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05330");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        retrofit.Profiler profiler12 = null;
        builder0.profiler = profiler12;
        retrofit.Profiler profiler14 = null;
        builder0.profiler = profiler14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider17 = null;
        builder16.clientProvider = provider17;
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder20.clientProvider;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.client.Client.Provider provider25 = builder23.clientProvider;
        builder20.clientProvider = provider25;
        builder16.clientProvider = provider25;
        java.util.concurrent.Executor executor28 = builder16.httpExecutor;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.ErrorHandler errorHandler41 = restAdapter39.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider45 = null;
        builder44.clientProvider = provider45;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.converter.Converter converter58 = restAdapter57.converter;
        retrofit.ErrorHandler errorHandler59 = restAdapter57.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter57.logLevel;
        builder44.logLevel = logLevel60;
        restAdapter39.setLogLevel(logLevel60);
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.Profiler profiler66 = null;
        builder64.profiler = profiler66;
        retrofit.Server server68 = null;
        builder64.server = server68;
        java.util.concurrent.Executor executor70 = builder64.callbackExecutor;
        restAdapter63.callbackExecutor = executor70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.Profiler profiler74 = null;
        builder72.profiler = profiler74;
        retrofit.Server server76 = null;
        builder72.server = server76;
        java.util.concurrent.Executor executor78 = builder72.callbackExecutor;
        retrofit.converter.Converter converter79 = builder72.converter;
        restAdapter63.converter = converter79;
        restAdapter39.converter = converter79;
        retrofit.RestAdapter.Builder builder82 = builder16.setConverter(converter79);
        retrofit.converter.Converter converter83 = builder16.converter;
        retrofit.RestAdapter.Builder builder84 = builder0.setConverter(converter83);
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        boolean boolean86 = logLevel85.log();
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(provider25);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNull(errorHandler41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(converter79);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(converter83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05331");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.Profiler profiler42 = restAdapter41.profiler;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        restAdapter41.log = log46;
        retrofit.ErrorHandler errorHandler48 = null;
        restAdapter41.errorHandler = errorHandler48;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        restAdapter41.requestInterceptor = requestInterceptor50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.client.Client.Provider provider54 = builder52.clientProvider;
        retrofit.ErrorHandler errorHandler55 = builder52.errorHandler;
        restAdapter41.errorHandler = errorHandler55;
        retrofit.RestAdapter.Log log57 = restAdapter41.log;
        retrofit.RestAdapter.Builder builder58 = builder30.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = builder30.logLevel;
        retrofit.ErrorHandler errorHandler60 = builder30.errorHandler;
        retrofit.client.Client client61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder30.setClient(client61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(provider54);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler60);
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05332");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        java.util.concurrent.Executor executor47 = builder30.httpExecutor;
        java.util.concurrent.Executor executor48 = builder30.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor49 = builder30.requestInterceptor;
        retrofit.Profiler profiler50 = null;
        builder30.profiler = profiler50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.Profiler profiler64 = restAdapter63.profiler;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean66 = logLevel65.log();
        restAdapter63.logLevel = logLevel65;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        restAdapter63.log = log68;
        builder52.log = log68;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel80);
        retrofit.Profiler profiler82 = restAdapter81.profiler;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean84 = logLevel83.log();
        restAdapter81.logLevel = logLevel83;
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        restAdapter81.log = log86;
        retrofit.ErrorHandler errorHandler88 = null;
        restAdapter81.errorHandler = errorHandler88;
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter81.logLevel = logLevel90;
        retrofit.RestAdapter.Log log92 = restAdapter81.log;
        retrofit.RestAdapter.Builder builder93 = builder52.setLog(log92);
        retrofit.RestAdapter.Log log94 = builder52.log;
        log94.log("");
        builder30.log = log94;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(requestInterceptor49);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(log94);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05333");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.Profiler profiler15 = null;
        restAdapter11.profiler = profiler15;
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter11.requestInterceptor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        builder18.log = log34;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder18.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor49 = null;
        builder48.callbackExecutor = executor49;
        retrofit.converter.Converter converter51 = builder48.converter;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        builder52.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor56 = builder52.requestInterceptor;
        builder48.requestInterceptor = requestInterceptor56;
        restAdapter11.requestInterceptor = requestInterceptor56;
        retrofit.Profiler profiler59 = null;
        restAdapter11.profiler = profiler59;
        java.util.concurrent.Executor executor61 = restAdapter11.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter11.logLevel;
        retrofit.client.Header[] headerArray65 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList66 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList66, headerArray65);
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList66, typedOutput68);
        retrofit.mime.TypedOutput typedOutput70 = request69.getBody();
        retrofit.mime.TypedOutput typedOutput71 = request69.getBody();
        retrofit.mime.TypedOutput typedOutput72 = request69.getBody();
        retrofit.mime.TypedOutput typedOutput73 = request69.getBody();
        java.lang.String str74 = request69.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request75 = restAdapter11.logAndReplaceRequest(request69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(requestInterceptor17);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(headerArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(typedOutput70);
        org.junit.Assert.assertNull(typedOutput71);
        org.junit.Assert.assertNull(typedOutput72);
        org.junit.Assert.assertNull(typedOutput73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05334");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "hi!", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = request13.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request13.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        java.lang.String str18 = request17.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05335");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean19 = logLevel18.log();
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log21;
        log21.log("");
        builder0.log = log21;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.Profiler profiler38 = restAdapter37.profiler;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        restAdapter37.log = log42;
        builder26.log = log42;
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        retrofit.RestAdapter.Builder builder56 = builder26.setLogLevel(logLevel54);
        java.util.concurrent.Executor executor57 = null;
        builder56.callbackExecutor = executor57;
        retrofit.ErrorHandler errorHandler59 = null;
        builder56.errorHandler = errorHandler59;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.Server server63 = null;
        builder56.server = server63;
        retrofit.converter.Converter converter65 = builder56.converter;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler67 = restAdapter66.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.Profiler profiler69 = restAdapter66.profiler;
        retrofit.Server server70 = restAdapter66.server;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.client.Client.Provider provider73 = builder71.clientProvider;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.client.Client.Provider provider76 = builder74.clientProvider;
        builder71.clientProvider = provider76;
        retrofit.client.Client.Provider provider78 = builder71.clientProvider;
        restAdapter66.clientProvider = provider78;
        retrofit.RestAdapter.Builder builder80 = builder56.setClient(provider78);
        retrofit.client.Client.Provider provider81 = builder56.clientProvider;
        retrofit.RestAdapter.Builder builder82 = builder0.setClient(provider81);
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor5);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(errorHandler67);
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertNotNull(provider73);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05336");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = null;
        restAdapter10.setLogLevel(logLevel15);
        java.util.concurrent.Executor executor17 = restAdapter10.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05337");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.converter.Converter converter29 = restAdapter28.converter;
        retrofit.ErrorHandler errorHandler30 = restAdapter28.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter28.logLevel;
        builder15.logLevel = logLevel31;
        restAdapter10.setLogLevel(logLevel31);
        java.util.concurrent.Executor executor34 = restAdapter10.callbackExecutor;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.Profiler profiler46 = restAdapter45.profiler;
        retrofit.ErrorHandler errorHandler47 = restAdapter45.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter45.logLevel;
        java.util.concurrent.Executor executor49 = restAdapter45.httpExecutor;
        java.util.concurrent.Executor executor50 = restAdapter45.callbackExecutor;
        retrofit.ErrorHandler errorHandler51 = restAdapter45.errorHandler;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler53 = restAdapter52.errorHandler;
        retrofit.Server server54 = null;
        restAdapter52.server = server54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.Profiler profiler62 = null;
        builder60.profiler = profiler62;
        retrofit.Server server64 = null;
        builder60.server = server64;
        java.util.concurrent.Executor executor66 = builder60.callbackExecutor;
        builder56.callbackExecutor = executor66;
        restAdapter52.httpExecutor = executor66;
        restAdapter45.callbackExecutor = executor66;
        restAdapter10.httpExecutor = executor66;
        java.lang.Throwable throwable71 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable71, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertNull(errorHandler47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertNull(errorHandler53);
        org.junit.Assert.assertNotNull(executor66);
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05338");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter10.getLogLevel();
        retrofit.Profiler profiler17 = null;
        restAdapter10.profiler = profiler17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.Profiler profiler21 = null;
        builder19.profiler = profiler21;
        retrofit.Server server23 = null;
        builder19.server = server23;
        java.util.concurrent.Executor executor25 = builder19.callbackExecutor;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.client.Client.Provider provider28 = builder26.clientProvider;
        builder19.clientProvider = provider28;
        retrofit.RestAdapter.LogLevel logLevel30 = builder19.logLevel;
        restAdapter10.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.Profiler profiler44 = restAdapter43.profiler;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean46 = logLevel45.log();
        restAdapter43.logLevel = logLevel45;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        restAdapter43.log = log48;
        builder32.log = log48;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = null;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder32.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("hi!");
        retrofit.RestAdapter.Log log65 = builder64.log;
        retrofit.RequestInterceptor requestInterceptor66 = builder64.requestInterceptor;
        retrofit.Server server67 = builder64.server;
        retrofit.RestAdapter.Log log68 = builder64.log;
        retrofit.RequestInterceptor requestInterceptor69 = builder64.requestInterceptor;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider71 = null;
        builder70.clientProvider = provider71;
        builder70.ensureSaneDefaults();
        retrofit.Server server74 = null;
        retrofit.client.Client.Provider provider75 = null;
        java.util.concurrent.Executor executor76 = null;
        java.util.concurrent.Executor executor77 = null;
        retrofit.RequestInterceptor requestInterceptor78 = null;
        retrofit.converter.Converter converter79 = null;
        retrofit.Profiler profiler80 = null;
        retrofit.ErrorHandler errorHandler81 = null;
        retrofit.RestAdapter.Log log82 = null;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server74, provider75, executor76, executor77, requestInterceptor78, converter79, profiler80, errorHandler81, log82, logLevel83);
        retrofit.Profiler profiler85 = restAdapter84.profiler;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean87 = logLevel86.log();
        restAdapter84.logLevel = logLevel86;
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        restAdapter84.log = log89;
        builder70.log = log89;
        log89.log("");
        builder64.log = log89;
        restAdapter10.log = log89;
        log89.log("");
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNull(requestInterceptor69);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(log89);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05339");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.client.Client.Provider provider7 = builder5.clientProvider;
        retrofit.ErrorHandler errorHandler8 = builder5.errorHandler;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.client.Client.Provider provider11 = builder9.clientProvider;
        retrofit.ErrorHandler errorHandler12 = builder9.errorHandler;
        retrofit.RestAdapter.Builder builder13 = builder5.setErrorHandler(errorHandler12);
        builder0.errorHandler = errorHandler12;
        java.util.concurrent.Executor executor15 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.client.Client.Provider provider18 = builder16.clientProvider;
        retrofit.ErrorHandler errorHandler19 = builder16.errorHandler;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder20.clientProvider;
        retrofit.ErrorHandler errorHandler23 = builder20.errorHandler;
        retrofit.RestAdapter.Builder builder24 = builder16.setErrorHandler(errorHandler23);
        retrofit.Server server25 = builder16.server;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.Profiler profiler28 = null;
        builder26.profiler = profiler28;
        retrofit.Server server30 = null;
        builder26.server = server30;
        java.util.concurrent.Executor executor32 = builder26.callbackExecutor;
        retrofit.converter.Converter converter33 = builder26.converter;
        retrofit.RestAdapter.Builder builder34 = builder16.setConverter(converter33);
        retrofit.converter.Converter converter35 = builder34.converter;
        retrofit.RestAdapter.Builder builder36 = builder0.setConverter(converter35);
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler38 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder39 = builder0.setErrorHandler(errorHandler38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(provider18);
        org.junit.Assert.assertNotNull(errorHandler19);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(converter35);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05340");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        builder30.requestInterceptor = requestInterceptor35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = null;
        builder67.callbackExecutor = executor68;
        retrofit.ErrorHandler errorHandler70 = null;
        builder67.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.Profiler profiler74 = null;
        builder72.profiler = profiler74;
        retrofit.Server server76 = null;
        builder72.server = server76;
        java.util.concurrent.Executor executor78 = builder72.callbackExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        builder72.clientProvider = provider81;
        builder67.clientProvider = provider81;
        builder30.clientProvider = provider81;
        java.util.concurrent.Executor executor85 = builder30.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel86 = builder30.logLevel;
        java.util.concurrent.Executor executor87 = builder30.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor87);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05341");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.converter.Converter converter16 = restAdapter10.converter;
        retrofit.Server server17 = null;
        restAdapter10.server = server17;
        retrofit.Server server19 = restAdapter10.server;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean30 = logLevel29.log();
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log33 = null;
        restAdapter31.log = log33;
        retrofit.Profiler profiler35 = null;
        restAdapter31.profiler = profiler35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider38 = null;
        builder37.clientProvider = provider38;
        retrofit.converter.Converter converter40 = null;
        builder37.converter = converter40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        retrofit.ErrorHandler errorHandler45 = builder42.errorHandler;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        retrofit.ErrorHandler errorHandler49 = builder46.errorHandler;
        retrofit.RestAdapter.Builder builder50 = builder42.setErrorHandler(errorHandler49);
        builder37.errorHandler = errorHandler49;
        restAdapter31.errorHandler = errorHandler49;
        restAdapter10.errorHandler = errorHandler49;
        java.util.concurrent.Executor executor54 = restAdapter10.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(executor54);
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05342");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.converter.Converter converter15 = restAdapter11.converter;
        retrofit.converter.Converter converter16 = restAdapter11.converter;
        retrofit.client.Client.Provider provider17 = restAdapter11.clientProvider;
        retrofit.client.Header[] headerArray26 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList27 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList27, headerArray26);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList27, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList27, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList27, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList27, typedOutput35);
        java.lang.String str37 = request36.getUrl();
        java.lang.String str38 = request36.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request39 = restAdapter11.logAndReplaceRequest(request36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(headerArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05343");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.Log log17 = restAdapter10.log;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(log17);
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05344");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider5 = null;
        builder4.clientProvider = provider5;
        builder4.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor8 = builder4.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider11 = null;
        builder10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = builder10.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.Profiler profiler16 = null;
        builder14.profiler = profiler16;
        retrofit.Server server18 = null;
        builder14.server = server18;
        java.util.concurrent.Executor executor20 = builder14.callbackExecutor;
        builder10.httpExecutor = executor20;
        builder9.callbackExecutor = executor20;
        builder4.callbackExecutor = executor20;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.Profiler profiler26 = null;
        builder24.profiler = profiler26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.Server server32 = null;
        builder28.server = server32;
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        builder24.callbackExecutor = executor34;
        retrofit.RestAdapter.Builder builder36 = builder0.setExecutors(executor20, executor34);
        retrofit.Server server37 = builder36.server;
        retrofit.Server server38 = builder36.server;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.Profiler profiler51 = restAdapter50.profiler;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean53 = logLevel52.log();
        restAdapter50.logLevel = logLevel52;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        restAdapter50.log = log55;
        builder39.log = log55;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder39.setLogLevel(logLevel67);
        java.util.concurrent.Executor executor70 = null;
        builder69.callbackExecutor = executor70;
        java.util.concurrent.Executor executor72 = builder69.httpExecutor;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.Profiler profiler76 = null;
        builder74.profiler = profiler76;
        retrofit.Server server78 = null;
        builder74.server = server78;
        java.util.concurrent.Executor executor80 = builder74.callbackExecutor;
        restAdapter73.callbackExecutor = executor80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.Profiler profiler84 = null;
        builder82.profiler = profiler84;
        retrofit.Server server86 = null;
        builder82.server = server86;
        java.util.concurrent.Executor executor88 = builder82.callbackExecutor;
        retrofit.converter.Converter converter89 = builder82.converter;
        restAdapter73.converter = converter89;
        builder69.converter = converter89;
        builder36.converter = converter89;
        retrofit.ErrorHandler errorHandler93 = builder36.errorHandler;
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(converter89);
        org.junit.Assert.assertNotNull(errorHandler93);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05345");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter32.new RestHandler();
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        restAdapter32.logLevel = logLevel43;
        retrofit.converter.Converter converter47 = restAdapter32.converter;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter32.getLogLevel();
        restAdapter10.setLogLevel(logLevel48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        java.lang.String str57 = request56.getMethod();
        retrofit.mime.TypedOutput typedOutput58 = request56.getBody();
        retrofit.mime.TypedOutput typedOutput59 = request56.getBody();
        retrofit.client.Request request60 = restAdapter10.logAndReplaceRequest(request56);
        retrofit.Server server61 = restAdapter10.server;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor63 = restAdapter10.callbackExecutor;
        java.util.concurrent.Executor executor64 = restAdapter10.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNull(typedOutput58);
        org.junit.Assert.assertNull(typedOutput59);
        org.junit.Assert.assertNotNull(request60);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(executor64);
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05346");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.Profiler profiler13 = null;
        restAdapter10.profiler = profiler13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.converter.Converter converter29 = restAdapter28.converter;
        retrofit.ErrorHandler errorHandler30 = restAdapter28.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter28.logLevel;
        builder15.logLevel = logLevel31;
        restAdapter10.logLevel = logLevel31;
        retrofit.client.Client.Provider provider34 = restAdapter10.clientProvider;
        retrofit.RestAdapter.Log log35 = restAdapter10.log;
        retrofit.converter.Converter converter36 = restAdapter10.converter;
        retrofit.Profiler profiler37 = restAdapter10.profiler;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = null;
        builder38.clientProvider = provider39;
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.client.Client.Provider provider47 = builder45.clientProvider;
        builder42.clientProvider = provider47;
        builder38.clientProvider = provider47;
        java.util.concurrent.Executor executor50 = builder38.httpExecutor;
        java.util.concurrent.Executor executor51 = builder38.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel52 = builder38.logLevel;
        retrofit.converter.Converter converter53 = builder38.converter;
        restAdapter10.converter = converter53;
        retrofit.converter.Converter converter55 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(provider47);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertNotNull(converter55);
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05347");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        java.util.concurrent.Executor executor12 = builder0.httpExecutor;
        retrofit.converter.Converter converter13 = null;
        builder0.converter = converter13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.Profiler profiler17 = null;
        builder15.profiler = profiler17;
        retrofit.Server server19 = null;
        builder15.server = server19;
        retrofit.client.Client.Provider provider21 = builder15.clientProvider;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.Profiler profiler34 = restAdapter33.profiler;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean36 = logLevel35.log();
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        restAdapter33.log = log38;
        builder22.log = log38;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder22.setLogLevel(logLevel50);
        java.util.concurrent.Executor executor53 = null;
        builder52.callbackExecutor = executor53;
        retrofit.converter.Converter converter55 = builder52.converter;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider57 = null;
        builder56.clientProvider = provider57;
        builder56.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor60 = builder56.requestInterceptor;
        builder52.requestInterceptor = requestInterceptor60;
        retrofit.Server server62 = null;
        builder52.server = server62;
        retrofit.RequestInterceptor requestInterceptor64 = builder52.requestInterceptor;
        builder15.requestInterceptor = requestInterceptor64;
        retrofit.converter.Converter converter66 = builder15.converter;
        builder0.converter = converter66;
        retrofit.Server server68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder69 = builder0.setServer(server68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(converter66);
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05348");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.client.Client.Provider provider4 = builder3.clientProvider;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.converter.Converter converter16 = restAdapter15.converter;
        retrofit.Profiler profiler17 = null;
        restAdapter15.profiler = profiler17;
        java.util.concurrent.Executor executor19 = restAdapter15.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        builder20.log = log36;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder20.setLogLevel(logLevel48);
        java.util.concurrent.Executor executor51 = null;
        builder50.callbackExecutor = executor51;
        retrofit.ErrorHandler errorHandler53 = null;
        builder50.errorHandler = errorHandler53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.Server server59 = null;
        builder55.server = server59;
        java.util.concurrent.Executor executor61 = builder55.callbackExecutor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        builder55.clientProvider = provider64;
        builder50.clientProvider = provider64;
        restAdapter15.clientProvider = provider64;
        retrofit.RestAdapter.LogLevel logLevel68 = null;
        restAdapter15.setLogLevel(logLevel68);
        retrofit.Server server70 = null;
        retrofit.client.Client.Provider provider71 = null;
        java.util.concurrent.Executor executor72 = null;
        java.util.concurrent.Executor executor73 = null;
        retrofit.RequestInterceptor requestInterceptor74 = null;
        retrofit.converter.Converter converter75 = null;
        retrofit.Profiler profiler76 = null;
        retrofit.ErrorHandler errorHandler77 = null;
        retrofit.RestAdapter.Log log78 = null;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean80 = logLevel79.log();
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server70, provider71, executor72, executor73, requestInterceptor74, converter75, profiler76, errorHandler77, log78, logLevel79);
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter81.new RestHandler();
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        builder83.ensureSaneDefaults();
        retrofit.client.Client.Provider provider85 = builder83.clientProvider;
        retrofit.ErrorHandler errorHandler86 = builder83.errorHandler;
        restAdapter81.errorHandler = errorHandler86;
        restAdapter15.errorHandler = errorHandler86;
        builder3.errorHandler = errorHandler86;
        retrofit.Profiler profiler90 = null;
        builder3.profiler = profiler90;
        retrofit.RestAdapter.Log log92 = builder3.log;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder3.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(provider85);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNull(log92);
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05349");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        retrofit.Server server47 = builder30.server;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider49 = null;
        builder48.clientProvider = provider49;
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.client.Client.Provider provider54 = builder52.clientProvider;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = builder55.clientProvider;
        builder52.clientProvider = provider57;
        builder48.clientProvider = provider57;
        retrofit.RestAdapter.Builder builder60 = builder30.setClient(provider57);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.Profiler profiler63 = null;
        builder61.profiler = profiler63;
        retrofit.Server server65 = null;
        builder61.server = server65;
        java.util.concurrent.Executor executor67 = builder61.callbackExecutor;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.client.Client.Provider provider70 = builder68.clientProvider;
        builder61.clientProvider = provider70;
        retrofit.RestAdapter.Builder builder72 = builder30.setClient(provider70);
        retrofit.Server server73 = null;
        retrofit.client.Client.Provider provider74 = null;
        java.util.concurrent.Executor executor75 = null;
        java.util.concurrent.Executor executor76 = null;
        retrofit.RequestInterceptor requestInterceptor77 = null;
        retrofit.converter.Converter converter78 = null;
        retrofit.Profiler profiler79 = null;
        retrofit.ErrorHandler errorHandler80 = null;
        retrofit.RestAdapter.Log log81 = null;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean83 = logLevel82.log();
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server73, provider74, executor75, executor76, requestInterceptor77, converter78, profiler79, errorHandler80, log81, logLevel82);
        retrofit.converter.Converter converter85 = null;
        restAdapter84.converter = converter85;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter84.setLogLevel(logLevel87);
        retrofit.Server server89 = null;
        restAdapter84.server = server89;
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter84.getLogLevel();
        builder72.logLevel = logLevel91;
        retrofit.client.Client.Provider provider93 = builder72.clientProvider;
        java.util.concurrent.Executor executor94 = builder72.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNotNull(provider54);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(provider70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider93);
        org.junit.Assert.assertNull(executor94);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05350");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.converter.Converter converter29 = restAdapter28.converter;
        retrofit.ErrorHandler errorHandler30 = restAdapter28.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter28.logLevel;
        builder15.logLevel = logLevel31;
        restAdapter10.setLogLevel(logLevel31);
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        restAdapter34.callbackExecutor = executor41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        retrofit.converter.Converter converter50 = builder43.converter;
        restAdapter34.converter = converter50;
        restAdapter10.converter = converter50;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter10.getLogLevel();
        retrofit.Profiler profiler54 = restAdapter10.profiler;
        retrofit.client.Client.Provider provider55 = restAdapter10.clientProvider;
        retrofit.client.Client.Provider provider56 = restAdapter10.clientProvider;
        retrofit.ErrorHandler errorHandler57 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter10.getLogLevel();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(converter50);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNull(errorHandler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05351");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.Profiler profiler16 = restAdapter15.profiler;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        restAdapter15.log = log20;
        builder4.log = log20;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.Builder builder34 = builder4.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("hi!");
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = null;
        builder38.clientProvider = provider39;
        java.util.concurrent.Executor executor41 = builder38.httpExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        builder38.httpExecutor = executor48;
        builder37.callbackExecutor = executor48;
        builder34.httpExecutor = executor48;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.Profiler profiler63 = restAdapter62.profiler;
        retrofit.ErrorHandler errorHandler64 = restAdapter62.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.setLogLevel(logLevel65);
        retrofit.Server server67 = restAdapter62.server;
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.Builder builder69 = builder34.setLogLevel(logLevel68);
        retrofit.Server server70 = builder34.server;
        retrofit.RestAdapter.Builder builder71 = builder0.setServer(server70);
        retrofit.RestAdapter.Log log72 = builder0.log;
        retrofit.RestAdapter restAdapter73 = builder0.build();
        java.util.concurrent.Executor executor74 = restAdapter73.httpExecutor;
        java.util.concurrent.Executor executor75 = restAdapter73.httpExecutor;
        retrofit.RestAdapter.Log log76 = restAdapter73.log;
        java.util.concurrent.Executor executor77 = restAdapter73.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter73.getLogLevel();
        retrofit.Server server79 = null;
        restAdapter73.server = server79;
        retrofit.RestAdapter.Log log81 = restAdapter73.log;
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNull(errorHandler64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(server70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log81);
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05352");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        restAdapter11.requestInterceptor = requestInterceptor26;
        retrofit.converter.Converter converter28 = restAdapter11.converter;
        retrofit.Server server29 = restAdapter11.server;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.Profiler profiler42 = restAdapter41.profiler;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        restAdapter41.log = log46;
        builder30.log = log46;
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = null;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel58);
        retrofit.RestAdapter.Builder builder60 = builder30.setLogLevel(logLevel58);
        java.util.concurrent.Executor executor61 = null;
        builder60.callbackExecutor = executor61;
        retrofit.ErrorHandler errorHandler63 = null;
        builder60.errorHandler = errorHandler63;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.Server server67 = null;
        builder60.server = server67;
        retrofit.converter.Converter converter69 = builder60.converter;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler71 = restAdapter70.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.Profiler profiler73 = restAdapter70.profiler;
        retrofit.Server server74 = restAdapter70.server;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.client.Client.Provider provider77 = builder75.clientProvider;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.client.Client.Provider provider80 = builder78.clientProvider;
        builder75.clientProvider = provider80;
        retrofit.client.Client.Provider provider82 = builder75.clientProvider;
        restAdapter70.clientProvider = provider82;
        retrofit.RestAdapter.Builder builder84 = builder60.setClient(provider82);
        restAdapter11.clientProvider = provider82;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNull(errorHandler71);
        org.junit.Assert.assertNull(profiler73);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(provider80);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05353");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        retrofit.client.Client.Provider provider15 = restAdapter10.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder17.clientProvider;
        retrofit.ErrorHandler errorHandler20 = builder17.errorHandler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder21.clientProvider;
        retrofit.ErrorHandler errorHandler24 = builder21.errorHandler;
        retrofit.RestAdapter.Builder builder25 = builder17.setErrorHandler(errorHandler24);
        retrofit.Server server26 = builder17.server;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.Profiler profiler29 = null;
        builder27.profiler = profiler29;
        retrofit.Server server31 = null;
        builder27.server = server31;
        java.util.concurrent.Executor executor33 = builder27.callbackExecutor;
        retrofit.converter.Converter converter34 = builder27.converter;
        retrofit.RestAdapter.Builder builder35 = builder17.setConverter(converter34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder39 = builder36.setLogLevel(logLevel38);
        retrofit.RequestInterceptor requestInterceptor40 = builder36.requestInterceptor;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.Profiler profiler53 = restAdapter52.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean55 = logLevel54.log();
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        restAdapter52.log = log57;
        builder41.log = log57;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel69);
        retrofit.RestAdapter.Builder builder71 = builder41.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("hi!");
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider76 = null;
        builder75.clientProvider = provider76;
        java.util.concurrent.Executor executor78 = builder75.httpExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.Profiler profiler81 = null;
        builder79.profiler = profiler81;
        retrofit.Server server83 = null;
        builder79.server = server83;
        java.util.concurrent.Executor executor85 = builder79.callbackExecutor;
        builder75.httpExecutor = executor85;
        builder74.callbackExecutor = executor85;
        builder71.httpExecutor = executor85;
        builder36.httpExecutor = executor85;
        builder17.httpExecutor = executor85;
        retrofit.RestAdapter.Log log91 = builder17.log;
        log91.log("hi!");
        restAdapter10.log = log91;
        retrofit.Profiler profiler95 = null;
        restAdapter10.profiler = profiler95;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(errorHandler24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(requestInterceptor40);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(executor78);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(log91);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05354");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder35.clientProvider;
        retrofit.RestAdapter.Builder builder38 = builder30.setClient(provider37);
        java.util.concurrent.Executor executor39 = builder38.callbackExecutor;
        retrofit.Profiler profiler40 = builder38.profiler;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder42 = builder38.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(profiler40);
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05355");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log13;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter10.logLevel = logLevel15;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        restAdapter10.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter10.logLevel;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter10.getLogLevel();
        retrofit.client.Response response24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response26 = restAdapter10.logAndReplaceResponse("hi!", response24, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05356");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        java.util.concurrent.Executor executor15 = restAdapter11.callbackExecutor;
        retrofit.client.Client.Provider provider16 = restAdapter11.clientProvider;
        retrofit.converter.Converter converter17 = restAdapter11.converter;
        retrofit.Profiler profiler18 = null;
        restAdapter11.profiler = profiler18;
        java.lang.Throwable throwable20 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable20, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(converter17);
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05357");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList14 = request6.getHeaders();
        java.lang.String str15 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05358");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        builder1.ensureSaneDefaults();
        retrofit.Profiler profiler3 = null;
        builder1.profiler = profiler3;
        retrofit.Server server5 = null;
        builder1.server = server5;
        java.util.concurrent.Executor executor7 = builder1.callbackExecutor;
        restAdapter0.callbackExecutor = executor7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = null;
        builder9.clientProvider = provider10;
        retrofit.converter.Converter converter12 = null;
        builder9.converter = converter12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.client.Client.Provider provider16 = builder14.clientProvider;
        retrofit.ErrorHandler errorHandler17 = builder14.errorHandler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.client.Client.Provider provider20 = builder18.clientProvider;
        retrofit.ErrorHandler errorHandler21 = builder18.errorHandler;
        retrofit.RestAdapter.Builder builder22 = builder14.setErrorHandler(errorHandler21);
        builder9.errorHandler = errorHandler21;
        restAdapter0.errorHandler = errorHandler21;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = null;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel35);
        retrofit.Profiler profiler37 = restAdapter36.profiler;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean39 = logLevel38.log();
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        restAdapter36.log = log41;
        builder25.log = log41;
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = null;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel53);
        retrofit.RestAdapter.Builder builder55 = builder25.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("hi!");
        retrofit.Server server58 = null;
        builder57.server = server58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder60.clientProvider;
        retrofit.ErrorHandler errorHandler63 = builder60.errorHandler;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.client.Client.Provider provider66 = builder64.clientProvider;
        retrofit.ErrorHandler errorHandler67 = builder64.errorHandler;
        retrofit.RestAdapter.Builder builder68 = builder60.setErrorHandler(errorHandler67);
        retrofit.Server server69 = builder60.server;
        retrofit.converter.Converter converter70 = builder60.converter;
        builder57.converter = converter70;
        restAdapter0.converter = converter70;
        retrofit.RequestInterceptor requestInterceptor73 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(provider20);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(provider66);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertNotNull(converter70);
        org.junit.Assert.assertNull(requestInterceptor73);
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05359");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.LogLevel logLevel31 = null;
        builder0.logLevel = logLevel31;
        java.util.concurrent.Executor executor33 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider39 = null;
        builder38.clientProvider = provider39;
        builder38.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor42 = builder38.requestInterceptor;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider45 = null;
        builder44.clientProvider = provider45;
        java.util.concurrent.Executor executor47 = builder44.httpExecutor;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Server server52 = null;
        builder48.server = server52;
        java.util.concurrent.Executor executor54 = builder48.callbackExecutor;
        builder44.httpExecutor = executor54;
        builder43.callbackExecutor = executor54;
        builder38.callbackExecutor = executor54;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.Profiler profiler60 = null;
        builder58.profiler = profiler60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.Profiler profiler64 = null;
        builder62.profiler = profiler64;
        retrofit.Server server66 = null;
        builder62.server = server66;
        java.util.concurrent.Executor executor68 = builder62.callbackExecutor;
        builder58.callbackExecutor = executor68;
        retrofit.RestAdapter.Builder builder70 = builder34.setExecutors(executor54, executor68);
        retrofit.RestAdapter.Log log71 = builder70.log;
        builder0.log = log71;
        java.util.concurrent.Executor executor73 = builder0.httpExecutor;
        java.util.concurrent.Executor executor74 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder76 = builder0.setServer("hi!");
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter restAdapter78 = builder76.build();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertNull(executor74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(restAdapter78);
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05360");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        builder0.ensureSaneDefaults();
        retrofit.Server server6 = builder0.server;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = null;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel16);
        retrofit.converter.Converter converter18 = restAdapter17.converter;
        retrofit.ErrorHandler errorHandler19 = restAdapter17.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter17.logLevel;
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.Builder builder24 = builder0.setLogLevel(logLevel23);
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log38 = null;
        restAdapter36.log = log38;
        retrofit.Profiler profiler40 = null;
        restAdapter36.profiler = profiler40;
        retrofit.Profiler profiler42 = null;
        restAdapter36.profiler = profiler42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        retrofit.Profiler profiler56 = restAdapter55.profiler;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean58 = logLevel57.log();
        restAdapter55.logLevel = logLevel57;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        restAdapter55.log = log60;
        builder44.log = log60;
        restAdapter36.log = log60;
        retrofit.client.Header[] headerArray66 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList67 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList67, headerArray66);
        retrofit.mime.TypedOutput typedOutput69 = null;
        retrofit.client.Request request70 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList67, typedOutput69);
        java.lang.String str71 = request70.getMethod();
        java.util.List<retrofit.client.Header> headerList72 = request70.getHeaders();
        java.lang.String str73 = request70.getUrl();
        retrofit.client.Request request74 = restAdapter36.logAndReplaceRequest(request70);
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter36.logLevel;
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter36.getLogLevel();
        builder0.logLevel = logLevel76;
        retrofit.client.Client client78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder79 = builder0.setClient(client78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(headerArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(headerList72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(request74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05361");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.client.Client.Provider provider4 = builder3.clientProvider;
        retrofit.RequestInterceptor requestInterceptor5 = builder3.requestInterceptor;
        retrofit.client.Client.Provider provider6 = builder3.clientProvider;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler8 = restAdapter7.errorHandler;
        retrofit.ErrorHandler errorHandler9 = restAdapter7.errorHandler;
        retrofit.Server server10 = null;
        retrofit.client.Client.Provider provider11 = null;
        java.util.concurrent.Executor executor12 = null;
        java.util.concurrent.Executor executor13 = null;
        retrofit.RequestInterceptor requestInterceptor14 = null;
        retrofit.converter.Converter converter15 = null;
        retrofit.Profiler profiler16 = null;
        retrofit.ErrorHandler errorHandler17 = null;
        retrofit.RestAdapter.Log log18 = null;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server10, provider11, executor12, executor13, requestInterceptor14, converter15, profiler16, errorHandler17, log18, logLevel19);
        retrofit.converter.Converter converter21 = restAdapter20.converter;
        retrofit.Profiler profiler22 = null;
        restAdapter20.profiler = profiler22;
        java.util.concurrent.Executor executor24 = restAdapter20.callbackExecutor;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.Profiler profiler27 = null;
        builder25.profiler = profiler27;
        retrofit.Server server29 = null;
        builder25.server = server29;
        java.util.concurrent.Executor executor31 = builder25.callbackExecutor;
        retrofit.converter.Converter converter32 = builder25.converter;
        restAdapter20.converter = converter32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.Server server38 = null;
        builder34.server = server38;
        java.util.concurrent.Executor executor40 = builder34.callbackExecutor;
        restAdapter20.httpExecutor = executor40;
        restAdapter7.httpExecutor = executor40;
        retrofit.converter.Converter converter43 = null;
        restAdapter7.converter = converter43;
        retrofit.Profiler profiler45 = restAdapter7.profiler;
        retrofit.RestAdapter.Log log46 = null;
        restAdapter7.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = null;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel58);
        retrofit.Profiler profiler60 = restAdapter59.profiler;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean62 = logLevel61.log();
        restAdapter59.logLevel = logLevel61;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        restAdapter59.log = log64;
        builder48.log = log64;
        retrofit.Server server67 = null;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel76);
        retrofit.RestAdapter.Builder builder78 = builder48.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.client.Client.Provider provider84 = builder82.clientProvider;
        builder79.clientProvider = provider84;
        retrofit.RestAdapter.Builder builder86 = builder48.setClient(provider84);
        retrofit.Profiler profiler87 = null;
        builder48.profiler = profiler87;
        retrofit.RequestInterceptor requestInterceptor89 = builder48.requestInterceptor;
        builder48.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor91 = builder48.requestInterceptor;
        restAdapter7.requestInterceptor = requestInterceptor91;
        builder3.requestInterceptor = requestInterceptor91;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(requestInterceptor5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(converter32);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(requestInterceptor89);
        org.junit.Assert.assertNotNull(requestInterceptor91);
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05362");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.RestAdapter.Log log33 = builder30.log;
        retrofit.RequestInterceptor requestInterceptor34 = builder30.requestInterceptor;
        java.util.concurrent.Executor executor35 = builder30.callbackExecutor;
        retrofit.ErrorHandler errorHandler36 = builder30.errorHandler;
        retrofit.converter.Converter converter37 = builder30.converter;
        retrofit.ErrorHandler errorHandler38 = builder30.errorHandler;
        retrofit.Server server39 = builder30.server;
        java.util.concurrent.Executor executor40 = builder30.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(requestInterceptor34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNull(errorHandler38);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertNull(executor40);
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05363");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.ErrorHandler errorHandler7 = builder4.errorHandler;
        retrofit.RestAdapter.Builder builder8 = builder0.setErrorHandler(errorHandler7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("hi!");
        retrofit.converter.Converter converter11 = builder8.converter;
        retrofit.ErrorHandler errorHandler12 = builder8.errorHandler;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.converter.Converter converter24 = restAdapter23.converter;
        retrofit.ErrorHandler errorHandler25 = restAdapter23.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter23.logLevel;
        retrofit.Profiler profiler27 = null;
        restAdapter23.profiler = profiler27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.converter.Converter converter31 = builder29.converter;
        restAdapter23.converter = converter31;
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter23.logLevel;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.Profiler profiler47 = restAdapter46.profiler;
        java.util.concurrent.Executor executor48 = null;
        restAdapter46.httpExecutor = executor48;
        retrofit.Profiler profiler50 = null;
        restAdapter46.profiler = profiler50;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter46.getLogLevel();
        builder34.logLevel = logLevel52;
        retrofit.RestAdapter.LogLevel logLevel54 = builder34.logLevel;
        retrofit.converter.Converter converter55 = builder34.converter;
        retrofit.RequestInterceptor requestInterceptor56 = builder34.requestInterceptor;
        restAdapter23.requestInterceptor = requestInterceptor56;
        retrofit.RestAdapter.Builder builder58 = builder8.setRequestInterceptor(requestInterceptor56);
        retrofit.Profiler profiler59 = null;
        builder58.profiler = profiler59;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(converter11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter55);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05364");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter11.new RestHandler();
        java.util.concurrent.Executor executor27 = restAdapter11.callbackExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.Server server32 = null;
        builder28.server = server32;
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        retrofit.converter.Converter converter35 = builder28.converter;
        restAdapter11.converter = converter35;
        retrofit.Server server37 = restAdapter11.server;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.Profiler profiler50 = restAdapter49.profiler;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean52 = logLevel51.log();
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        restAdapter49.log = log54;
        builder38.log = log54;
        retrofit.Server server57 = null;
        retrofit.client.Client.Provider provider58 = null;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.converter.Converter converter62 = null;
        retrofit.Profiler profiler63 = null;
        retrofit.ErrorHandler errorHandler64 = null;
        retrofit.RestAdapter.Log log65 = null;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server57, provider58, executor59, executor60, requestInterceptor61, converter62, profiler63, errorHandler64, log65, logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder38.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider71 = builder69.clientProvider;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        builder69.clientProvider = provider74;
        retrofit.RestAdapter.Builder builder76 = builder38.setClient(provider74);
        retrofit.Profiler profiler77 = null;
        builder38.profiler = profiler77;
        retrofit.RequestInterceptor requestInterceptor79 = builder38.requestInterceptor;
        builder38.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor81 = builder38.requestInterceptor;
        restAdapter11.requestInterceptor = requestInterceptor81;
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter11.logLevel;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.client.Client.Provider provider86 = builder84.clientProvider;
        restAdapter11.clientProvider = provider86;
        retrofit.Profiler profiler88 = restAdapter11.profiler;
        retrofit.Profiler profiler89 = null;
        restAdapter11.profiler = profiler89;
        retrofit.converter.Converter converter91 = restAdapter11.converter;
        java.util.concurrent.Executor executor92 = restAdapter11.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(converter35);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNull(profiler88);
        org.junit.Assert.assertNotNull(converter91);
        org.junit.Assert.assertNull(executor92);
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05365");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.converter.Converter converter33 = builder30.converter;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        builder34.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor38 = builder34.requestInterceptor;
        builder30.requestInterceptor = requestInterceptor38;
        retrofit.Server server40 = null;
        builder30.server = server40;
        java.util.concurrent.Executor executor42 = builder30.httpExecutor;
        retrofit.RestAdapter.Log log43 = builder30.log;
        retrofit.RequestInterceptor requestInterceptor44 = builder30.requestInterceptor;
        retrofit.RestAdapter.Builder builder46 = builder30.setServer("hi!");
        retrofit.Profiler profiler47 = builder46.profiler;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(profiler47);
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05366");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = null;
        restAdapter10.converter = converter11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.Profiler profiler25 = restAdapter24.profiler;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        restAdapter24.log = log29;
        builder13.log = log29;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.RestAdapter.Builder builder43 = builder13.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.client.Client.Provider provider46 = builder44.clientProvider;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.client.Client.Provider provider49 = builder47.clientProvider;
        builder44.clientProvider = provider49;
        retrofit.RestAdapter.Builder builder51 = builder13.setClient(provider49);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean53 = logLevel52.log();
        boolean boolean54 = logLevel52.log();
        builder51.logLevel = logLevel52;
        restAdapter10.logLevel = logLevel52;
        boolean boolean57 = logLevel52.log();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNotNull(provider49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05367");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.Log log26 = restAdapter11.log;
        retrofit.client.Client.Provider provider27 = restAdapter11.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter11.new RestHandler();
        retrofit.Profiler profiler29 = null;
        restAdapter11.profiler = profiler29;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter11.new RestHandler();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter43.new RestHandler();
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean55 = logLevel54.log();
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        restAdapter43.logLevel = logLevel54;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        restAdapter43.requestInterceptor = requestInterceptor58;
        retrofit.converter.Converter converter60 = restAdapter43.converter;
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter43.logLevel;
        restAdapter11.logLevel = logLevel61;
        java.lang.Throwable throwable63 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable63, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05368");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server12 = restAdapter11.server;
        java.util.concurrent.Executor executor13 = restAdapter11.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        builder14.log = log30;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder14.setLogLevel(logLevel42);
        java.util.concurrent.Executor executor45 = null;
        builder44.callbackExecutor = executor45;
        retrofit.ErrorHandler errorHandler47 = null;
        builder44.errorHandler = errorHandler47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.Profiler profiler51 = null;
        builder49.profiler = profiler51;
        retrofit.Server server53 = null;
        builder49.server = server53;
        java.util.concurrent.Executor executor55 = builder49.callbackExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder56.clientProvider;
        builder49.clientProvider = provider58;
        builder44.clientProvider = provider58;
        retrofit.Server server61 = builder44.server;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider63 = null;
        builder62.clientProvider = provider63;
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.client.Client.Provider provider68 = builder66.clientProvider;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.client.Client.Provider provider71 = builder69.clientProvider;
        builder66.clientProvider = provider71;
        builder62.clientProvider = provider71;
        retrofit.RestAdapter.Builder builder74 = builder44.setClient(provider71);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.Profiler profiler77 = null;
        builder75.profiler = profiler77;
        retrofit.Server server79 = null;
        builder75.server = server79;
        java.util.concurrent.Executor executor81 = builder75.callbackExecutor;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.client.Client.Provider provider84 = builder82.clientProvider;
        builder75.clientProvider = provider84;
        retrofit.RestAdapter.Builder builder86 = builder44.setClient(provider84);
        restAdapter11.clientProvider = provider84;
        java.util.concurrent.Executor executor88 = restAdapter11.httpExecutor;
        retrofit.Profiler profiler89 = restAdapter11.profiler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(executor88);
        org.junit.Assert.assertNull(profiler89);
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05369");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.converter.Converter converter15 = restAdapter11.converter;
        retrofit.Profiler profiler16 = restAdapter11.profiler;
        retrofit.ErrorHandler errorHandler17 = restAdapter11.errorHandler;
        retrofit.converter.Converter converter18 = restAdapter11.converter;
        java.util.concurrent.Executor executor19 = restAdapter11.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder20.clientProvider;
        retrofit.ErrorHandler errorHandler23 = builder20.errorHandler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.client.Client.Provider provider26 = builder24.clientProvider;
        retrofit.ErrorHandler errorHandler27 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder28 = builder20.setErrorHandler(errorHandler27);
        retrofit.Server server29 = builder20.server;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.Profiler profiler32 = null;
        builder30.profiler = profiler32;
        retrofit.Server server34 = null;
        builder30.server = server34;
        java.util.concurrent.Executor executor36 = builder30.callbackExecutor;
        retrofit.converter.Converter converter37 = builder30.converter;
        retrofit.RestAdapter.Builder builder38 = builder20.setConverter(converter37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.Profiler profiler51 = restAdapter50.profiler;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean53 = logLevel52.log();
        restAdapter50.logLevel = logLevel52;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        restAdapter50.log = log55;
        builder39.log = log55;
        log55.log("");
        retrofit.RestAdapter.Builder builder60 = builder20.setLog(log55);
        retrofit.Server server61 = builder60.server;
        retrofit.Profiler profiler62 = builder60.profiler;
        java.util.concurrent.Executor executor63 = builder60.httpExecutor;
        restAdapter11.httpExecutor = executor63;
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter11.logLevel;
        java.lang.Throwable throwable66 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable66, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(converter37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05370");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = null;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel16);
        retrofit.Profiler profiler18 = restAdapter17.profiler;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean20 = logLevel19.log();
        restAdapter17.logLevel = logLevel19;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        restAdapter17.log = log22;
        builder6.log = log22;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.RestAdapter.Builder builder36 = builder6.setLogLevel(logLevel34);
        java.util.concurrent.Executor executor37 = null;
        builder36.callbackExecutor = executor37;
        retrofit.converter.Converter converter39 = builder36.converter;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = null;
        builder40.clientProvider = provider41;
        builder40.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor44 = builder40.requestInterceptor;
        builder36.requestInterceptor = requestInterceptor44;
        retrofit.RestAdapter.Builder builder46 = builder0.setRequestInterceptor(requestInterceptor44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.Profiler profiler49 = null;
        builder47.profiler = profiler49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.Profiler profiler53 = null;
        builder51.profiler = profiler53;
        retrofit.Server server55 = null;
        builder51.server = server55;
        java.util.concurrent.Executor executor57 = builder51.callbackExecutor;
        builder47.callbackExecutor = executor57;
        builder46.httpExecutor = executor57;
        retrofit.converter.Converter converter60 = builder46.converter;
        retrofit.RestAdapter.Log log61 = builder46.log;
        builder46.ensureSaneDefaults();
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(log61);
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05371");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.Profiler profiler4 = builder0.profiler;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.converter.Converter converter16 = restAdapter15.converter;
        retrofit.ErrorHandler errorHandler17 = restAdapter15.errorHandler;
        retrofit.Profiler profiler18 = null;
        restAdapter15.profiler = profiler18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider21 = null;
        builder20.clientProvider = provider21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.converter.Converter converter34 = restAdapter33.converter;
        retrofit.ErrorHandler errorHandler35 = restAdapter33.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter33.logLevel;
        builder20.logLevel = logLevel36;
        restAdapter15.logLevel = logLevel36;
        retrofit.Server server39 = restAdapter15.server;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter15.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder0.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel52);
        retrofit.Profiler profiler54 = restAdapter53.profiler;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean56 = logLevel55.log();
        restAdapter53.logLevel = logLevel55;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        restAdapter53.log = log58;
        builder42.log = log58;
        retrofit.Server server61 = null;
        retrofit.client.Client.Provider provider62 = null;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.converter.Converter converter66 = null;
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Log log69 = null;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server61, provider62, executor63, executor64, requestInterceptor65, converter66, profiler67, errorHandler68, log69, logLevel70);
        retrofit.RestAdapter.Builder builder72 = builder42.setLogLevel(logLevel70);
        retrofit.RestAdapter.Log log73 = builder72.log;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider75 = null;
        builder74.clientProvider = provider75;
        builder74.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor78 = builder74.requestInterceptor;
        builder72.requestInterceptor = requestInterceptor78;
        retrofit.RestAdapter.Builder builder80 = builder0.setRequestInterceptor(requestInterceptor78);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(errorHandler35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05372");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.Server server14 = restAdapter10.server;
        retrofit.client.Header[] headerArray17 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList18 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList18, headerArray17);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList18, typedOutput20);
        java.lang.String str22 = request21.getMethod();
        java.lang.String str23 = request21.getMethod();
        java.util.List<retrofit.client.Header> headerList24 = request21.getHeaders();
        java.util.List<retrofit.client.Header> headerList25 = request21.getHeaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request26 = restAdapter10.logAndReplaceRequest(request21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNotNull(headerArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(headerList25);
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05373");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        retrofit.ErrorHandler errorHandler36 = null;
        restAdapter29.errorHandler = errorHandler36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel38;
        retrofit.RestAdapter.Log log40 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder41 = builder0.setLog(log40);
        retrofit.RestAdapter.Log log42 = builder0.log;
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler44 = builder0.errorHandler;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        restAdapter45.log = log46;
        retrofit.Profiler profiler48 = restAdapter45.profiler;
        java.util.concurrent.Executor executor49 = restAdapter45.callbackExecutor;
        retrofit.client.Client.Provider provider50 = restAdapter45.clientProvider;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.Profiler profiler63 = restAdapter62.profiler;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean65 = logLevel64.log();
        restAdapter62.logLevel = logLevel64;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        restAdapter62.log = log67;
        builder51.log = log67;
        retrofit.Server server70 = null;
        retrofit.client.Client.Provider provider71 = null;
        java.util.concurrent.Executor executor72 = null;
        java.util.concurrent.Executor executor73 = null;
        retrofit.RequestInterceptor requestInterceptor74 = null;
        retrofit.converter.Converter converter75 = null;
        retrofit.Profiler profiler76 = null;
        retrofit.ErrorHandler errorHandler77 = null;
        retrofit.RestAdapter.Log log78 = null;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server70, provider71, executor72, executor73, requestInterceptor74, converter75, profiler76, errorHandler77, log78, logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder51.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("hi!");
        retrofit.RestAdapter.Log log84 = builder83.log;
        retrofit.RequestInterceptor requestInterceptor85 = builder83.requestInterceptor;
        retrofit.Server server86 = builder83.server;
        restAdapter45.server = server86;
        builder0.server = server86;
        java.util.concurrent.Executor executor89 = builder0.httpExecutor;
        retrofit.RestAdapter.Log log90 = builder0.log;
        retrofit.ErrorHandler errorHandler91 = builder0.errorHandler;
        java.lang.Class<?> wildcardClass92 = errorHandler91.getClass();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(errorHandler44);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNull(requestInterceptor85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNotNull(log90);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05374");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        builder19.log = log35;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.RestAdapter.Builder builder49 = builder19.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.client.Client.Provider provider52 = builder50.clientProvider;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder53.clientProvider;
        builder50.clientProvider = provider55;
        retrofit.RestAdapter.Builder builder57 = builder19.setClient(provider55);
        retrofit.Profiler profiler58 = null;
        builder19.profiler = profiler58;
        retrofit.RequestInterceptor requestInterceptor60 = builder19.requestInterceptor;
        builder19.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler62 = builder19.errorHandler;
        retrofit.converter.Converter converter63 = builder19.converter;
        builder0.converter = converter63;
        java.util.concurrent.Executor executor65 = builder0.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(errorHandler62);
        org.junit.Assert.assertNotNull(converter63);
        org.junit.Assert.assertNull(executor65);
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05375");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.Profiler profiler42 = restAdapter41.profiler;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        restAdapter41.log = log46;
        retrofit.ErrorHandler errorHandler48 = null;
        restAdapter41.errorHandler = errorHandler48;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        restAdapter41.requestInterceptor = requestInterceptor50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.client.Client.Provider provider54 = builder52.clientProvider;
        retrofit.ErrorHandler errorHandler55 = builder52.errorHandler;
        restAdapter41.errorHandler = errorHandler55;
        retrofit.RestAdapter.Log log57 = restAdapter41.log;
        retrofit.RestAdapter.Builder builder58 = builder30.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel59 = builder30.logLevel;
        builder30.ensureSaneDefaults();
        java.util.concurrent.Executor executor61 = builder30.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(provider54);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor61);
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05376");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        java.lang.String str10 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "hi!", headerList11, typedOutput12);
        java.util.List<retrofit.client.Header> headerList14 = request13.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = request13.getBody();
        retrofit.mime.TypedOutput typedOutput16 = request13.getBody();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNull(typedOutput15);
        org.junit.Assert.assertNull(typedOutput16);
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05377");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "hi!", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = request13.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request13.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput18);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05378");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("hi!");
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.Profiler profiler44 = restAdapter43.profiler;
        retrofit.ErrorHandler errorHandler45 = restAdapter43.errorHandler;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        restAdapter43.log = log46;
        builder30.log = log46;
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = null;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel58);
        retrofit.Profiler profiler60 = restAdapter59.profiler;
        retrofit.ErrorHandler errorHandler61 = restAdapter59.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter59.setLogLevel(logLevel62);
        retrofit.Server server64 = null;
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = null;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log72, logLevel73);
        retrofit.Profiler profiler75 = restAdapter74.profiler;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean77 = logLevel76.log();
        restAdapter74.logLevel = logLevel76;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        restAdapter74.log = log79;
        restAdapter59.log = log79;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter59.logLevel = logLevel82;
        builder30.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        builder85.ensureSaneDefaults();
        retrofit.client.Client.Provider provider87 = builder85.clientProvider;
        retrofit.RestAdapter.Builder builder88 = builder30.setClient(provider87);
        retrofit.RestAdapter.LogLevel logLevel89 = null;
        builder88.logLevel = logLevel89;
        retrofit.Profiler profiler91 = null;
        builder88.profiler = profiler91;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertNull(errorHandler45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05379");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.Profiler profiler8 = null;
        builder6.profiler = profiler8;
        retrofit.Server server10 = null;
        builder6.server = server10;
        java.util.concurrent.Executor executor12 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider14 = null;
        builder13.clientProvider = provider14;
        java.util.concurrent.Executor executor16 = builder13.httpExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.Profiler profiler19 = null;
        builder17.profiler = profiler19;
        retrofit.Server server21 = null;
        builder17.server = server21;
        java.util.concurrent.Executor executor23 = builder17.callbackExecutor;
        builder13.httpExecutor = executor23;
        retrofit.RestAdapter.LogLevel logLevel25 = builder13.logLevel;
        builder6.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.Profiler profiler29 = null;
        builder27.profiler = profiler29;
        retrofit.Server server31 = null;
        builder27.server = server31;
        retrofit.client.Client.Provider provider33 = builder27.clientProvider;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.Profiler profiler46 = restAdapter45.profiler;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean48 = logLevel47.log();
        restAdapter45.logLevel = logLevel47;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        restAdapter45.log = log50;
        builder34.log = log50;
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.RestAdapter.Builder builder64 = builder34.setLogLevel(logLevel62);
        java.util.concurrent.Executor executor65 = null;
        builder64.callbackExecutor = executor65;
        retrofit.converter.Converter converter67 = builder64.converter;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider69 = null;
        builder68.clientProvider = provider69;
        builder68.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor72 = builder68.requestInterceptor;
        builder64.requestInterceptor = requestInterceptor72;
        retrofit.Server server74 = null;
        builder64.server = server74;
        retrofit.RequestInterceptor requestInterceptor76 = builder64.requestInterceptor;
        builder27.requestInterceptor = requestInterceptor76;
        retrofit.RestAdapter.Builder builder78 = builder6.setRequestInterceptor(requestInterceptor76);
        retrofit.RequestInterceptor requestInterceptor79 = builder6.requestInterceptor;
        retrofit.RestAdapter.Builder builder80 = builder0.setRequestInterceptor(requestInterceptor79);
        retrofit.ErrorHandler errorHandler81 = builder80.errorHandler;
        retrofit.Server server82 = builder80.server;
        retrofit.RestAdapter.LogLevel logLevel83 = builder80.logLevel;
        retrofit.client.Client.Provider provider84 = builder80.clientProvider;
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNull(server82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider84);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05380");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        java.util.concurrent.Executor executor14 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor15 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter10.getLogLevel();
        retrofit.client.Client.Provider provider17 = restAdapter10.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider17);
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05381");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        retrofit.ErrorHandler errorHandler15 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean30 = logLevel29.log();
        restAdapter27.logLevel = logLevel29;
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        restAdapter27.log = log32;
        builder16.log = log32;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder16.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.client.Client.Provider provider49 = builder47.clientProvider;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.client.Client.Provider provider52 = builder50.clientProvider;
        builder47.clientProvider = provider52;
        retrofit.RestAdapter.Builder builder54 = builder16.setClient(provider52);
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = null;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel64);
        retrofit.Profiler profiler66 = restAdapter65.profiler;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean68 = logLevel67.log();
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.Builder builder71 = builder54.setLogLevel(logLevel70);
        restAdapter10.logLevel = logLevel70;
        retrofit.Profiler profiler73 = null;
        restAdapter10.profiler = profiler73;
        retrofit.client.Client.Provider provider75 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor76 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter10.getLogLevel();
        retrofit.Profiler profiler78 = restAdapter10.profiler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(provider49);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler78);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05382");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider19 = null;
        builder18.clientProvider = provider19;
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.client.Client.Provider provider24 = builder22.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder25.clientProvider;
        builder22.clientProvider = provider27;
        builder18.clientProvider = provider27;
        retrofit.Profiler profiler30 = null;
        builder18.profiler = profiler30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.converter.Converter converter34 = builder32.converter;
        builder18.converter = converter34;
        restAdapter10.converter = converter34;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(converter34);
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05383");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider6 = null;
        builder5.clientProvider = provider6;
        retrofit.converter.Converter converter8 = null;
        builder5.converter = converter8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider12 = builder10.clientProvider;
        retrofit.ErrorHandler errorHandler13 = builder10.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.client.Client.Provider provider16 = builder14.clientProvider;
        retrofit.ErrorHandler errorHandler17 = builder14.errorHandler;
        retrofit.RestAdapter.Builder builder18 = builder10.setErrorHandler(errorHandler17);
        builder5.errorHandler = errorHandler17;
        builder0.errorHandler = errorHandler17;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.converter.Converter converter32 = restAdapter31.converter;
        retrofit.Profiler profiler33 = null;
        restAdapter31.profiler = profiler33;
        java.util.concurrent.Executor executor35 = restAdapter31.callbackExecutor;
        java.util.concurrent.Executor executor36 = restAdapter31.httpExecutor;
        java.util.concurrent.Executor executor37 = restAdapter31.httpExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.client.Client.Provider provider40 = builder38.clientProvider;
        retrofit.Profiler profiler41 = builder38.profiler;
        retrofit.converter.Converter converter42 = null;
        builder38.converter = converter42;
        retrofit.Server server44 = null;
        builder38.server = server44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        java.util.concurrent.Executor executor49 = builder46.httpExecutor;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.Profiler profiler52 = null;
        builder50.profiler = profiler52;
        retrofit.Server server54 = null;
        builder50.server = server54;
        java.util.concurrent.Executor executor56 = builder50.callbackExecutor;
        builder46.httpExecutor = executor56;
        java.util.concurrent.Executor executor58 = builder46.httpExecutor;
        builder38.httpExecutor = executor58;
        restAdapter31.httpExecutor = executor58;
        builder0.callbackExecutor = executor58;
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider12);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(executor58);
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05384");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = request25.getBody();
        retrofit.mime.TypedOutput typedOutput27 = request25.getBody();
        retrofit.mime.TypedOutput typedOutput28 = request25.getBody();
        java.lang.String str29 = request25.getMethod();
        retrofit.client.Request request30 = restAdapter10.logAndReplaceRequest(request25);
        retrofit.Profiler profiler31 = restAdapter10.profiler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(typedOutput26);
        org.junit.Assert.assertNull(typedOutput27);
        org.junit.Assert.assertNull(typedOutput28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(request30);
        org.junit.Assert.assertNull(profiler31);
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05385");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter10.logLevel;
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel24);
        retrofit.Profiler profiler26 = restAdapter25.profiler;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        restAdapter25.logLevel = logLevel27;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        restAdapter25.log = log30;
        builder14.log = log30;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.RestAdapter.Builder builder44 = builder14.setLogLevel(logLevel42);
        java.util.concurrent.Executor executor45 = null;
        builder44.callbackExecutor = executor45;
        retrofit.ErrorHandler errorHandler47 = null;
        builder44.errorHandler = errorHandler47;
        builder44.ensureSaneDefaults();
        retrofit.client.Client.Provider provider50 = builder44.clientProvider;
        restAdapter10.clientProvider = provider50;
        retrofit.client.Response response53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response55 = restAdapter10.logAndReplaceResponse("hi!", response53, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(provider50);
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05386");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.Server server4 = restAdapter0.server;
        retrofit.ErrorHandler errorHandler5 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor7 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler8 = restAdapter0.profiler;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(errorHandler5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(profiler8);
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05387");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        retrofit.Server server15 = null;
        restAdapter10.server = server15;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.ErrorHandler errorHandler29 = restAdapter27.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.setLogLevel(logLevel30);
        retrofit.Server server32 = restAdapter27.server;
        retrofit.Server server33 = restAdapter27.server;
        retrofit.converter.Converter converter34 = restAdapter27.converter;
        java.util.concurrent.Executor executor35 = restAdapter27.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter27.getLogLevel();
        restAdapter10.logLevel = logLevel36;
        retrofit.client.Client.Provider provider38 = restAdapter10.clientProvider;
        java.lang.Throwable throwable39 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable39, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider38);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05388");
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = null;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel13);
        retrofit.converter.Converter converter15 = restAdapter14.converter;
        retrofit.Server server16 = restAdapter14.server;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.Profiler profiler36 = restAdapter35.profiler;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean38 = logLevel37.log();
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        restAdapter35.log = log40;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log40, logLevel42);
        restAdapter14.log = log40;
        java.util.concurrent.Executor executor45 = restAdapter14.callbackExecutor;
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        java.lang.String str53 = request52.getMethod();
        java.lang.String str54 = request52.getMethod();
        java.lang.String str55 = request52.getUrl();
        java.util.List<retrofit.client.Header> headerList56 = request52.getHeaders();
        java.lang.String str57 = request52.getMethod();
        java.util.List<retrofit.client.Header> headerList58 = request52.getHeaders();
        retrofit.client.Request request59 = restAdapter14.logAndReplaceRequest(request52);
        java.util.List<retrofit.client.Header> headerList60 = request59.getHeaders();
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("hi!", "hi!", headerList60, typedOutput61);
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("hi!", "hi!", headerList60, typedOutput63);
        java.lang.String str65 = request64.getMethod();
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(headerList58);
        org.junit.Assert.assertNotNull(request59);
        org.junit.Assert.assertNotNull(headerList60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05389");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "hi!", headerList4, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", headerList8, typedOutput9);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05390");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.Server server14 = restAdapter10.server;
        retrofit.client.Client.Provider provider15 = restAdapter10.clientProvider;
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        java.util.concurrent.Executor executor28 = restAdapter26.callbackExecutor;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.ErrorHandler errorHandler41 = restAdapter39.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.setLogLevel(logLevel42);
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = null;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel53);
        retrofit.Profiler profiler55 = restAdapter54.profiler;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean57 = logLevel56.log();
        restAdapter54.logLevel = logLevel56;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        restAdapter54.log = log59;
        restAdapter39.log = log59;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.Profiler profiler65 = null;
        builder63.profiler = profiler65;
        retrofit.Server server67 = null;
        builder63.server = server67;
        java.util.concurrent.Executor executor69 = builder63.callbackExecutor;
        restAdapter62.callbackExecutor = executor69;
        restAdapter39.httpExecutor = executor69;
        restAdapter26.httpExecutor = executor69;
        restAdapter10.httpExecutor = executor69;
        retrofit.client.Client.Provider provider74 = restAdapter10.clientProvider;
        retrofit.ErrorHandler errorHandler75 = restAdapter10.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNull(errorHandler41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNull(errorHandler75);
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05391");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        java.util.concurrent.Executor executor12 = builder0.httpExecutor;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.ErrorHandler errorHandler25 = restAdapter23.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider29 = null;
        builder28.clientProvider = provider29;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.converter.Converter converter42 = restAdapter41.converter;
        retrofit.ErrorHandler errorHandler43 = restAdapter41.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter41.logLevel;
        builder28.logLevel = logLevel44;
        restAdapter23.setLogLevel(logLevel44);
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Server server52 = null;
        builder48.server = server52;
        java.util.concurrent.Executor executor54 = builder48.callbackExecutor;
        restAdapter47.callbackExecutor = executor54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        retrofit.converter.Converter converter63 = builder56.converter;
        restAdapter47.converter = converter63;
        restAdapter23.converter = converter63;
        retrofit.RestAdapter.Builder builder66 = builder0.setConverter(converter63);
        retrofit.RequestInterceptor requestInterceptor67 = null;
        builder66.requestInterceptor = requestInterceptor67;
        java.util.concurrent.Executor executor69 = builder66.httpExecutor;
        retrofit.Server server70 = null;
        retrofit.client.Client.Provider provider71 = null;
        java.util.concurrent.Executor executor72 = null;
        java.util.concurrent.Executor executor73 = null;
        retrofit.RequestInterceptor requestInterceptor74 = null;
        retrofit.converter.Converter converter75 = null;
        retrofit.Profiler profiler76 = null;
        retrofit.ErrorHandler errorHandler77 = null;
        retrofit.RestAdapter.Log log78 = null;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server70, provider71, executor72, executor73, requestInterceptor74, converter75, profiler76, errorHandler77, log78, logLevel79);
        retrofit.converter.Converter converter81 = restAdapter80.converter;
        retrofit.Profiler profiler82 = null;
        restAdapter80.profiler = profiler82;
        java.util.concurrent.Executor executor84 = restAdapter80.callbackExecutor;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        builder85.ensureSaneDefaults();
        retrofit.Profiler profiler87 = null;
        builder85.profiler = profiler87;
        retrofit.Server server89 = null;
        builder85.server = server89;
        java.util.concurrent.Executor executor91 = builder85.callbackExecutor;
        retrofit.converter.Converter converter92 = builder85.converter;
        restAdapter80.converter = converter92;
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter80.logLevel;
        builder66.logLevel = logLevel94;
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(errorHandler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(converter63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter81);
        org.junit.Assert.assertNull(executor84);
        org.junit.Assert.assertNotNull(executor91);
        org.junit.Assert.assertNotNull(converter92);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05392");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = null;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel16);
        retrofit.Profiler profiler18 = restAdapter17.profiler;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean20 = logLevel19.log();
        restAdapter17.logLevel = logLevel19;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        restAdapter17.log = log22;
        builder6.log = log22;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel34);
        retrofit.RestAdapter.Builder builder36 = builder6.setLogLevel(logLevel34);
        java.util.concurrent.Executor executor37 = null;
        builder36.callbackExecutor = executor37;
        retrofit.converter.Converter converter39 = builder36.converter;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider41 = null;
        builder40.clientProvider = provider41;
        builder40.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor44 = builder40.requestInterceptor;
        builder36.requestInterceptor = requestInterceptor44;
        retrofit.RestAdapter.Builder builder46 = builder0.setRequestInterceptor(requestInterceptor44);
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.converter.Converter converter58 = restAdapter57.converter;
        retrofit.ErrorHandler errorHandler59 = restAdapter57.errorHandler;
        retrofit.Profiler profiler60 = null;
        restAdapter57.profiler = profiler60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider64 = builder62.clientProvider;
        retrofit.ErrorHandler errorHandler65 = builder62.errorHandler;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.client.Client.Provider provider68 = builder66.clientProvider;
        retrofit.ErrorHandler errorHandler69 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder70 = builder62.setErrorHandler(errorHandler69);
        restAdapter57.errorHandler = errorHandler69;
        retrofit.RestAdapter.Builder builder72 = builder46.setErrorHandler(errorHandler69);
        retrofit.Server server73 = builder46.server;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.client.Client.Provider provider76 = builder74.clientProvider;
        retrofit.ErrorHandler errorHandler77 = builder74.errorHandler;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.client.Client.Provider provider80 = builder78.clientProvider;
        retrofit.ErrorHandler errorHandler81 = builder78.errorHandler;
        retrofit.RestAdapter.Builder builder82 = builder74.setErrorHandler(errorHandler81);
        retrofit.RestAdapter.Builder builder83 = builder46.setErrorHandler(errorHandler81);
        retrofit.ErrorHandler errorHandler84 = builder46.errorHandler;
        retrofit.RequestInterceptor requestInterceptor85 = builder46.requestInterceptor;
        retrofit.converter.Converter converter86 = builder46.converter;
        retrofit.converter.Converter converter87 = builder46.converter;
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(provider80);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(requestInterceptor85);
        org.junit.Assert.assertNull(converter86);
        org.junit.Assert.assertNull(converter87);
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05393");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = request14.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(typedOutput15);
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05394");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.client.Client.Provider provider33 = builder31.clientProvider;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.client.Client.Provider provider36 = builder34.clientProvider;
        builder31.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = builder0.setClient(provider36);
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.Profiler profiler50 = restAdapter49.profiler;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean52 = logLevel51.log();
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.Builder builder55 = builder38.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.Profiler profiler62 = null;
        builder60.profiler = profiler62;
        retrofit.Server server64 = null;
        builder60.server = server64;
        java.util.concurrent.Executor executor66 = builder60.callbackExecutor;
        builder56.callbackExecutor = executor66;
        builder55.httpExecutor = executor66;
        java.util.concurrent.Executor executor69 = builder55.callbackExecutor;
        retrofit.Profiler profiler70 = null;
        builder55.profiler = profiler70;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNull(executor69);
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05395");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.Profiler profiler35 = null;
        builder30.profiler = profiler35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.Profiler profiler48 = restAdapter47.profiler;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean50 = logLevel49.log();
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder52 = builder30.setLogLevel(logLevel49);
        retrofit.Profiler profiler53 = builder52.profiler;
        retrofit.client.Client.Provider provider54 = builder52.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel55 = builder52.logLevel;
        java.lang.Class<?> wildcardClass56 = logLevel55.getClass();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05396");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.converter.Converter converter19 = builder0.converter;
        retrofit.RestAdapter.Log log20 = builder0.log;
        java.util.concurrent.Executor executor21 = builder0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel22 = builder0.logLevel;
        retrofit.Server server23 = builder0.server;
        retrofit.Profiler profiler24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder0.setProfiler(profiler24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server23);
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05397");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.Profiler profiler13 = restAdapter12.profiler;
        java.util.concurrent.Executor executor14 = null;
        restAdapter12.httpExecutor = executor14;
        retrofit.Profiler profiler16 = null;
        restAdapter12.profiler = profiler16;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.getLogLevel();
        builder0.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel20 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log37;
        builder21.log = log37;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder21.setLogLevel(logLevel49);
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.Profiler profiler63 = restAdapter62.profiler;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean65 = logLevel64.log();
        restAdapter62.logLevel = logLevel64;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        restAdapter62.log = log67;
        retrofit.ErrorHandler errorHandler69 = null;
        restAdapter62.errorHandler = errorHandler69;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        restAdapter62.requestInterceptor = requestInterceptor71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider74 = null;
        builder73.clientProvider = provider74;
        builder73.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor77 = builder73.requestInterceptor;
        restAdapter62.requestInterceptor = requestInterceptor77;
        builder21.requestInterceptor = requestInterceptor77;
        retrofit.RestAdapter.Log log80 = builder21.log;
        builder0.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.client.Client.Provider provider84 = builder82.clientProvider;
        retrofit.RestAdapter.Builder builder85 = builder0.setClient(provider84);
        retrofit.RestAdapter.Builder builder87 = builder0.setServer("hi!");
        java.lang.Class<?> wildcardClass88 = builder87.getClass();
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05398");
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean19 = logLevel18.log();
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log21;
        retrofit.ErrorHandler errorHandler23 = null;
        restAdapter16.errorHandler = errorHandler23;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter16.logLevel = logLevel25;
        retrofit.RestAdapter.Log log27 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter16.log;
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList43 = request41.getHeaders();
        retrofit.client.Request request44 = restAdapter16.logAndReplaceRequest(request41);
        java.util.List<retrofit.client.Header> headerList45 = request44.getHeaders();
        retrofit.mime.TypedOutput typedOutput46 = request44.getBody();
        java.util.List<retrofit.client.Header> headerList47 = request44.getHeaders();
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("hi!", "", headerList47, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList47, typedOutput52);
        java.lang.String str54 = request53.getMethod();
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNull(typedOutput46);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05399");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder35.clientProvider;
        retrofit.RestAdapter.Builder builder38 = builder30.setClient(provider37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider45 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        builder43.clientProvider = provider48;
        builder39.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.Profiler profiler53 = null;
        builder51.profiler = profiler53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.Server server59 = null;
        builder55.server = server59;
        java.util.concurrent.Executor executor61 = builder55.callbackExecutor;
        builder51.callbackExecutor = executor61;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel80);
        retrofit.Profiler profiler82 = restAdapter81.profiler;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean84 = logLevel83.log();
        restAdapter81.logLevel = logLevel83;
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        restAdapter81.log = log86;
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter89 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log86, logLevel88);
        builder51.log = log86;
        retrofit.RestAdapter.Builder builder91 = builder39.setLog(log86);
        retrofit.converter.Converter converter92 = builder39.converter;
        retrofit.converter.Converter converter93 = builder39.converter;
        builder38.converter = converter93;
        retrofit.RestAdapter.LogLevel logLevel95 = builder38.logLevel;
        retrofit.Profiler profiler96 = builder38.profiler;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(converter92);
        org.junit.Assert.assertNotNull(converter93);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler96);
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05400");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("hi!");
        retrofit.Profiler profiler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setProfiler(profiler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05401");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        java.util.concurrent.Executor executor12 = builder0.httpExecutor;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider15 = null;
        builder14.clientProvider = provider15;
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.client.Client.Provider provider20 = builder18.clientProvider;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.client.Client.Provider provider23 = builder21.clientProvider;
        builder18.clientProvider = provider23;
        builder14.clientProvider = provider23;
        java.util.concurrent.Executor executor26 = builder14.httpExecutor;
        builder0.httpExecutor = executor26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider29 = null;
        builder28.clientProvider = provider29;
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.client.Client.Provider provider34 = builder32.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.client.Client.Provider provider37 = builder35.clientProvider;
        builder32.clientProvider = provider37;
        builder28.clientProvider = provider37;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.Profiler profiler42 = null;
        builder40.profiler = profiler42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.Profiler profiler46 = null;
        builder44.profiler = profiler46;
        retrofit.Server server48 = null;
        builder44.server = server48;
        java.util.concurrent.Executor executor50 = builder44.callbackExecutor;
        builder40.callbackExecutor = executor50;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel69);
        retrofit.Profiler profiler71 = restAdapter70.profiler;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean73 = logLevel72.log();
        restAdapter70.logLevel = logLevel72;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        restAdapter70.log = log75;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log75, logLevel77);
        builder40.log = log75;
        retrofit.RestAdapter.Builder builder80 = builder28.setLog(log75);
        retrofit.converter.Converter converter81 = builder28.converter;
        retrofit.RestAdapter.Builder builder82 = builder0.setConverter(converter81);
        retrofit.client.Client client83 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder84 = builder82.setClient(client83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(provider20);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(converter81);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05402");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Profiler profiler12 = null;
        restAdapter10.profiler = profiler12;
        retrofit.RestAdapter.Log log14 = restAdapter10.log;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.Profiler profiler17 = null;
        builder15.profiler = profiler17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.Profiler profiler21 = null;
        builder19.profiler = profiler21;
        retrofit.Server server23 = null;
        builder19.server = server23;
        java.util.concurrent.Executor executor25 = builder19.callbackExecutor;
        builder15.callbackExecutor = executor25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.Profiler profiler46 = restAdapter45.profiler;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean48 = logLevel47.log();
        restAdapter45.logLevel = logLevel47;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        restAdapter45.log = log50;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log50, logLevel52);
        builder15.log = log50;
        retrofit.RestAdapter.Log log55 = builder15.log;
        restAdapter10.log = log55;
        retrofit.converter.Converter converter57 = restAdapter10.converter;
        retrofit.Profiler profiler58 = restAdapter10.profiler;
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter10.new RestHandler();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(profiler58);
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05403");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.RestAdapter.Log log33 = builder30.log;
        retrofit.RequestInterceptor requestInterceptor34 = builder30.requestInterceptor;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        retrofit.Profiler profiler47 = restAdapter46.profiler;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean49 = logLevel48.log();
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        restAdapter46.log = log51;
        builder35.log = log51;
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = null;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder35.setLogLevel(logLevel63);
        java.util.concurrent.Executor executor66 = null;
        builder65.callbackExecutor = executor66;
        retrofit.ErrorHandler errorHandler68 = null;
        builder65.errorHandler = errorHandler68;
        builder65.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = builder65.log;
        retrofit.client.Client.Provider provider72 = builder65.clientProvider;
        builder30.clientProvider = provider72;
        retrofit.RequestInterceptor requestInterceptor74 = builder30.requestInterceptor;
        retrofit.Profiler profiler75 = builder30.profiler;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter76 = builder30.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(requestInterceptor34);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertNull(profiler75);
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05404");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.logLevel;
        retrofit.client.Client.Provider provider13 = restAdapter11.clientProvider;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.converter.Converter converter25 = restAdapter24.converter;
        retrofit.Profiler profiler26 = null;
        restAdapter24.profiler = profiler26;
        java.util.concurrent.Executor executor28 = restAdapter24.callbackExecutor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder29.clientProvider;
        retrofit.ErrorHandler errorHandler32 = builder29.errorHandler;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.client.Client.Provider provider35 = builder33.clientProvider;
        retrofit.ErrorHandler errorHandler36 = builder33.errorHandler;
        retrofit.RestAdapter.Builder builder37 = builder29.setErrorHandler(errorHandler36);
        retrofit.Server server38 = builder29.server;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.Profiler profiler41 = null;
        builder39.profiler = profiler41;
        retrofit.Server server43 = null;
        builder39.server = server43;
        java.util.concurrent.Executor executor45 = builder39.callbackExecutor;
        retrofit.converter.Converter converter46 = builder39.converter;
        retrofit.RestAdapter.Builder builder47 = builder29.setConverter(converter46);
        restAdapter24.converter = converter46;
        restAdapter11.converter = converter46;
        retrofit.client.Client.Provider provider50 = restAdapter11.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter11.new RestHandler();
        java.util.concurrent.Executor executor52 = restAdapter11.httpExecutor;
        retrofit.RestAdapter.Log log53 = restAdapter11.log;
        retrofit.ErrorHandler errorHandler54 = restAdapter11.errorHandler;
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = null;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel72);
        retrofit.Profiler profiler74 = restAdapter73.profiler;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean76 = logLevel75.log();
        restAdapter73.logLevel = logLevel75;
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        restAdapter73.log = log78;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log78, logLevel80);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider83 = null;
        builder82.clientProvider = provider83;
        builder82.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor86 = builder82.requestInterceptor;
        restAdapter81.requestInterceptor = requestInterceptor86;
        retrofit.RequestInterceptor requestInterceptor88 = restAdapter81.requestInterceptor;
        restAdapter11.requestInterceptor = requestInterceptor88;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(converter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertNull(errorHandler54);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(requestInterceptor88);
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05405");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        java.lang.String str11 = request10.getMethod();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList13, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.getBody();
        retrofit.mime.TypedOutput typedOutput19 = request17.getBody();
        java.lang.String str20 = request17.getUrl();
        java.util.List<retrofit.client.Header> headerList21 = request17.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(headerList21);
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05406");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.client.Client.Provider provider11 = null;
        restAdapter10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter10.requestInterceptor;
        retrofit.Profiler profiler17 = restAdapter10.profiler;
        retrofit.converter.Converter converter18 = restAdapter10.converter;
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter10.getLogLevel();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05407");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.client.Client.Provider provider21 = builder19.clientProvider;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.client.Client.Provider provider24 = builder22.clientProvider;
        builder19.clientProvider = provider24;
        builder15.clientProvider = provider24;
        java.util.concurrent.Executor executor27 = builder15.httpExecutor;
        java.util.concurrent.Executor executor28 = builder15.callbackExecutor;
        restAdapter10.callbackExecutor = executor28;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter10.logLevel;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean41 = logLevel40.log();
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        retrofit.converter.Converter converter50 = builder43.converter;
        restAdapter42.converter = converter50;
        restAdapter10.converter = converter50;
        java.lang.Throwable throwable53 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable53, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(converter50);
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05408");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.Server server3 = null;
        retrofit.client.Client.Provider provider4 = null;
        java.util.concurrent.Executor executor5 = null;
        java.util.concurrent.Executor executor6 = null;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        retrofit.converter.Converter converter8 = null;
        retrofit.Profiler profiler9 = null;
        retrofit.ErrorHandler errorHandler10 = null;
        retrofit.RestAdapter.Log log11 = null;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server3, provider4, executor5, executor6, requestInterceptor7, converter8, profiler9, errorHandler10, log11, logLevel12);
        retrofit.converter.Converter converter14 = restAdapter13.converter;
        retrofit.ErrorHandler errorHandler15 = restAdapter13.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter13.logLevel;
        builder0.logLevel = logLevel16;
        java.util.concurrent.Executor executor18 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider20 = null;
        builder19.clientProvider = provider20;
        java.util.concurrent.Executor executor22 = builder19.httpExecutor;
        retrofit.Profiler profiler23 = builder19.profiler;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.converter.Converter converter35 = restAdapter34.converter;
        retrofit.ErrorHandler errorHandler36 = restAdapter34.errorHandler;
        retrofit.Profiler profiler37 = null;
        restAdapter34.profiler = profiler37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider40 = null;
        builder39.clientProvider = provider40;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.converter.Converter converter53 = restAdapter52.converter;
        retrofit.ErrorHandler errorHandler54 = restAdapter52.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter52.logLevel;
        builder39.logLevel = logLevel55;
        restAdapter34.logLevel = logLevel55;
        retrofit.Server server58 = restAdapter34.server;
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter34.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder19.setLogLevel(logLevel59);
        retrofit.Server server61 = null;
        retrofit.client.Client.Provider provider62 = null;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.converter.Converter converter66 = null;
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Log log69 = null;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server61, provider62, executor63, executor64, requestInterceptor65, converter66, profiler67, errorHandler68, log69, logLevel70);
        retrofit.Profiler profiler72 = restAdapter71.profiler;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean74 = logLevel73.log();
        restAdapter71.logLevel = logLevel73;
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        restAdapter71.log = log76;
        retrofit.ErrorHandler errorHandler78 = null;
        restAdapter71.errorHandler = errorHandler78;
        retrofit.RequestInterceptor requestInterceptor80 = null;
        restAdapter71.requestInterceptor = requestInterceptor80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider83 = null;
        builder82.clientProvider = provider83;
        builder82.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor86 = builder82.requestInterceptor;
        restAdapter71.requestInterceptor = requestInterceptor86;
        builder60.requestInterceptor = requestInterceptor86;
        retrofit.RestAdapter.Builder builder89 = builder0.setRequestInterceptor(requestInterceptor86);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter90 = builder89.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(errorHandler54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05409");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.converter.Converter converter15 = restAdapter11.converter;
        retrofit.Profiler profiler16 = restAdapter11.profiler;
        retrofit.Profiler profiler17 = null;
        restAdapter11.profiler = profiler17;
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter11.requestInterceptor;
        retrofit.Server server20 = restAdapter11.server;
        java.util.concurrent.Executor executor21 = restAdapter11.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter11.getLogLevel();
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.Profiler profiler34 = restAdapter33.profiler;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean36 = logLevel35.log();
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        restAdapter33.log = log38;
        retrofit.ErrorHandler errorHandler40 = null;
        restAdapter33.errorHandler = errorHandler40;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        restAdapter33.requestInterceptor = requestInterceptor42;
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = null;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean54 = logLevel53.log();
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel53);
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter55.new RestHandler();
        retrofit.Server server57 = null;
        retrofit.client.Client.Provider provider58 = null;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.converter.Converter converter62 = null;
        retrofit.Profiler profiler63 = null;
        retrofit.ErrorHandler errorHandler64 = null;
        retrofit.RestAdapter.Log log65 = null;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean67 = logLevel66.log();
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server57, provider58, executor59, executor60, requestInterceptor61, converter62, profiler63, errorHandler64, log65, logLevel66);
        restAdapter55.logLevel = logLevel66;
        retrofit.converter.Converter converter70 = restAdapter55.converter;
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter55.getLogLevel();
        restAdapter33.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider73 = null;
        restAdapter33.clientProvider = provider73;
        retrofit.Profiler profiler75 = restAdapter33.profiler;
        retrofit.client.Header[] headerArray78 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList79 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList79, headerArray78);
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList79, typedOutput81);
        java.lang.String str83 = request82.getMethod();
        retrofit.client.Request request84 = restAdapter33.logAndReplaceRequest(request82);
        retrofit.mime.TypedOutput typedOutput85 = request84.getBody();
        java.lang.String str86 = request84.getUrl();
        java.lang.String str87 = request84.getMethod();
        retrofit.mime.TypedOutput typedOutput88 = request84.getBody();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request89 = restAdapter11.logAndReplaceRequest(request84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertNotNull(headerArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(request84);
        org.junit.Assert.assertNull(typedOutput85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertNull(typedOutput88);
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05410");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput17);
        java.lang.String str19 = request18.getUrl();
        java.lang.String str20 = request18.getUrl();
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "hi!", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", headerList21, typedOutput24);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(headerList21);
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05411");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = null;
        restAdapter10.setLogLevel(logLevel15);
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter10.requestInterceptor;
        retrofit.ErrorHandler errorHandler18 = restAdapter10.errorHandler;
        retrofit.ErrorHandler errorHandler19 = restAdapter10.errorHandler;
        retrofit.Server server20 = restAdapter10.server;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor17);
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(server20);
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05412");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.Profiler profiler13 = restAdapter12.profiler;
        java.util.concurrent.Executor executor14 = null;
        restAdapter12.httpExecutor = executor14;
        retrofit.Profiler profiler16 = null;
        restAdapter12.profiler = profiler16;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.getLogLevel();
        builder0.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel20 = builder0.logLevel;
        retrofit.converter.Converter converter21 = builder0.converter;
        retrofit.RestAdapter.Builder builder23 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler25 = restAdapter24.errorHandler;
        retrofit.ErrorHandler errorHandler26 = restAdapter24.errorHandler;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.converter.Converter converter38 = restAdapter37.converter;
        retrofit.Profiler profiler39 = null;
        restAdapter37.profiler = profiler39;
        java.util.concurrent.Executor executor41 = restAdapter37.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        retrofit.converter.Converter converter49 = builder42.converter;
        restAdapter37.converter = converter49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.Profiler profiler53 = null;
        builder51.profiler = profiler53;
        retrofit.Server server55 = null;
        builder51.server = server55;
        java.util.concurrent.Executor executor57 = builder51.callbackExecutor;
        restAdapter37.httpExecutor = executor57;
        restAdapter24.httpExecutor = executor57;
        builder23.httpExecutor = executor57;
        retrofit.Profiler profiler61 = builder23.profiler;
        retrofit.ErrorHandler errorHandler62 = builder23.errorHandler;
        retrofit.client.Client client63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder64 = builder23.setClient(client63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNull(errorHandler26);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertNotNull(errorHandler62);
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05413");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean26 = logLevel25.log();
        restAdapter23.logLevel = logLevel25;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        restAdapter23.log = log28;
        builder12.log = log28;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder12.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.client.Client.Provider provider45 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        builder43.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder50 = builder12.setClient(provider48);
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = null;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel60);
        retrofit.Profiler profiler62 = restAdapter61.profiler;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean64 = logLevel63.log();
        restAdapter61.logLevel = logLevel63;
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.Builder builder67 = builder50.setLogLevel(logLevel66);
        retrofit.client.Client.Provider provider68 = builder50.clientProvider;
        retrofit.RestAdapter.Log log69 = builder50.log;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.client.Client.Provider provider72 = builder70.clientProvider;
        retrofit.ErrorHandler errorHandler73 = builder70.errorHandler;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.client.Client.Provider provider76 = builder74.clientProvider;
        retrofit.ErrorHandler errorHandler77 = builder74.errorHandler;
        retrofit.RestAdapter.Builder builder78 = builder70.setErrorHandler(errorHandler77);
        retrofit.Server server79 = builder70.server;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.Profiler profiler82 = null;
        builder80.profiler = profiler82;
        retrofit.Server server84 = null;
        builder80.server = server84;
        java.util.concurrent.Executor executor86 = builder80.callbackExecutor;
        retrofit.converter.Converter converter87 = builder80.converter;
        retrofit.RestAdapter.Builder builder88 = builder70.setConverter(converter87);
        retrofit.converter.Converter converter89 = builder88.converter;
        builder50.converter = converter89;
        restAdapter11.converter = converter89;
        retrofit.Profiler profiler92 = restAdapter11.profiler;
        java.lang.Throwable throwable93 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable93, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNotNull(converter87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(converter89);
        org.junit.Assert.assertNull(profiler92);
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05414");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider13 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor14 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter10.requestInterceptor;
        retrofit.Server server17 = restAdapter10.server;
        retrofit.converter.Converter converter18 = restAdapter10.converter;
        retrofit.RestAdapter.Log log19 = restAdapter10.log;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider21 = null;
        builder20.clientProvider = provider21;
        builder20.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor24 = builder20.requestInterceptor;
        retrofit.client.Client.Provider provider25 = null;
        builder20.clientProvider = provider25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.Profiler profiler38 = restAdapter37.profiler;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter37.logLevel = logLevel39;
        retrofit.Server server42 = null;
        restAdapter37.server = server42;
        retrofit.ErrorHandler errorHandler44 = restAdapter37.errorHandler;
        retrofit.RestAdapter.Log log45 = restAdapter37.log;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        retrofit.converter.Converter converter49 = null;
        builder46.converter = converter49;
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        java.util.concurrent.Executor executor55 = builder52.httpExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        builder52.httpExecutor = executor62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider66 = null;
        builder65.clientProvider = provider66;
        java.util.concurrent.Executor executor68 = builder65.httpExecutor;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.Profiler profiler71 = null;
        builder69.profiler = profiler71;
        retrofit.Server server73 = null;
        builder69.server = server73;
        java.util.concurrent.Executor executor75 = builder69.callbackExecutor;
        builder65.httpExecutor = executor75;
        builder64.callbackExecutor = executor75;
        builder52.callbackExecutor = executor75;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider80 = null;
        builder79.clientProvider = provider80;
        java.util.concurrent.Executor executor82 = builder79.httpExecutor;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        builder83.ensureSaneDefaults();
        retrofit.Profiler profiler85 = null;
        builder83.profiler = profiler85;
        retrofit.Server server87 = null;
        builder83.server = server87;
        java.util.concurrent.Executor executor89 = builder83.callbackExecutor;
        builder79.httpExecutor = executor89;
        java.util.concurrent.Executor executor91 = builder79.httpExecutor;
        retrofit.RestAdapter.Builder builder92 = builder46.setExecutors(executor75, executor91);
        retrofit.ErrorHandler errorHandler93 = builder92.errorHandler;
        restAdapter37.errorHandler = errorHandler93;
        retrofit.RestAdapter.Builder builder95 = builder20.setErrorHandler(errorHandler93);
        restAdapter10.errorHandler = errorHandler93;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(errorHandler44);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNotNull(executor91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(errorHandler93);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05415");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.lang.String str10 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        java.lang.String str12 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05416");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        builder30.requestInterceptor = requestInterceptor35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = null;
        builder67.callbackExecutor = executor68;
        retrofit.ErrorHandler errorHandler70 = null;
        builder67.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.Profiler profiler74 = null;
        builder72.profiler = profiler74;
        retrofit.Server server76 = null;
        builder72.server = server76;
        java.util.concurrent.Executor executor78 = builder72.callbackExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        builder72.clientProvider = provider81;
        builder67.clientProvider = provider81;
        builder30.clientProvider = provider81;
        java.util.concurrent.Executor executor85 = builder30.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel86 = builder30.logLevel;
        retrofit.Server server87 = builder30.server;
        retrofit.Server server88 = builder30.server;
        java.util.concurrent.Executor executor89 = builder30.httpExecutor;
        java.util.concurrent.Executor executor90 = builder30.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor91 = builder30.requestInterceptor;
        java.util.concurrent.Executor executor92 = builder30.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server87);
        org.junit.Assert.assertNull(server88);
        org.junit.Assert.assertNull(executor89);
        org.junit.Assert.assertNull(executor90);
        org.junit.Assert.assertNull(requestInterceptor91);
        org.junit.Assert.assertNull(executor92);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05417");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server11 = restAdapter10.server;
        java.util.concurrent.Executor executor12 = restAdapter10.httpExecutor;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler14 = restAdapter13.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.Profiler profiler16 = restAdapter13.profiler;
        retrofit.Server server17 = restAdapter13.server;
        retrofit.ErrorHandler errorHandler18 = restAdapter13.errorHandler;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        builder19.log = log35;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.RestAdapter.Builder builder49 = builder19.setLogLevel(logLevel47);
        java.util.concurrent.Executor executor50 = null;
        builder49.callbackExecutor = executor50;
        retrofit.converter.Converter converter52 = builder49.converter;
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.converter.Converter converter64 = restAdapter63.converter;
        retrofit.ErrorHandler errorHandler65 = restAdapter63.errorHandler;
        retrofit.Profiler profiler66 = null;
        restAdapter63.profiler = profiler66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.client.Client.Provider provider70 = builder68.clientProvider;
        retrofit.ErrorHandler errorHandler71 = builder68.errorHandler;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        retrofit.ErrorHandler errorHandler75 = builder72.errorHandler;
        retrofit.RestAdapter.Builder builder76 = builder68.setErrorHandler(errorHandler75);
        restAdapter63.errorHandler = errorHandler75;
        builder49.errorHandler = errorHandler75;
        retrofit.client.Client.Provider provider79 = builder49.clientProvider;
        retrofit.ErrorHandler errorHandler80 = builder49.errorHandler;
        restAdapter13.errorHandler = errorHandler80;
        restAdapter10.errorHandler = errorHandler80;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(errorHandler65);
        org.junit.Assert.assertNotNull(provider70);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(provider79);
        org.junit.Assert.assertNotNull(errorHandler80);
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05418");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        java.lang.String str14 = request12.getMethod();
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList15, typedOutput20);
        java.lang.String str22 = request21.getMethod();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05419");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        retrofit.Profiler profiler12 = null;
        builder0.profiler = profiler12;
        retrofit.Profiler profiler14 = null;
        builder0.profiler = profiler14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider17 = null;
        builder16.clientProvider = provider17;
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.client.Client.Provider provider22 = builder20.clientProvider;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.client.Client.Provider provider25 = builder23.clientProvider;
        builder20.clientProvider = provider25;
        builder16.clientProvider = provider25;
        java.util.concurrent.Executor executor28 = builder16.httpExecutor;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.ErrorHandler errorHandler41 = restAdapter39.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider45 = null;
        builder44.clientProvider = provider45;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.converter.Converter converter58 = restAdapter57.converter;
        retrofit.ErrorHandler errorHandler59 = restAdapter57.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter57.logLevel;
        builder44.logLevel = logLevel60;
        restAdapter39.setLogLevel(logLevel60);
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.Profiler profiler66 = null;
        builder64.profiler = profiler66;
        retrofit.Server server68 = null;
        builder64.server = server68;
        java.util.concurrent.Executor executor70 = builder64.callbackExecutor;
        restAdapter63.callbackExecutor = executor70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.Profiler profiler74 = null;
        builder72.profiler = profiler74;
        retrofit.Server server76 = null;
        builder72.server = server76;
        java.util.concurrent.Executor executor78 = builder72.callbackExecutor;
        retrofit.converter.Converter converter79 = builder72.converter;
        restAdapter63.converter = converter79;
        restAdapter39.converter = converter79;
        retrofit.RestAdapter.Builder builder82 = builder16.setConverter(converter79);
        retrofit.converter.Converter converter83 = builder16.converter;
        retrofit.RestAdapter.Builder builder84 = builder0.setConverter(converter83);
        retrofit.Profiler profiler85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder84.setProfiler(profiler85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNotNull(provider25);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNull(errorHandler41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(converter79);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(converter83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05420");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor7 = builder0.httpExecutor;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.converter.Converter converter20 = null;
        restAdapter19.converter = converter20;
        retrofit.RestAdapter.LogLevel logLevel22 = null;
        restAdapter19.setLogLevel(logLevel22);
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.Profiler profiler35 = restAdapter34.profiler;
        retrofit.ErrorHandler errorHandler36 = restAdapter34.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.setLogLevel(logLevel37);
        restAdapter19.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder40 = builder0.setLogLevel(logLevel37);
        retrofit.RequestInterceptor requestInterceptor41 = builder40.requestInterceptor;
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(requestInterceptor41);
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05421");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.Server server7 = null;
        builder0.server = server7;
        org.junit.Assert.assertNotNull(executor6);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05422");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel38);
        restAdapter10.log = log36;
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter10.logLevel;
        java.util.concurrent.Executor executor42 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter10.getLogLevel();
        retrofit.ErrorHandler errorHandler44 = restAdapter10.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor46 = restAdapter10.httpExecutor;
        retrofit.client.Response response48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response50 = restAdapter10.logAndReplaceResponse("", response48, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler44);
        org.junit.Assert.assertNull(executor46);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05423");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter11.new RestHandler();
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel36);
        retrofit.converter.Converter converter38 = restAdapter37.converter;
        retrofit.Profiler profiler39 = null;
        restAdapter37.profiler = profiler39;
        java.util.concurrent.Executor executor41 = restAdapter37.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        retrofit.converter.Converter converter49 = builder42.converter;
        restAdapter37.converter = converter49;
        restAdapter11.converter = converter49;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        retrofit.converter.Converter converter55 = null;
        builder52.converter = converter55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.client.Client.Provider provider59 = builder57.clientProvider;
        retrofit.ErrorHandler errorHandler60 = builder57.errorHandler;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.client.Client.Provider provider63 = builder61.clientProvider;
        retrofit.ErrorHandler errorHandler64 = builder61.errorHandler;
        retrofit.RestAdapter.Builder builder65 = builder57.setErrorHandler(errorHandler64);
        builder52.errorHandler = errorHandler64;
        restAdapter11.errorHandler = errorHandler64;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider69 = null;
        builder68.clientProvider = provider69;
        builder68.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.client.Client.Provider provider77 = builder75.clientProvider;
        builder72.clientProvider = provider77;
        builder68.clientProvider = provider77;
        java.util.concurrent.Executor executor80 = builder68.httpExecutor;
        java.util.concurrent.Executor executor81 = builder68.callbackExecutor;
        restAdapter11.httpExecutor = executor81;
        java.util.concurrent.Executor executor83 = restAdapter11.httpExecutor;
        retrofit.converter.Converter converter84 = restAdapter11.converter;
        java.lang.Throwable throwable85 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter11.logException(throwable85, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNotNull(provider59);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(executor83);
        org.junit.Assert.assertNotNull(converter84);
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05424");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider7 = null;
        builder6.clientProvider = provider7;
        java.util.concurrent.Executor executor9 = builder6.httpExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        builder6.httpExecutor = executor16;
        builder5.callbackExecutor = executor16;
        builder0.callbackExecutor = executor16;
        retrofit.Profiler profiler20 = builder0.profiler;
        java.util.concurrent.Executor executor21 = builder0.callbackExecutor;
        retrofit.Profiler profiler22 = builder0.profiler;
        retrofit.Profiler profiler23 = null;
        builder0.profiler = profiler23;
        retrofit.Profiler profiler25 = null;
        builder0.profiler = profiler25;
        retrofit.RestAdapter.LogLevel logLevel27 = builder0.logLevel;
        retrofit.RestAdapter.Log log28 = builder0.log;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter39.log = log44;
        retrofit.ErrorHandler errorHandler46 = null;
        restAdapter39.errorHandler = errorHandler46;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter39.logLevel = logLevel48;
        retrofit.Profiler profiler50 = restAdapter39.profiler;
        retrofit.Server server51 = null;
        restAdapter39.server = server51;
        retrofit.RestAdapter.Log log53 = restAdapter39.log;
        builder0.log = log53;
        log53.log("");
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertNotNull(log53);
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05425");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.Profiler profiler5 = null;
        builder3.profiler = profiler5;
        retrofit.Server server7 = null;
        builder3.server = server7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.Profiler profiler11 = null;
        builder9.profiler = profiler11;
        retrofit.Server server13 = null;
        builder9.server = server13;
        java.util.concurrent.Executor executor15 = builder9.callbackExecutor;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider17 = null;
        builder16.clientProvider = provider17;
        java.util.concurrent.Executor executor19 = builder16.httpExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.Profiler profiler22 = null;
        builder20.profiler = profiler22;
        retrofit.Server server24 = null;
        builder20.server = server24;
        java.util.concurrent.Executor executor26 = builder20.callbackExecutor;
        builder16.httpExecutor = executor26;
        retrofit.RestAdapter.LogLevel logLevel28 = builder16.logLevel;
        builder9.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.Profiler profiler32 = null;
        builder30.profiler = profiler32;
        retrofit.Server server34 = null;
        builder30.server = server34;
        retrofit.client.Client.Provider provider36 = builder30.clientProvider;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean51 = logLevel50.log();
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        restAdapter48.log = log53;
        builder37.log = log53;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.RestAdapter.Builder builder67 = builder37.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = null;
        builder67.callbackExecutor = executor68;
        retrofit.converter.Converter converter70 = builder67.converter;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider72 = null;
        builder71.clientProvider = provider72;
        builder71.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor75 = builder71.requestInterceptor;
        builder67.requestInterceptor = requestInterceptor75;
        retrofit.Server server77 = null;
        builder67.server = server77;
        retrofit.RequestInterceptor requestInterceptor79 = builder67.requestInterceptor;
        builder30.requestInterceptor = requestInterceptor79;
        retrofit.RestAdapter.Builder builder81 = builder9.setRequestInterceptor(requestInterceptor79);
        retrofit.RequestInterceptor requestInterceptor82 = builder9.requestInterceptor;
        retrofit.RestAdapter.Builder builder83 = builder3.setRequestInterceptor(requestInterceptor82);
        retrofit.RestAdapter.Log log84 = builder83.log;
        retrofit.converter.Converter converter85 = null;
        builder83.converter = converter85;
        java.util.concurrent.Executor executor87 = builder83.callbackExecutor;
        restAdapter0.httpExecutor = executor87;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(executor87);
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05426");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel27);
        retrofit.converter.Converter converter29 = restAdapter28.converter;
        retrofit.ErrorHandler errorHandler30 = restAdapter28.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter28.logLevel;
        builder15.logLevel = logLevel31;
        restAdapter10.setLogLevel(logLevel31);
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        restAdapter34.callbackExecutor = executor41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        retrofit.converter.Converter converter50 = builder43.converter;
        restAdapter34.converter = converter50;
        restAdapter10.converter = converter50;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = builder53.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder56 = builder53.setLogLevel(logLevel55);
        restAdapter10.setLogLevel(logLevel55);
        retrofit.ErrorHandler errorHandler58 = restAdapter10.errorHandler;
        retrofit.ErrorHandler errorHandler59 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log60 = null;
        restAdapter10.log = log60;
        retrofit.client.Client.Provider provider62 = restAdapter10.clientProvider;
        retrofit.Profiler profiler63 = restAdapter10.profiler;
        retrofit.client.Header[] headerArray68 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList69 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList69, headerArray68);
        retrofit.mime.TypedOutput typedOutput71 = null;
        retrofit.client.Request request72 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList69, typedOutput71);
        java.util.List<retrofit.client.Header> headerList73 = request72.getHeaders();
        retrofit.mime.TypedOutput typedOutput74 = null;
        retrofit.client.Request request75 = new retrofit.client.Request("", "hi!", headerList73, typedOutput74);
        retrofit.mime.TypedOutput typedOutput76 = request75.getBody();
        java.util.List<retrofit.client.Header> headerList77 = request75.getHeaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request78 = restAdapter10.logAndReplaceRequest(request75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(converter50);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(errorHandler58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNotNull(headerArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNull(typedOutput76);
        org.junit.Assert.assertNotNull(headerList77);
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05427");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log1;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.Profiler profiler7 = null;
        restAdapter0.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = null;
        retrofit.client.Client.Provider provider11 = null;
        java.util.concurrent.Executor executor12 = null;
        java.util.concurrent.Executor executor13 = null;
        retrofit.RequestInterceptor requestInterceptor14 = null;
        retrofit.converter.Converter converter15 = null;
        retrofit.Profiler profiler16 = null;
        retrofit.ErrorHandler errorHandler17 = null;
        retrofit.RestAdapter.Log log18 = null;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server10, provider11, executor12, executor13, requestInterceptor14, converter15, profiler16, errorHandler17, log18, logLevel19);
        retrofit.Profiler profiler21 = restAdapter20.profiler;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        restAdapter20.logLevel = logLevel22;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        restAdapter20.log = log25;
        builder9.log = log25;
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = null;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel37);
        retrofit.RestAdapter.Builder builder39 = builder9.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.RestAdapter.Log log42 = builder41.log;
        log42.log("hi!");
        restAdapter0.log = log42;
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor47 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Log log48 = restAdapter0.log;
        retrofit.client.Response response50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response52 = restAdapter0.logAndReplaceResponse("", response50, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(log48);
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05428");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter11.logLevel;
        retrofit.Profiler profiler27 = null;
        restAdapter11.profiler = profiler27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider30 = null;
        builder29.clientProvider = provider30;
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.client.Client.Provider provider35 = builder33.clientProvider;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.client.Client.Provider provider38 = builder36.clientProvider;
        builder33.clientProvider = provider38;
        builder29.clientProvider = provider38;
        java.util.concurrent.Executor executor41 = builder29.httpExecutor;
        restAdapter11.httpExecutor = executor41;
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider45 = null;
        builder44.clientProvider = provider45;
        retrofit.converter.Converter converter47 = null;
        builder44.converter = converter47;
        retrofit.client.Client.Provider provider49 = builder44.clientProvider;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.Profiler profiler52 = null;
        builder50.profiler = profiler52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.Profiler profiler56 = null;
        builder54.profiler = profiler56;
        retrofit.Server server58 = null;
        builder54.server = server58;
        java.util.concurrent.Executor executor60 = builder54.callbackExecutor;
        builder50.callbackExecutor = executor60;
        builder44.callbackExecutor = executor60;
        retrofit.RestAdapter.LogLevel logLevel63 = builder44.logLevel;
        retrofit.RestAdapter.LogLevel logLevel64 = builder44.logLevel;
        retrofit.Profiler profiler65 = null;
        builder44.profiler = profiler65;
        java.lang.reflect.Method method67 = null;
        java.lang.Object[] objArray68 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = restHandler43.invoke((java.lang.Object) profiler65, method67, objArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(provider38);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05429");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = null;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel42);
        retrofit.converter.Converter converter44 = restAdapter43.converter;
        retrofit.Profiler profiler45 = null;
        restAdapter43.profiler = profiler45;
        java.util.concurrent.Executor executor47 = restAdapter43.callbackExecutor;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Server server52 = null;
        builder48.server = server52;
        java.util.concurrent.Executor executor54 = builder48.callbackExecutor;
        retrofit.converter.Converter converter55 = builder48.converter;
        restAdapter43.converter = converter55;
        builder30.converter = converter55;
        builder30.ensureSaneDefaults();
        retrofit.converter.Converter converter59 = null;
        builder30.converter = converter59;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(converter55);
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05430");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.getMethod();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05431");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider3 = null;
        builder2.clientProvider = provider3;
        builder2.ensureSaneDefaults();
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = null;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel15);
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean19 = logLevel18.log();
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log21;
        builder2.log = log21;
        retrofit.RestAdapter.Builder builder24 = builder0.setLog(log21);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder25.clientProvider;
        retrofit.ErrorHandler errorHandler28 = builder25.errorHandler;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.client.Client.Provider provider31 = builder29.clientProvider;
        retrofit.ErrorHandler errorHandler32 = builder29.errorHandler;
        retrofit.RestAdapter.Builder builder33 = builder25.setErrorHandler(errorHandler32);
        retrofit.Server server34 = builder25.server;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.converter.Converter converter42 = builder35.converter;
        retrofit.RestAdapter.Builder builder43 = builder25.setConverter(converter42);
        retrofit.converter.Converter converter44 = builder43.converter;
        retrofit.RestAdapter.Builder builder45 = builder0.setConverter(converter44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        retrofit.converter.Converter converter49 = null;
        builder46.converter = converter49;
        builder46.ensureSaneDefaults();
        retrofit.Server server52 = builder46.server;
        retrofit.RequestInterceptor requestInterceptor53 = builder46.requestInterceptor;
        retrofit.RestAdapter.Builder builder54 = builder0.setRequestInterceptor(requestInterceptor53);
        java.util.concurrent.Executor executor55 = builder54.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(converter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05432");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.Profiler profiler4 = builder0.profiler;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Log log13 = null;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log13, logLevel14);
        retrofit.converter.Converter converter16 = restAdapter15.converter;
        retrofit.ErrorHandler errorHandler17 = restAdapter15.errorHandler;
        retrofit.Profiler profiler18 = null;
        restAdapter15.profiler = profiler18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider21 = null;
        builder20.clientProvider = provider21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.converter.Converter converter34 = restAdapter33.converter;
        retrofit.ErrorHandler errorHandler35 = restAdapter33.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter33.logLevel;
        builder20.logLevel = logLevel36;
        restAdapter15.logLevel = logLevel36;
        retrofit.Server server39 = restAdapter15.server;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter15.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder0.setLogLevel(logLevel40);
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler43 = restAdapter42.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.Profiler profiler45 = restAdapter42.profiler;
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = null;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean56 = logLevel55.log();
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel55);
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log59 = null;
        restAdapter57.log = log59;
        retrofit.Profiler profiler61 = null;
        restAdapter57.profiler = profiler61;
        retrofit.Profiler profiler63 = null;
        restAdapter57.profiler = profiler63;
        retrofit.Server server65 = null;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel74);
        retrofit.Profiler profiler76 = restAdapter75.profiler;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean78 = logLevel77.log();
        restAdapter75.logLevel = logLevel77;
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        restAdapter75.log = log80;
        retrofit.ErrorHandler errorHandler82 = null;
        restAdapter75.errorHandler = errorHandler82;
        retrofit.RequestInterceptor requestInterceptor84 = null;
        restAdapter75.requestInterceptor = requestInterceptor84;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider87 = null;
        builder86.clientProvider = provider87;
        builder86.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor90 = builder86.requestInterceptor;
        restAdapter75.requestInterceptor = requestInterceptor90;
        restAdapter57.requestInterceptor = requestInterceptor90;
        restAdapter42.requestInterceptor = requestInterceptor90;
        retrofit.RestAdapter.Builder builder94 = builder41.setRequestInterceptor(requestInterceptor90);
        retrofit.client.Client.Provider provider95 = builder94.clientProvider;
        retrofit.RestAdapter.Builder builder97 = builder94.setServer("hi!");
        retrofit.ErrorHandler errorHandler98 = builder94.errorHandler;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(errorHandler35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(errorHandler43);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertNull(errorHandler98);
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05433");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log13 = null;
        restAdapter11.log = log13;
        retrofit.converter.Converter converter15 = restAdapter11.converter;
        retrofit.Profiler profiler16 = restAdapter11.profiler;
        retrofit.Profiler profiler17 = null;
        restAdapter11.profiler = profiler17;
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter11.requestInterceptor;
        retrofit.Server server20 = restAdapter11.server;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.Profiler profiler23 = null;
        builder21.profiler = profiler23;
        retrofit.Server server25 = null;
        builder21.server = server25;
        retrofit.client.Client.Provider provider27 = builder21.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter39.log = log44;
        builder28.log = log44;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder28.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor59 = null;
        builder58.callbackExecutor = executor59;
        retrofit.converter.Converter converter61 = builder58.converter;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider63 = null;
        builder62.clientProvider = provider63;
        builder62.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor66 = builder62.requestInterceptor;
        builder58.requestInterceptor = requestInterceptor66;
        retrofit.Server server68 = null;
        builder58.server = server68;
        retrofit.RequestInterceptor requestInterceptor70 = builder58.requestInterceptor;
        builder21.requestInterceptor = requestInterceptor70;
        retrofit.ErrorHandler errorHandler72 = builder21.errorHandler;
        java.util.concurrent.Executor executor73 = builder21.httpExecutor;
        restAdapter11.httpExecutor = executor73;
        retrofit.client.Client.Provider provider75 = restAdapter11.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNull(provider75);
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05434");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel19;
        retrofit.RestAdapter.Log log21 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter10.new RestHandler();
        retrofit.Profiler profiler24 = null;
        restAdapter10.profiler = profiler24;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter10.new RestHandler();
        retrofit.converter.Converter converter27 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter27);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05435");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.converter.Converter converter33 = builder30.converter;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.converter.Converter converter45 = restAdapter44.converter;
        retrofit.ErrorHandler errorHandler46 = restAdapter44.errorHandler;
        retrofit.Profiler profiler47 = null;
        restAdapter44.profiler = profiler47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.client.Client.Provider provider51 = builder49.clientProvider;
        retrofit.ErrorHandler errorHandler52 = builder49.errorHandler;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder53.clientProvider;
        retrofit.ErrorHandler errorHandler56 = builder53.errorHandler;
        retrofit.RestAdapter.Builder builder57 = builder49.setErrorHandler(errorHandler56);
        restAdapter44.errorHandler = errorHandler56;
        builder30.errorHandler = errorHandler56;
        retrofit.client.Client.Provider provider60 = builder30.clientProvider;
        builder30.ensureSaneDefaults();
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(errorHandler46);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(provider60);
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05436");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = builder0.httpExecutor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(executor7);
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05437");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.lang.String str13 = request10.getUrl();
        java.lang.String str14 = request10.getUrl();
        java.util.List<retrofit.client.Header> headerList15 = request10.getHeaders();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05438");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider7 = null;
        builder6.clientProvider = provider7;
        java.util.concurrent.Executor executor9 = builder6.httpExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        builder6.httpExecutor = executor16;
        builder5.callbackExecutor = executor16;
        builder0.callbackExecutor = executor16;
        retrofit.Profiler profiler20 = builder0.profiler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.Profiler profiler34 = restAdapter33.profiler;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean36 = logLevel35.log();
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        restAdapter33.log = log38;
        builder22.log = log38;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.RestAdapter.Builder builder52 = builder22.setLogLevel(logLevel50);
        java.util.concurrent.Executor executor53 = null;
        builder52.callbackExecutor = executor53;
        retrofit.RestAdapter.Log log55 = builder52.log;
        retrofit.RequestInterceptor requestInterceptor56 = builder52.requestInterceptor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.Profiler profiler69 = restAdapter68.profiler;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean71 = logLevel70.log();
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        restAdapter68.log = log73;
        builder57.log = log73;
        retrofit.Server server76 = null;
        retrofit.client.Client.Provider provider77 = null;
        java.util.concurrent.Executor executor78 = null;
        java.util.concurrent.Executor executor79 = null;
        retrofit.RequestInterceptor requestInterceptor80 = null;
        retrofit.converter.Converter converter81 = null;
        retrofit.Profiler profiler82 = null;
        retrofit.ErrorHandler errorHandler83 = null;
        retrofit.RestAdapter.Log log84 = null;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server76, provider77, executor78, executor79, requestInterceptor80, converter81, profiler82, errorHandler83, log84, logLevel85);
        retrofit.RestAdapter.Builder builder87 = builder57.setLogLevel(logLevel85);
        java.util.concurrent.Executor executor88 = null;
        builder87.callbackExecutor = executor88;
        retrofit.ErrorHandler errorHandler90 = null;
        builder87.errorHandler = errorHandler90;
        builder87.ensureSaneDefaults();
        retrofit.RestAdapter.Log log93 = builder87.log;
        retrofit.client.Client.Provider provider94 = builder87.clientProvider;
        builder52.clientProvider = provider94;
        retrofit.RestAdapter.Builder builder96 = builder0.setClient(provider94);
        retrofit.Server server97 = builder96.server;
        retrofit.RequestInterceptor requestInterceptor98 = builder96.requestInterceptor;
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(requestInterceptor56);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertNotNull(provider94);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNull(server97);
        org.junit.Assert.assertNotNull(requestInterceptor98);
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05439");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel19;
        retrofit.Profiler profiler21 = restAdapter10.profiler;
        retrofit.Server server22 = restAdapter10.server;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel33);
        retrofit.Profiler profiler35 = restAdapter34.profiler;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean37 = logLevel36.log();
        restAdapter34.logLevel = logLevel36;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        restAdapter34.log = log39;
        builder23.log = log39;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = null;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder23.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider58 = null;
        builder57.clientProvider = provider58;
        java.util.concurrent.Executor executor60 = builder57.httpExecutor;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.Profiler profiler63 = null;
        builder61.profiler = profiler63;
        retrofit.Server server65 = null;
        builder61.server = server65;
        java.util.concurrent.Executor executor67 = builder61.callbackExecutor;
        builder57.httpExecutor = executor67;
        builder56.callbackExecutor = executor67;
        builder53.httpExecutor = executor67;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel80);
        retrofit.Profiler profiler82 = restAdapter81.profiler;
        retrofit.ErrorHandler errorHandler83 = restAdapter81.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter81.setLogLevel(logLevel84);
        retrofit.Server server86 = restAdapter81.server;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter81.getLogLevel();
        retrofit.RestAdapter.Builder builder88 = builder53.setLogLevel(logLevel87);
        retrofit.Server server89 = builder53.server;
        restAdapter10.server = server89;
        java.util.concurrent.Executor executor91 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor92 = restAdapter10.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler82);
        org.junit.Assert.assertNull(errorHandler83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(server89);
        org.junit.Assert.assertNull(executor91);
        org.junit.Assert.assertNull(executor92);
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05440");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        restAdapter10.server = server19;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter10.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor22 = restAdapter10.requestInterceptor;
        retrofit.Profiler profiler23 = restAdapter10.profiler;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(requestInterceptor22);
        org.junit.Assert.assertNull(profiler23);
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05441");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter10.logLevel = logLevel19;
        retrofit.Profiler profiler21 = restAdapter10.profiler;
        retrofit.Server server22 = null;
        restAdapter10.server = server22;
        retrofit.RestAdapter.Log log24 = restAdapter10.log;
        retrofit.client.Header[] headerArray29 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList30 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList30, headerArray29);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList30, typedOutput32);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList30, typedOutput34);
        retrofit.client.Request request36 = restAdapter10.logAndReplaceRequest(request35);
        java.lang.String str37 = request35.getUrl();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(headerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(request36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05442");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider14 = null;
        builder13.clientProvider = provider14;
        builder13.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor17 = builder13.requestInterceptor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider20 = null;
        builder19.clientProvider = provider20;
        java.util.concurrent.Executor executor22 = builder19.httpExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.Profiler profiler25 = null;
        builder23.profiler = profiler25;
        retrofit.Server server27 = null;
        builder23.server = server27;
        java.util.concurrent.Executor executor29 = builder23.callbackExecutor;
        builder19.httpExecutor = executor29;
        builder18.callbackExecutor = executor29;
        builder13.callbackExecutor = executor29;
        restAdapter10.callbackExecutor = executor29;
        retrofit.client.Client.Provider provider34 = restAdapter10.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter10.logLevel;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05443");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.client.Client.Provider provider33 = builder30.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(provider33);
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05444");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel37);
        builder0.log = log35;
        retrofit.Profiler profiler40 = builder0.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = builder0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel42 = builder0.logLevel;
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05445");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        java.lang.String str12 = request10.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request10.getBody();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05446");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.ErrorHandler errorHandler33 = restAdapter31.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider37 = null;
        builder36.clientProvider = provider37;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.converter.Converter converter50 = restAdapter49.converter;
        retrofit.ErrorHandler errorHandler51 = restAdapter49.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter49.logLevel;
        builder36.logLevel = logLevel52;
        restAdapter31.setLogLevel(logLevel52);
        restAdapter10.logLevel = logLevel52;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel65);
        retrofit.converter.Converter converter67 = restAdapter66.converter;
        retrofit.ErrorHandler errorHandler68 = restAdapter66.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter66.logLevel;
        restAdapter10.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider71 = restAdapter10.clientProvider;
        retrofit.client.Response response73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response75 = restAdapter10.logAndReplaceResponse("", response73, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNull(errorHandler68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider71);
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05447");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.ErrorHandler errorHandler25 = restAdapter23.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.setLogLevel(logLevel26);
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = null;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel37);
        retrofit.Profiler profiler39 = restAdapter38.profiler;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean41 = logLevel40.log();
        restAdapter38.logLevel = logLevel40;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        restAdapter38.log = log43;
        restAdapter23.log = log43;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.Profiler profiler49 = null;
        builder47.profiler = profiler49;
        retrofit.Server server51 = null;
        builder47.server = server51;
        java.util.concurrent.Executor executor53 = builder47.callbackExecutor;
        restAdapter46.callbackExecutor = executor53;
        restAdapter23.httpExecutor = executor53;
        restAdapter10.httpExecutor = executor53;
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.Log log58 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel59 = null;
        restAdapter10.setLogLevel(logLevel59);
        retrofit.converter.Converter converter61 = restAdapter10.converter;
        retrofit.converter.Converter converter62 = restAdapter10.converter;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNull(requestInterceptor57);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(converter62);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05448");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel37);
        builder0.log = log35;
        retrofit.RequestInterceptor requestInterceptor40 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler41 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel42 = builder0.logLevel;
        retrofit.RequestInterceptor requestInterceptor43 = builder0.requestInterceptor;
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor43);
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05449");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.Server server12 = restAdapter10.server;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean34 = logLevel33.log();
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel38);
        restAdapter10.log = log36;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.client.Client.Provider provider52 = null;
        restAdapter51.clientProvider = provider52;
        java.util.concurrent.Executor executor54 = restAdapter51.callbackExecutor;
        retrofit.client.Client.Provider provider55 = restAdapter51.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter51.logLevel;
        restAdapter10.setLogLevel(logLevel56);
        retrofit.Server server58 = restAdapter10.server;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel68);
        retrofit.converter.Converter converter70 = restAdapter69.converter;
        retrofit.Profiler profiler71 = null;
        restAdapter69.profiler = profiler71;
        java.util.concurrent.Executor executor73 = restAdapter69.callbackExecutor;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.Profiler profiler76 = null;
        builder74.profiler = profiler76;
        retrofit.Server server78 = null;
        builder74.server = server78;
        java.util.concurrent.Executor executor80 = builder74.callbackExecutor;
        retrofit.converter.Converter converter81 = builder74.converter;
        restAdapter69.converter = converter81;
        restAdapter10.converter = converter81;
        retrofit.Profiler profiler84 = null;
        restAdapter10.profiler = profiler84;
        retrofit.converter.Converter converter86 = restAdapter10.converter;
        retrofit.Profiler profiler87 = null;
        restAdapter10.profiler = profiler87;
        retrofit.RequestInterceptor requestInterceptor89 = restAdapter10.requestInterceptor;
        retrofit.ErrorHandler errorHandler90 = restAdapter10.errorHandler;
        retrofit.client.Client.Provider provider91 = restAdapter10.clientProvider;
        retrofit.client.Client.Provider provider92 = restAdapter10.clientProvider;
        retrofit.Profiler profiler93 = restAdapter10.profiler;
        retrofit.client.Response response95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response97 = restAdapter10.logAndReplaceResponse("hi!", response95, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(converter81);
        org.junit.Assert.assertNotNull(converter86);
        org.junit.Assert.assertNull(requestInterceptor89);
        org.junit.Assert.assertNull(errorHandler90);
        org.junit.Assert.assertNull(provider91);
        org.junit.Assert.assertNull(provider92);
        org.junit.Assert.assertNull(profiler93);
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05450");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.RestAdapter.Log log4 = builder0.log;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.ErrorHandler errorHandler6 = builder0.errorHandler;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = null;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel16);
        retrofit.converter.Converter converter18 = restAdapter17.converter;
        retrofit.Profiler profiler19 = null;
        restAdapter17.profiler = profiler19;
        java.util.concurrent.Executor executor21 = restAdapter17.callbackExecutor;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.Profiler profiler24 = null;
        builder22.profiler = profiler24;
        retrofit.Server server26 = null;
        builder22.server = server26;
        java.util.concurrent.Executor executor28 = builder22.callbackExecutor;
        retrofit.converter.Converter converter29 = builder22.converter;
        restAdapter17.converter = converter29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.Profiler profiler33 = null;
        builder31.profiler = profiler33;
        retrofit.Server server35 = null;
        builder31.server = server35;
        java.util.concurrent.Executor executor37 = builder31.callbackExecutor;
        restAdapter17.httpExecutor = executor37;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel48);
        retrofit.Profiler profiler50 = restAdapter49.profiler;
        retrofit.ErrorHandler errorHandler51 = restAdapter49.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.setLogLevel(logLevel52);
        retrofit.Server server54 = restAdapter49.server;
        retrofit.Server server55 = restAdapter49.server;
        retrofit.converter.Converter converter56 = restAdapter49.converter;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider58 = null;
        builder57.clientProvider = provider58;
        retrofit.converter.Converter converter60 = null;
        builder57.converter = converter60;
        builder57.ensureSaneDefaults();
        java.util.concurrent.Executor executor63 = builder57.callbackExecutor;
        restAdapter49.httpExecutor = executor63;
        retrofit.RestAdapter.Builder builder65 = builder0.setExecutors(executor37, executor63);
        retrofit.converter.Converter converter66 = builder0.converter;
        retrofit.Server server67 = null;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel76);
        retrofit.Profiler profiler78 = restAdapter77.profiler;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean80 = logLevel79.log();
        restAdapter77.logLevel = logLevel79;
        builder0.logLevel = logLevel79;
        retrofit.RestAdapter.LogLevel logLevel83 = builder0.logLevel;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05451");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Server server4 = null;
        builder0.server = server4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider8 = null;
        builder7.clientProvider = provider8;
        java.util.concurrent.Executor executor10 = builder7.httpExecutor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.Profiler profiler13 = null;
        builder11.profiler = profiler13;
        retrofit.Server server15 = null;
        builder11.server = server15;
        java.util.concurrent.Executor executor17 = builder11.callbackExecutor;
        builder7.httpExecutor = executor17;
        retrofit.RestAdapter.LogLevel logLevel19 = builder7.logLevel;
        builder0.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.Profiler profiler23 = null;
        builder21.profiler = profiler23;
        retrofit.Server server25 = null;
        builder21.server = server25;
        retrofit.client.Client.Provider provider27 = builder21.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter39.log = log44;
        builder28.log = log44;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder28.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor59 = null;
        builder58.callbackExecutor = executor59;
        retrofit.converter.Converter converter61 = builder58.converter;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider63 = null;
        builder62.clientProvider = provider63;
        builder62.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor66 = builder62.requestInterceptor;
        builder58.requestInterceptor = requestInterceptor66;
        retrofit.Server server68 = null;
        builder58.server = server68;
        retrofit.RequestInterceptor requestInterceptor70 = builder58.requestInterceptor;
        builder21.requestInterceptor = requestInterceptor70;
        retrofit.RestAdapter.Builder builder72 = builder0.setRequestInterceptor(requestInterceptor70);
        retrofit.RequestInterceptor requestInterceptor73 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel74 = builder0.logLevel;
        retrofit.client.Client.Provider provider75 = builder0.clientProvider;
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler77 = null;
        builder0.profiler = profiler77;
        retrofit.client.Client client79 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder80 = builder0.setClient(client79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider75);
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05452");
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.Profiler profiler13 = restAdapter12.profiler;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean15 = logLevel14.log();
        restAdapter12.logLevel = logLevel14;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        restAdapter12.log = log17;
        retrofit.ErrorHandler errorHandler19 = null;
        restAdapter12.errorHandler = errorHandler19;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        restAdapter12.requestInterceptor = requestInterceptor21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean46 = logLevel45.log();
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel45);
        restAdapter34.logLevel = logLevel45;
        retrofit.converter.Converter converter49 = restAdapter34.converter;
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter34.getLogLevel();
        restAdapter12.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider52 = null;
        restAdapter12.clientProvider = provider52;
        retrofit.Profiler profiler54 = restAdapter12.profiler;
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        java.lang.String str62 = request61.getMethod();
        retrofit.client.Request request63 = restAdapter12.logAndReplaceRequest(request61);
        java.lang.String str64 = request63.getMethod();
        java.util.List<retrofit.client.Header> headerList65 = request63.getHeaders();
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("", "", headerList65, typedOutput66);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(request63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(headerList65);
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05453");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        java.lang.String str16 = request14.getMethod();
        java.lang.String str17 = request14.getUrl();
        java.util.List<retrofit.client.Header> headerList18 = request14.getHeaders();
        java.lang.String str19 = request14.getUrl();
        java.lang.String str20 = request14.getUrl();
        java.util.List<retrofit.client.Header> headerList21 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "hi!", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "", headerList21, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList21, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "hi!", headerList21, typedOutput28);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(headerList21);
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05454");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.Server server3 = null;
        retrofit.client.Client.Provider provider4 = null;
        java.util.concurrent.Executor executor5 = null;
        java.util.concurrent.Executor executor6 = null;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        retrofit.converter.Converter converter8 = null;
        retrofit.Profiler profiler9 = null;
        retrofit.ErrorHandler errorHandler10 = null;
        retrofit.RestAdapter.Log log11 = null;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server3, provider4, executor5, executor6, requestInterceptor7, converter8, profiler9, errorHandler10, log11, logLevel12);
        retrofit.converter.Converter converter14 = restAdapter13.converter;
        retrofit.ErrorHandler errorHandler15 = restAdapter13.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter13.logLevel;
        builder0.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        builder18.log = log34;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder18.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor49 = null;
        builder48.callbackExecutor = executor49;
        retrofit.converter.Converter converter51 = builder48.converter;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider53 = null;
        builder52.clientProvider = provider53;
        builder52.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor56 = builder52.requestInterceptor;
        builder48.requestInterceptor = requestInterceptor56;
        retrofit.Server server58 = null;
        builder48.server = server58;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel69);
        retrofit.Profiler profiler71 = restAdapter70.profiler;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean73 = logLevel72.log();
        restAdapter70.logLevel = logLevel72;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        restAdapter70.log = log75;
        retrofit.ErrorHandler errorHandler77 = null;
        restAdapter70.errorHandler = errorHandler77;
        retrofit.RequestInterceptor requestInterceptor79 = null;
        restAdapter70.requestInterceptor = requestInterceptor79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        builder81.ensureSaneDefaults();
        retrofit.client.Client.Provider provider83 = builder81.clientProvider;
        retrofit.ErrorHandler errorHandler84 = builder81.errorHandler;
        restAdapter70.errorHandler = errorHandler84;
        builder48.errorHandler = errorHandler84;
        retrofit.RestAdapter.Builder builder87 = builder0.setErrorHandler(errorHandler84);
        retrofit.Server server88 = builder0.server;
        retrofit.client.Client.Provider provider89 = builder0.clientProvider;
        retrofit.client.Client client90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder0.setClient(client90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(provider83);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNull(server88);
        org.junit.Assert.assertNull(provider89);
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05455");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.client.Client.Provider provider13 = restAdapter10.clientProvider;
        retrofit.ErrorHandler errorHandler14 = restAdapter10.errorHandler;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.Profiler profiler34 = restAdapter33.profiler;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean36 = logLevel35.log();
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        restAdapter33.log = log38;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log38, logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider43 = null;
        builder42.clientProvider = provider43;
        builder42.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor46 = builder42.requestInterceptor;
        restAdapter41.requestInterceptor = requestInterceptor46;
        retrofit.Profiler profiler48 = restAdapter41.profiler;
        retrofit.RestAdapter.Log log49 = restAdapter41.log;
        restAdapter10.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider52 = null;
        builder51.clientProvider = provider52;
        retrofit.converter.Converter converter54 = null;
        builder51.converter = converter54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.client.Client.Provider provider58 = builder56.clientProvider;
        retrofit.ErrorHandler errorHandler59 = builder56.errorHandler;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.client.Client.Provider provider62 = builder60.clientProvider;
        retrofit.ErrorHandler errorHandler63 = builder60.errorHandler;
        retrofit.RestAdapter.Builder builder64 = builder56.setErrorHandler(errorHandler63);
        builder51.errorHandler = errorHandler63;
        java.util.concurrent.Executor executor66 = builder51.callbackExecutor;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.client.Client.Provider provider69 = builder67.clientProvider;
        retrofit.ErrorHandler errorHandler70 = builder67.errorHandler;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.client.Client.Provider provider73 = builder71.clientProvider;
        retrofit.ErrorHandler errorHandler74 = builder71.errorHandler;
        retrofit.RestAdapter.Builder builder75 = builder67.setErrorHandler(errorHandler74);
        retrofit.Server server76 = builder67.server;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        builder77.ensureSaneDefaults();
        retrofit.Profiler profiler79 = null;
        builder77.profiler = profiler79;
        retrofit.Server server81 = null;
        builder77.server = server81;
        java.util.concurrent.Executor executor83 = builder77.callbackExecutor;
        retrofit.converter.Converter converter84 = builder77.converter;
        retrofit.RestAdapter.Builder builder85 = builder67.setConverter(converter84);
        retrofit.converter.Converter converter86 = builder85.converter;
        retrofit.RestAdapter.Builder builder87 = builder51.setConverter(converter86);
        retrofit.Server server88 = builder51.server;
        retrofit.Profiler profiler89 = null;
        builder51.profiler = profiler89;
        retrofit.RestAdapter.Builder builder91 = new retrofit.RestAdapter.Builder();
        builder91.ensureSaneDefaults();
        retrofit.client.Client.Provider provider93 = builder91.clientProvider;
        retrofit.Profiler profiler94 = builder91.profiler;
        retrofit.converter.Converter converter95 = null;
        builder91.converter = converter95;
        retrofit.RequestInterceptor requestInterceptor97 = builder91.requestInterceptor;
        builder51.requestInterceptor = requestInterceptor97;
        restAdapter10.requestInterceptor = requestInterceptor97;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(errorHandler59);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(provider73);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertNotNull(executor83);
        org.junit.Assert.assertNotNull(converter84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(converter86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNull(server88);
        org.junit.Assert.assertNotNull(provider93);
        org.junit.Assert.assertNull(profiler94);
        org.junit.Assert.assertNotNull(requestInterceptor97);
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05456");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.httpExecutor = executor10;
        retrofit.Profiler profiler12 = builder0.profiler;
        java.util.concurrent.Executor executor13 = builder0.httpExecutor;
        retrofit.RestAdapter.Log log14 = builder0.log;
        retrofit.ErrorHandler errorHandler15 = builder0.errorHandler;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertNull(errorHandler15);
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05457");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        builder0.logLevel = logLevel3;
        retrofit.RestAdapter.Builder builder6 = builder0.setServer("hi!");
        retrofit.Profiler profiler7 = builder0.profiler;
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(profiler7);
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05458");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider5 = null;
        builder4.clientProvider = provider5;
        builder4.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor8 = builder4.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider11 = null;
        builder10.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = builder10.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.Profiler profiler16 = null;
        builder14.profiler = profiler16;
        retrofit.Server server18 = null;
        builder14.server = server18;
        java.util.concurrent.Executor executor20 = builder14.callbackExecutor;
        builder10.httpExecutor = executor20;
        builder9.callbackExecutor = executor20;
        builder4.callbackExecutor = executor20;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.Profiler profiler26 = null;
        builder24.profiler = profiler26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.Server server32 = null;
        builder28.server = server32;
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        builder24.callbackExecutor = executor34;
        retrofit.RestAdapter.Builder builder36 = builder0.setExecutors(executor20, executor34);
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05459");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.Profiler profiler14 = null;
        builder12.profiler = profiler14;
        retrofit.Server server16 = null;
        builder12.server = server16;
        java.util.concurrent.Executor executor18 = builder12.callbackExecutor;
        retrofit.converter.Converter converter19 = builder12.converter;
        restAdapter11.converter = converter19;
        retrofit.Profiler profiler21 = null;
        restAdapter11.profiler = profiler21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.Profiler profiler34 = restAdapter33.profiler;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean36 = logLevel35.log();
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        restAdapter33.log = log38;
        retrofit.ErrorHandler errorHandler40 = null;
        restAdapter33.errorHandler = errorHandler40;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel42;
        retrofit.RestAdapter.Log log44 = restAdapter33.log;
        retrofit.Server server45 = restAdapter33.server;
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        retrofit.mime.TypedOutput typedOutput53 = request52.getBody();
        retrofit.mime.TypedOutput typedOutput54 = request52.getBody();
        retrofit.mime.TypedOutput typedOutput55 = request52.getBody();
        java.lang.String str56 = request52.getUrl();
        java.lang.String str57 = request52.getUrl();
        retrofit.client.Request request58 = restAdapter33.logAndReplaceRequest(request52);
        retrofit.RestAdapter.Log log59 = restAdapter33.log;
        restAdapter11.log = log59;
        retrofit.client.Client.Provider provider61 = restAdapter11.clientProvider;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider66 = null;
        builder65.clientProvider = provider66;
        java.util.concurrent.Executor executor68 = builder65.httpExecutor;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.Profiler profiler71 = null;
        builder69.profiler = profiler71;
        retrofit.Server server73 = null;
        builder69.server = server73;
        java.util.concurrent.Executor executor75 = builder69.callbackExecutor;
        builder65.httpExecutor = executor75;
        builder64.callbackExecutor = executor75;
        builder62.callbackExecutor = executor75;
        restAdapter11.callbackExecutor = executor75;
        retrofit.client.Client.Provider provider80 = restAdapter11.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(converter19);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(request58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNull(provider80);
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05460");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider4 = null;
        builder3.clientProvider = provider4;
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.client.Client.Provider provider12 = builder10.clientProvider;
        builder7.clientProvider = provider12;
        builder3.clientProvider = provider12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.Profiler profiler17 = null;
        builder15.profiler = profiler17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.Profiler profiler21 = null;
        builder19.profiler = profiler21;
        retrofit.Server server23 = null;
        builder19.server = server23;
        java.util.concurrent.Executor executor25 = builder19.callbackExecutor;
        builder15.callbackExecutor = executor25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.Profiler profiler46 = restAdapter45.profiler;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean48 = logLevel47.log();
        restAdapter45.logLevel = logLevel47;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        restAdapter45.log = log50;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log50, logLevel52);
        builder15.log = log50;
        retrofit.RestAdapter.Builder builder55 = builder3.setLog(log50);
        retrofit.converter.Converter converter56 = builder3.converter;
        retrofit.converter.Converter converter57 = builder3.converter;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.Profiler profiler69 = restAdapter68.profiler;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean71 = logLevel70.log();
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        restAdapter68.log = log73;
        retrofit.ErrorHandler errorHandler75 = null;
        restAdapter68.errorHandler = errorHandler75;
        retrofit.RequestInterceptor requestInterceptor77 = null;
        restAdapter68.requestInterceptor = requestInterceptor77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        retrofit.ErrorHandler errorHandler82 = builder79.errorHandler;
        restAdapter68.errorHandler = errorHandler82;
        retrofit.RestAdapter.Log log84 = restAdapter68.log;
        retrofit.RestAdapter.Log log85 = restAdapter68.log;
        retrofit.RestAdapter.Builder builder86 = builder3.setLog(log85);
        retrofit.ErrorHandler errorHandler87 = builder86.errorHandler;
        retrofit.RestAdapter.Builder builder88 = builder0.setErrorHandler(errorHandler87);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter89 = builder88.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(converter2);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(provider12);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNotNull(converter57);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05461");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        builder1.ensureSaneDefaults();
        retrofit.Profiler profiler3 = null;
        builder1.profiler = profiler3;
        retrofit.Server server5 = null;
        builder1.server = server5;
        java.util.concurrent.Executor executor7 = builder1.callbackExecutor;
        restAdapter0.callbackExecutor = executor7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.Profiler profiler11 = null;
        builder9.profiler = profiler11;
        retrofit.Server server13 = null;
        builder9.server = server13;
        java.util.concurrent.Executor executor15 = builder9.callbackExecutor;
        retrofit.converter.Converter converter16 = builder9.converter;
        restAdapter0.converter = converter16;
        java.util.concurrent.Executor executor18 = restAdapter0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter0.requestInterceptor;
        java.util.concurrent.Executor executor20 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log37;
        builder21.log = log37;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder21.setLogLevel(logLevel49);
        java.util.concurrent.Executor executor52 = null;
        builder51.callbackExecutor = executor52;
        retrofit.ErrorHandler errorHandler54 = null;
        builder51.errorHandler = errorHandler54;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor58 = builder51.callbackExecutor;
        retrofit.RestAdapter.Log log59 = builder51.log;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        restAdapter60.log = log61;
        retrofit.Profiler profiler63 = restAdapter60.profiler;
        retrofit.converter.Converter converter64 = restAdapter60.converter;
        retrofit.converter.Converter converter65 = restAdapter60.converter;
        java.util.concurrent.Executor executor66 = restAdapter60.httpExecutor;
        java.util.concurrent.Executor executor67 = null;
        restAdapter60.callbackExecutor = executor67;
        retrofit.Profiler profiler69 = restAdapter60.profiler;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider71 = null;
        builder70.clientProvider = provider71;
        retrofit.converter.Converter converter73 = null;
        builder70.converter = converter73;
        builder70.ensureSaneDefaults();
        retrofit.Server server76 = builder70.server;
        retrofit.RequestInterceptor requestInterceptor77 = builder70.requestInterceptor;
        restAdapter60.requestInterceptor = requestInterceptor77;
        retrofit.RestAdapter.Builder builder79 = builder51.setRequestInterceptor(requestInterceptor77);
        restAdapter0.requestInterceptor = requestInterceptor77;
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter0.logLevel;
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05462");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.converter.Converter converter18 = builder16.converter;
        restAdapter10.converter = converter18;
        retrofit.ErrorHandler errorHandler20 = restAdapter10.errorHandler;
        retrofit.Profiler profiler21 = null;
        restAdapter10.profiler = profiler21;
        java.util.concurrent.Executor executor23 = restAdapter10.callbackExecutor;
        retrofit.Profiler profiler24 = restAdapter10.profiler;
        retrofit.client.Response response26 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response28 = restAdapter10.logAndReplaceResponse("", response26, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter18);
        org.junit.Assert.assertNull(errorHandler20);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(profiler24);
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05463");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.setLogLevel(logLevel13);
        retrofit.Server server15 = restAdapter10.server;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean30 = logLevel29.log();
        restAdapter27.logLevel = logLevel29;
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        restAdapter27.log = log32;
        builder16.log = log32;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel44);
        retrofit.Profiler profiler46 = restAdapter45.profiler;
        retrofit.ErrorHandler errorHandler47 = restAdapter45.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider51 = null;
        builder50.clientProvider = provider51;
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.converter.Converter converter64 = restAdapter63.converter;
        retrofit.ErrorHandler errorHandler65 = restAdapter63.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter63.logLevel;
        builder50.logLevel = logLevel66;
        restAdapter45.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder69 = builder16.setLogLevel(logLevel66);
        boolean boolean70 = logLevel66.log();
        restAdapter10.logLevel = logLevel66;
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter10.new RestHandler();
        retrofit.client.Client.Provider provider73 = restAdapter10.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertNull(errorHandler47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(errorHandler65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(provider73);
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05464");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean23 = logLevel22.log();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        restAdapter11.logLevel = logLevel22;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        restAdapter11.requestInterceptor = requestInterceptor26;
        retrofit.converter.Converter converter28 = restAdapter11.converter;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter11.new RestHandler();
        retrofit.ErrorHandler errorHandler30 = restAdapter11.errorHandler;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.Profiler profiler43 = restAdapter42.profiler;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean45 = logLevel44.log();
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        restAdapter42.log = log47;
        builder31.log = log47;
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.RestAdapter.Builder builder61 = builder31.setLogLevel(logLevel59);
        java.util.concurrent.Executor executor62 = null;
        builder61.callbackExecutor = executor62;
        retrofit.converter.Converter converter64 = builder61.converter;
        retrofit.Server server65 = null;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel74);
        retrofit.converter.Converter converter76 = restAdapter75.converter;
        retrofit.ErrorHandler errorHandler77 = restAdapter75.errorHandler;
        retrofit.Profiler profiler78 = null;
        restAdapter75.profiler = profiler78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.client.Client.Provider provider82 = builder80.clientProvider;
        retrofit.ErrorHandler errorHandler83 = builder80.errorHandler;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.client.Client.Provider provider86 = builder84.clientProvider;
        retrofit.ErrorHandler errorHandler87 = builder84.errorHandler;
        retrofit.RestAdapter.Builder builder88 = builder80.setErrorHandler(errorHandler87);
        restAdapter75.errorHandler = errorHandler87;
        builder61.errorHandler = errorHandler87;
        restAdapter11.errorHandler = errorHandler87;
        retrofit.Profiler profiler92 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter11.logLevel;
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter11.getLogLevel();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter76);
        org.junit.Assert.assertNull(errorHandler77);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(profiler92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05465");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.Server server15 = null;
        restAdapter10.server = server15;
        retrofit.ErrorHandler errorHandler17 = restAdapter10.errorHandler;
        retrofit.Server server18 = restAdapter10.server;
        java.util.concurrent.Executor executor19 = restAdapter10.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter10.new RestHandler();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(requestInterceptor20);
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05466");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput17);
        java.lang.String str19 = request18.getUrl();
        retrofit.mime.TypedOutput typedOutput20 = request18.getBody();
        java.util.List<retrofit.client.Header> headerList21 = request18.getHeaders();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNotNull(headerList21);
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05467");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.converter.Converter converter15 = restAdapter10.converter;
        retrofit.Profiler profiler16 = null;
        restAdapter10.profiler = profiler16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler19 = restAdapter18.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.Profiler profiler21 = restAdapter18.profiler;
        retrofit.Server server22 = restAdapter18.server;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel32);
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log36 = null;
        restAdapter34.log = log36;
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        retrofit.converter.Converter converter39 = restAdapter34.converter;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter34.getLogLevel();
        restAdapter18.logLevel = logLevel40;
        restAdapter10.logLevel = logLevel40;
        retrofit.Profiler profiler43 = restAdapter10.profiler;
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        retrofit.mime.TypedOutput typedOutput51 = request50.getBody();
        retrofit.mime.TypedOutput typedOutput52 = request50.getBody();
        java.lang.String str53 = request50.getMethod();
        retrofit.mime.TypedOutput typedOutput54 = request50.getBody();
        java.lang.String str55 = request50.getUrl();
        java.lang.String str56 = request50.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request57 = restAdapter10.logAndReplaceRequest(request50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(typedOutput51);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05468");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder3 = builder0.setLogLevel(logLevel2);
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = null;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel13);
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder0.setLogLevel(logLevel16);
        java.util.concurrent.Executor executor18 = builder0.httpExecutor;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.setLogLevel(logLevel32);
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.Profiler profiler45 = restAdapter44.profiler;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean47 = logLevel46.log();
        restAdapter44.logLevel = logLevel46;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        restAdapter44.log = log49;
        restAdapter29.log = log49;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.Builder builder53 = builder0.setLogLevel(logLevel52);
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05469");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = null;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel29);
        retrofit.Profiler profiler31 = restAdapter30.profiler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean33 = logLevel32.log();
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter30.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel37);
        builder0.log = log35;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.Profiler profiler52 = restAdapter51.profiler;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean54 = logLevel53.log();
        restAdapter51.logLevel = logLevel53;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        restAdapter51.log = log56;
        builder40.log = log56;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder40.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("hi!");
        retrofit.RestAdapter.Log log73 = builder72.log;
        builder0.log = log73;
        retrofit.RestAdapter.Builder builder76 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor77 = null;
        builder76.httpExecutor = executor77;
        java.util.concurrent.Executor executor79 = null;
        builder76.httpExecutor = executor79;
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05470");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log13;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter10.logLevel = logLevel15;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        restAdapter10.setLogLevel(logLevel17);
        retrofit.client.Client.Provider provider20 = restAdapter10.clientProvider;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.Profiler profiler23 = null;
        builder21.profiler = profiler23;
        retrofit.Server server25 = null;
        builder21.server = server25;
        java.util.concurrent.Executor executor27 = builder21.callbackExecutor;
        retrofit.converter.Converter converter28 = builder21.converter;
        retrofit.client.Client.Provider provider29 = builder21.clientProvider;
        restAdapter10.clientProvider = provider29;
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("hi!", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getMethod();
        retrofit.client.Request request37 = restAdapter10.logAndReplaceRequest(request35);
        java.lang.String str38 = request35.getMethod();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertNotNull(provider29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(request37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05471");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request14.getHeaders();
        java.util.List<retrofit.client.Header> headerList17 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "", headerList17, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList20, typedOutput21);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList20);
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05472");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        retrofit.Server server15 = null;
        restAdapter10.server = server15;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.ErrorHandler errorHandler29 = restAdapter27.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.setLogLevel(logLevel30);
        retrofit.Server server32 = restAdapter27.server;
        retrofit.Server server33 = restAdapter27.server;
        retrofit.converter.Converter converter34 = restAdapter27.converter;
        java.util.concurrent.Executor executor35 = restAdapter27.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter27.getLogLevel();
        restAdapter10.logLevel = logLevel36;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter10.new RestHandler();
        retrofit.client.Header[] headerArray47 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList48 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList48, headerArray47);
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList48, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList48, typedOutput52);
        java.util.List<retrofit.client.Header> headerList54 = request53.getHeaders();
        java.util.List<retrofit.client.Header> headerList55 = request53.getHeaders();
        java.util.List<retrofit.client.Header> headerList56 = request53.getHeaders();
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "", headerList56, typedOutput57);
        java.util.List<retrofit.client.Header> headerList59 = request58.getHeaders();
        java.util.List<retrofit.client.Header> headerList60 = request58.getHeaders();
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("hi!", "", headerList60, typedOutput61);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request63 = restAdapter10.logAndReplaceRequest(request62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(headerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(headerList55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(headerList60);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05473");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        retrofit.ErrorHandler errorHandler36 = null;
        restAdapter29.errorHandler = errorHandler36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel38;
        retrofit.RestAdapter.Log log40 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder41 = builder0.setLog(log40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        retrofit.client.Client.Provider provider48 = builder42.clientProvider;
        builder0.clientProvider = provider48;
        builder0.ensureSaneDefaults();
        retrofit.converter.Converter converter51 = builder0.converter;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel61);
        retrofit.Profiler profiler63 = restAdapter62.profiler;
        retrofit.ErrorHandler errorHandler64 = restAdapter62.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.setLogLevel(logLevel65);
        retrofit.Server server67 = restAdapter62.server;
        retrofit.Server server68 = restAdapter62.server;
        retrofit.converter.Converter converter69 = restAdapter62.converter;
        java.util.concurrent.Executor executor70 = restAdapter62.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor73 = builder72.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder75 = builder72.setLogLevel(logLevel74);
        retrofit.Server server76 = null;
        retrofit.client.Client.Provider provider77 = null;
        java.util.concurrent.Executor executor78 = null;
        java.util.concurrent.Executor executor79 = null;
        retrofit.RequestInterceptor requestInterceptor80 = null;
        retrofit.converter.Converter converter81 = null;
        retrofit.Profiler profiler82 = null;
        retrofit.ErrorHandler errorHandler83 = null;
        retrofit.RestAdapter.Log log84 = null;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean86 = logLevel85.log();
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server76, provider77, executor78, executor79, requestInterceptor80, converter81, profiler82, errorHandler83, log84, logLevel85);
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter87.logLevel;
        retrofit.RestAdapter.Builder builder89 = builder72.setLogLevel(logLevel88);
        retrofit.RequestInterceptor requestInterceptor90 = builder72.requestInterceptor;
        retrofit.RestAdapter.Builder builder91 = new retrofit.RestAdapter.Builder();
        builder91.ensureSaneDefaults();
        retrofit.client.Client.Provider provider93 = builder91.clientProvider;
        retrofit.RestAdapter.Builder builder94 = builder72.setClient(provider93);
        restAdapter62.clientProvider = provider93;
        retrofit.RestAdapter.Builder builder96 = builder0.setClient(provider93);
        java.util.concurrent.Executor executor97 = builder0.httpExecutor;
        retrofit.ErrorHandler errorHandler98 = builder0.errorHandler;
        retrofit.ErrorHandler errorHandler99 = builder0.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(converter51);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNull(errorHandler64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNull(executor70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNull(requestInterceptor90);
        org.junit.Assert.assertNotNull(provider93);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(executor97);
        org.junit.Assert.assertNotNull(errorHandler98);
        org.junit.Assert.assertNotNull(errorHandler99);
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05474");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.converter.Converter converter33 = builder30.converter;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        builder34.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor38 = builder34.requestInterceptor;
        builder30.requestInterceptor = requestInterceptor38;
        retrofit.Server server40 = null;
        builder30.server = server40;
        retrofit.RequestInterceptor requestInterceptor42 = builder30.requestInterceptor;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel52);
        retrofit.RestAdapter.Log log54 = restAdapter53.log;
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = null;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel72);
        retrofit.Profiler profiler74 = restAdapter73.profiler;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean76 = logLevel75.log();
        restAdapter73.logLevel = logLevel75;
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        restAdapter73.log = log78;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log78, logLevel80);
        restAdapter53.log = log78;
        log78.log("");
        retrofit.RestAdapter.Builder builder85 = builder30.setLog(log78);
        retrofit.Profiler profiler86 = null;
        builder85.profiler = profiler86;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05475");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider20 = null;
        builder19.clientProvider = provider20;
        builder19.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor23 = builder19.requestInterceptor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider26 = null;
        builder25.clientProvider = provider26;
        java.util.concurrent.Executor executor28 = builder25.httpExecutor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.Profiler profiler31 = null;
        builder29.profiler = profiler31;
        retrofit.Server server33 = null;
        builder29.server = server33;
        java.util.concurrent.Executor executor35 = builder29.callbackExecutor;
        builder25.httpExecutor = executor35;
        builder24.callbackExecutor = executor35;
        builder19.callbackExecutor = executor35;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.Profiler profiler41 = null;
        builder39.profiler = profiler41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Server server47 = null;
        builder43.server = server47;
        java.util.concurrent.Executor executor49 = builder43.callbackExecutor;
        builder39.callbackExecutor = executor49;
        retrofit.RestAdapter.Builder builder51 = builder15.setExecutors(executor35, executor49);
        retrofit.RestAdapter.Log log52 = builder51.log;
        restAdapter10.log = log52;
        retrofit.client.Client.Provider provider54 = restAdapter10.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter10.getLogLevel();
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05476");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.converter.Converter converter33 = builder30.converter;
        java.util.concurrent.Executor executor34 = builder30.callbackExecutor;
        retrofit.Server server35 = builder30.server;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider37 = null;
        builder36.clientProvider = provider37;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        builder36.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder30.setLogLevel(logLevel39);
        retrofit.Profiler profiler42 = null;
        builder41.profiler = profiler42;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05477");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.converter.Converter converter11 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.Profiler profiler14 = null;
        restAdapter10.profiler = profiler14;
        retrofit.converter.Converter converter16 = restAdapter10.converter;
        retrofit.Server server17 = null;
        restAdapter10.server = server17;
        retrofit.Profiler profiler19 = null;
        restAdapter10.profiler = profiler19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider25 = null;
        builder24.clientProvider = provider25;
        java.util.concurrent.Executor executor27 = builder24.httpExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.Server server32 = null;
        builder28.server = server32;
        java.util.concurrent.Executor executor34 = builder28.callbackExecutor;
        builder24.httpExecutor = executor34;
        builder23.callbackExecutor = executor34;
        builder21.callbackExecutor = executor34;
        java.util.concurrent.Executor executor38 = builder21.callbackExecutor;
        restAdapter10.callbackExecutor = executor38;
        retrofit.converter.Converter converter40 = restAdapter10.converter;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel50);
        retrofit.Profiler profiler52 = restAdapter51.profiler;
        retrofit.ErrorHandler errorHandler53 = restAdapter51.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter51.logLevel;
        retrofit.Profiler profiler55 = null;
        restAdapter51.profiler = profiler55;
        java.util.concurrent.Executor executor57 = restAdapter51.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter51.logLevel;
        restAdapter10.setLogLevel(logLevel58);
        retrofit.client.Header[] headerArray62 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList63 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList63, headerArray62);
        retrofit.mime.TypedOutput typedOutput65 = null;
        retrofit.client.Request request66 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList63, typedOutput65);
        java.lang.String str67 = request66.getMethod();
        java.lang.String str68 = request66.getMethod();
        java.lang.String str69 = request66.getUrl();
        java.util.List<retrofit.client.Header> headerList70 = request66.getHeaders();
        java.lang.String str71 = request66.getMethod();
        java.util.List<retrofit.client.Header> headerList72 = request66.getHeaders();
        java.util.List<retrofit.client.Header> headerList73 = request66.getHeaders();
        java.lang.String str74 = request66.getMethod();
        java.util.List<retrofit.client.Header> headerList75 = request66.getHeaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request76 = restAdapter10.logAndReplaceRequest(request66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(errorHandler53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(headerArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(headerList72);
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(headerList75);
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05478");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.Profiler profiler8 = null;
        builder6.profiler = profiler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        builder6.callbackExecutor = executor16;
        builder0.callbackExecutor = executor16;
        retrofit.RestAdapter.LogLevel logLevel19 = builder0.logLevel;
        retrofit.Profiler profiler20 = builder0.profiler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel31);
        retrofit.Profiler profiler33 = restAdapter32.profiler;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean35 = logLevel34.log();
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log37;
        builder21.log = log37;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.RestAdapter.Builder builder51 = builder21.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("hi!");
        retrofit.RestAdapter.Log log54 = builder53.log;
        retrofit.RestAdapter.Builder builder55 = builder0.setLog(log54);
        log54.log("hi!");
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05479");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        retrofit.Server server47 = null;
        builder30.server = server47;
        retrofit.Server server49 = null;
        builder30.server = server49;
        java.util.concurrent.Executor executor51 = builder30.httpExecutor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.Profiler profiler64 = restAdapter63.profiler;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean66 = logLevel65.log();
        restAdapter63.logLevel = logLevel65;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        restAdapter63.log = log68;
        builder52.log = log68;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder52.setLogLevel(logLevel80);
        java.util.concurrent.Executor executor83 = null;
        builder82.callbackExecutor = executor83;
        retrofit.ErrorHandler errorHandler85 = null;
        builder82.errorHandler = errorHandler85;
        builder82.ensureSaneDefaults();
        retrofit.RestAdapter.Log log88 = builder82.log;
        retrofit.client.Client.Provider provider89 = builder82.clientProvider;
        builder30.clientProvider = provider89;
        retrofit.RestAdapter.Builder builder92 = builder30.setServer("hi!");
        retrofit.RestAdapter.Builder builder94 = builder30.setServer("hi!");
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(provider89);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05480");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log1;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor5 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(requestInterceptor5);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05481");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.Profiler profiler14 = null;
        builder12.profiler = profiler14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.Profiler profiler18 = null;
        builder16.profiler = profiler18;
        retrofit.Server server20 = null;
        builder16.server = server20;
        java.util.concurrent.Executor executor22 = builder16.callbackExecutor;
        builder12.callbackExecutor = executor22;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel41);
        retrofit.Profiler profiler43 = restAdapter42.profiler;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean45 = logLevel44.log();
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        restAdapter42.log = log47;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log47, logLevel49);
        builder12.log = log47;
        retrofit.RestAdapter.Builder builder52 = builder0.setLog(log47);
        retrofit.converter.Converter converter53 = builder0.converter;
        retrofit.converter.Converter converter54 = builder0.converter;
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = null;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel64);
        retrofit.Profiler profiler66 = restAdapter65.profiler;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean68 = logLevel67.log();
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        restAdapter65.log = log70;
        retrofit.ErrorHandler errorHandler72 = null;
        restAdapter65.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = null;
        restAdapter65.requestInterceptor = requestInterceptor74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.client.Client.Provider provider78 = builder76.clientProvider;
        retrofit.ErrorHandler errorHandler79 = builder76.errorHandler;
        restAdapter65.errorHandler = errorHandler79;
        retrofit.RestAdapter.Log log81 = restAdapter65.log;
        retrofit.RestAdapter.Log log82 = restAdapter65.log;
        retrofit.RestAdapter.Builder builder83 = builder0.setLog(log82);
        retrofit.RestAdapter.LogLevel logLevel84 = builder0.logLevel;
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertNotNull(converter54);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(errorHandler79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05482");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.Server server37 = null;
        builder30.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.Profiler profiler51 = restAdapter50.profiler;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean53 = logLevel52.log();
        restAdapter50.logLevel = logLevel52;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        restAdapter50.log = log55;
        builder39.log = log55;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder39.setLogLevel(logLevel67);
        java.util.concurrent.Executor executor70 = null;
        builder69.callbackExecutor = executor70;
        retrofit.converter.Converter converter72 = builder69.converter;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider74 = null;
        builder73.clientProvider = provider74;
        builder73.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor77 = builder73.requestInterceptor;
        builder69.requestInterceptor = requestInterceptor77;
        retrofit.Server server79 = null;
        builder69.server = server79;
        retrofit.Profiler profiler81 = null;
        builder69.profiler = profiler81;
        retrofit.Server server83 = builder69.server;
        retrofit.RestAdapter.Log log84 = builder69.log;
        log84.log("hi!");
        log84.log("hi!");
        log84.log("");
        log84.log("hi!");
        builder30.log = log84;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertNotNull(log84);
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05483");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.Profiler profiler3 = builder0.profiler;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(converter2);
        org.junit.Assert.assertNull(profiler3);
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05484");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider22 = null;
        builder21.clientProvider = provider22;
        builder21.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor25 = builder21.requestInterceptor;
        restAdapter10.requestInterceptor = requestInterceptor25;
        retrofit.Server server27 = restAdapter10.server;
        retrofit.converter.Converter converter28 = restAdapter10.converter;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter39.log = log44;
        retrofit.ErrorHandler errorHandler46 = null;
        restAdapter39.errorHandler = errorHandler46;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        restAdapter39.requestInterceptor = requestInterceptor48;
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean60 = logLevel59.log();
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel59);
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter61.new RestHandler();
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = null;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean73 = logLevel72.log();
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel72);
        restAdapter61.logLevel = logLevel72;
        retrofit.converter.Converter converter76 = restAdapter61.converter;
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter61.getLogLevel();
        restAdapter39.setLogLevel(logLevel77);
        retrofit.Server server79 = restAdapter39.server;
        retrofit.RestAdapter.Log log80 = restAdapter39.log;
        restAdapter10.log = log80;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(converter76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertNotNull(log80);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05485");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.ErrorHandler errorHandler16 = restAdapter10.errorHandler;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.Profiler profiler28 = restAdapter27.profiler;
        retrofit.ErrorHandler errorHandler29 = restAdapter27.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.setLogLevel(logLevel30);
        retrofit.Server server32 = restAdapter27.server;
        retrofit.Server server33 = restAdapter27.server;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log47 = null;
        restAdapter45.log = log47;
        retrofit.Profiler profiler49 = null;
        restAdapter45.profiler = profiler49;
        retrofit.RequestInterceptor requestInterceptor51 = restAdapter45.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        retrofit.Profiler profiler64 = restAdapter63.profiler;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean66 = logLevel65.log();
        restAdapter63.logLevel = logLevel65;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        restAdapter63.log = log68;
        builder52.log = log68;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel80);
        retrofit.RestAdapter.Builder builder82 = builder52.setLogLevel(logLevel80);
        java.util.concurrent.Executor executor83 = null;
        builder82.callbackExecutor = executor83;
        retrofit.converter.Converter converter85 = builder82.converter;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider87 = null;
        builder86.clientProvider = provider87;
        builder86.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor90 = builder86.requestInterceptor;
        builder82.requestInterceptor = requestInterceptor90;
        restAdapter45.requestInterceptor = requestInterceptor90;
        restAdapter27.requestInterceptor = requestInterceptor90;
        restAdapter10.requestInterceptor = requestInterceptor90;
        retrofit.client.Response response96 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response98 = restAdapter10.logAndReplaceResponse("", response96, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(requestInterceptor51);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(requestInterceptor90);
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05486");
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput25);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput27);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = request34.getBody();
        java.lang.String str36 = request34.getMethod();
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05487");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.Profiler profiler21 = null;
        builder19.profiler = profiler21;
        retrofit.Server server23 = null;
        builder19.server = server23;
        java.util.concurrent.Executor executor25 = builder19.callbackExecutor;
        retrofit.converter.Converter converter26 = builder19.converter;
        retrofit.client.Client.Provider provider27 = builder19.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider30 = null;
        builder29.clientProvider = provider30;
        java.util.concurrent.Executor executor32 = builder29.httpExecutor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.Profiler profiler35 = null;
        builder33.profiler = profiler35;
        retrofit.Server server37 = null;
        builder33.server = server37;
        java.util.concurrent.Executor executor39 = builder33.callbackExecutor;
        builder29.httpExecutor = executor39;
        builder28.callbackExecutor = executor39;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Server server46 = null;
        builder42.server = server46;
        java.util.concurrent.Executor executor48 = builder42.callbackExecutor;
        retrofit.RestAdapter.Builder builder49 = builder19.setExecutors(executor39, executor48);
        builder0.callbackExecutor = executor39;
        retrofit.RestAdapter.LogLevel logLevel51 = builder0.logLevel;
        java.util.concurrent.Executor executor52 = builder0.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor52);
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05488");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean10 = logLevel9.log();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider15 = builder13.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder13.errorHandler;
        restAdapter11.errorHandler = errorHandler16;
        retrofit.Profiler profiler18 = null;
        restAdapter11.profiler = profiler18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.Profiler profiler22 = null;
        builder20.profiler = profiler22;
        retrofit.Server server24 = null;
        builder20.server = server24;
        java.util.concurrent.Executor executor26 = builder20.callbackExecutor;
        restAdapter11.httpExecutor = executor26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel38);
        retrofit.Profiler profiler40 = restAdapter39.profiler;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean42 = logLevel41.log();
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter39.log = log44;
        builder28.log = log44;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder28.setLogLevel(logLevel56);
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel68);
        retrofit.Profiler profiler70 = restAdapter69.profiler;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean72 = logLevel71.log();
        restAdapter69.logLevel = logLevel71;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        restAdapter69.log = log74;
        retrofit.ErrorHandler errorHandler76 = null;
        restAdapter69.errorHandler = errorHandler76;
        retrofit.RequestInterceptor requestInterceptor78 = null;
        restAdapter69.requestInterceptor = requestInterceptor78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider81 = null;
        builder80.clientProvider = provider81;
        builder80.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor84 = builder80.requestInterceptor;
        restAdapter69.requestInterceptor = requestInterceptor84;
        builder28.requestInterceptor = requestInterceptor84;
        retrofit.RestAdapter.Log log87 = builder28.log;
        restAdapter11.log = log87;
        retrofit.RestAdapter.Log log89 = restAdapter11.log;
        retrofit.Profiler profiler90 = null;
        restAdapter11.profiler = profiler90;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(requestInterceptor84);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNotNull(log89);
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05489");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler3 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.ErrorHandler errorHandler7 = builder4.errorHandler;
        retrofit.RestAdapter.Builder builder8 = builder0.setErrorHandler(errorHandler7);
        retrofit.Server server9 = builder0.server;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler12 = null;
        builder10.profiler = profiler12;
        retrofit.Server server14 = null;
        builder10.server = server14;
        java.util.concurrent.Executor executor16 = builder10.callbackExecutor;
        retrofit.converter.Converter converter17 = builder10.converter;
        retrofit.RestAdapter.Builder builder18 = builder0.setConverter(converter17);
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean32 = logLevel31.log();
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        restAdapter29.log = log34;
        retrofit.ErrorHandler errorHandler36 = null;
        restAdapter29.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        restAdapter29.requestInterceptor = requestInterceptor38;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean50 = logLevel49.log();
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel49);
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter51.new RestHandler();
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = null;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean63 = logLevel62.log();
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel62);
        restAdapter51.logLevel = logLevel62;
        retrofit.converter.Converter converter66 = restAdapter51.converter;
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter51.getLogLevel();
        restAdapter29.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder18.setLogLevel(logLevel67);
        retrofit.ErrorHandler errorHandler70 = builder18.errorHandler;
        retrofit.Server server71 = builder18.server;
        retrofit.Server server72 = null;
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.RequestInterceptor requestInterceptor76 = null;
        retrofit.converter.Converter converter77 = null;
        retrofit.Profiler profiler78 = null;
        retrofit.ErrorHandler errorHandler79 = null;
        retrofit.RestAdapter.Log log80 = null;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor76, converter77, profiler78, errorHandler79, log80, logLevel81);
        retrofit.client.Client.Provider provider83 = null;
        restAdapter82.clientProvider = provider83;
        java.util.concurrent.Executor executor85 = restAdapter82.callbackExecutor;
        retrofit.client.Client.Provider provider86 = restAdapter82.clientProvider;
        retrofit.client.Client.Provider provider87 = restAdapter82.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.Builder builder89 = builder18.setLogLevel(logLevel88);
        java.util.concurrent.Executor executor90 = builder18.httpExecutor;
        java.util.concurrent.Executor executor91 = builder18.httpExecutor;
        org.junit.Assert.assertNotNull(provider2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(converter17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNull(provider86);
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNotNull(executor91);
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05490");
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Log log16 = null;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log16, logLevel17);
        retrofit.Profiler profiler19 = restAdapter18.profiler;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean21 = logLevel20.log();
        restAdapter18.logLevel = logLevel20;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        restAdapter18.log = log23;
        retrofit.ErrorHandler errorHandler25 = null;
        restAdapter18.errorHandler = errorHandler25;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter18.logLevel = logLevel27;
        retrofit.RestAdapter.Log log29 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter18.log;
        retrofit.client.Header[] headerArray37 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList38 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList38, headerArray37);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput42);
        retrofit.mime.TypedOutput typedOutput44 = request43.getBody();
        java.util.List<retrofit.client.Header> headerList45 = request43.getHeaders();
        retrofit.client.Request request46 = restAdapter18.logAndReplaceRequest(request43);
        java.util.List<retrofit.client.Header> headerList47 = request46.getHeaders();
        retrofit.mime.TypedOutput typedOutput48 = request46.getBody();
        java.util.List<retrofit.client.Header> headerList49 = request46.getHeaders();
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("hi!", "hi!", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "", headerList49, typedOutput52);
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "", headerList49, typedOutput54);
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("", "hi!", headerList49, typedOutput56);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(headerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNull(typedOutput48);
        org.junit.Assert.assertNotNull(headerList49);
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05491");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = null;
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        retrofit.converter.Converter converter6 = null;
        retrofit.Profiler profiler7 = null;
        retrofit.ErrorHandler errorHandler8 = null;
        retrofit.RestAdapter.Log log9 = null;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor5, converter6, profiler7, errorHandler8, log9, logLevel10);
        retrofit.Profiler profiler12 = restAdapter11.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean14 = logLevel13.log();
        restAdapter11.logLevel = logLevel13;
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        restAdapter11.log = log16;
        builder0.log = log16;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.Builder builder30 = builder0.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = null;
        builder30.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        builder30.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.Profiler profiler37 = null;
        builder35.profiler = profiler37;
        retrofit.Server server39 = null;
        builder35.server = server39;
        java.util.concurrent.Executor executor41 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.client.Client.Provider provider44 = builder42.clientProvider;
        builder35.clientProvider = provider44;
        builder30.clientProvider = provider44;
        retrofit.Server server47 = builder30.server;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider49 = null;
        builder48.clientProvider = provider49;
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.client.Client.Provider provider54 = builder52.clientProvider;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider57 = builder55.clientProvider;
        builder52.clientProvider = provider57;
        builder48.clientProvider = provider57;
        retrofit.RestAdapter.Builder builder60 = builder30.setClient(provider57);
        retrofit.ErrorHandler errorHandler61 = builder30.errorHandler;
        retrofit.client.Client.Provider provider62 = builder30.clientProvider;
        retrofit.converter.Converter converter63 = builder30.converter;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider65 = null;
        builder64.clientProvider = provider65;
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.client.Client.Provider provider70 = builder68.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.client.Client.Provider provider73 = builder71.clientProvider;
        builder68.clientProvider = provider73;
        builder64.clientProvider = provider73;
        java.util.concurrent.Executor executor76 = builder64.httpExecutor;
        retrofit.converter.Converter converter77 = null;
        builder64.converter = converter77;
        retrofit.Server server79 = builder64.server;
        retrofit.RestAdapter.Log log80 = builder64.log;
        retrofit.client.Client.Provider provider81 = builder64.clientProvider;
        builder30.clientProvider = provider81;
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNotNull(provider54);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNotNull(provider70);
        org.junit.Assert.assertNotNull(provider73);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(provider81);
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05492");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        java.util.concurrent.Executor executor33 = null;
        restAdapter31.httpExecutor = executor33;
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter31.getLogLevel();
        retrofit.converter.Converter converter36 = restAdapter31.converter;
        java.util.concurrent.Executor executor37 = restAdapter31.callbackExecutor;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel47);
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        java.util.concurrent.Executor executor50 = null;
        restAdapter48.httpExecutor = executor50;
        retrofit.converter.Converter converter52 = restAdapter48.converter;
        java.util.concurrent.Executor executor53 = restAdapter48.httpExecutor;
        retrofit.ErrorHandler errorHandler54 = restAdapter48.errorHandler;
        retrofit.client.Client.Provider provider55 = restAdapter48.clientProvider;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.Profiler profiler58 = null;
        builder56.profiler = profiler58;
        retrofit.Server server60 = null;
        builder56.server = server60;
        java.util.concurrent.Executor executor62 = builder56.callbackExecutor;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.client.Client.Provider provider65 = builder63.clientProvider;
        builder56.clientProvider = provider65;
        java.util.concurrent.Executor executor67 = builder56.httpExecutor;
        restAdapter48.httpExecutor = executor67;
        restAdapter31.httpExecutor = executor67;
        java.util.concurrent.Executor executor70 = restAdapter31.callbackExecutor;
        retrofit.Profiler profiler71 = restAdapter31.profiler;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider73 = null;
        builder72.clientProvider = provider73;
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.client.Client.Provider provider78 = builder76.clientProvider;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider81 = builder79.clientProvider;
        builder76.clientProvider = provider81;
        builder72.clientProvider = provider81;
        retrofit.Profiler profiler84 = null;
        builder72.profiler = profiler84;
        java.util.concurrent.Executor executor86 = builder72.callbackExecutor;
        restAdapter31.httpExecutor = executor86;
        restAdapter10.callbackExecutor = executor86;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNull(errorHandler54);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(provider65);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNull(executor70);
        org.junit.Assert.assertNull(profiler71);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNotNull(executor86);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05493");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.client.Client.Provider provider9 = builder7.clientProvider;
        builder4.clientProvider = provider9;
        builder0.clientProvider = provider9;
        retrofit.Profiler profiler12 = null;
        builder0.profiler = profiler12;
        retrofit.Profiler profiler14 = null;
        builder0.profiler = profiler14;
        retrofit.RestAdapter.LogLevel logLevel16 = builder0.logLevel;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean27 = logLevel26.log();
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel26);
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter28.new RestHandler();
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = null;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log38, logLevel39);
        restAdapter28.logLevel = logLevel39;
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter28.logLevel;
        builder0.logLevel = logLevel43;
        boolean boolean45 = logLevel43.log();
        org.junit.Assert.assertNotNull(provider6);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05494");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel25);
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean29 = logLevel28.log();
        restAdapter26.logLevel = logLevel28;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        restAdapter26.log = log31;
        builder15.log = log31;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        retrofit.RestAdapter.Builder builder45 = builder15.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.client.Client.Provider provider51 = builder49.clientProvider;
        builder46.clientProvider = provider51;
        retrofit.RestAdapter.Builder builder53 = builder15.setClient(provider51);
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = null;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel63);
        retrofit.Profiler profiler65 = restAdapter64.profiler;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean67 = logLevel66.log();
        restAdapter64.logLevel = logLevel66;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.Builder builder70 = builder53.setLogLevel(logLevel69);
        retrofit.converter.Converter converter71 = builder53.converter;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder72.clientProvider;
        retrofit.RestAdapter.Builder builder76 = builder72.setServer("hi!");
        retrofit.ErrorHandler errorHandler77 = builder72.errorHandler;
        retrofit.RestAdapter.Builder builder78 = builder53.setErrorHandler(errorHandler77);
        retrofit.RestAdapter.LogLevel logLevel79 = builder53.logLevel;
        retrofit.client.Client.Provider provider80 = builder53.clientProvider;
        restAdapter10.clientProvider = provider80;
        retrofit.Profiler profiler82 = null;
        restAdapter10.profiler = profiler82;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(converter71);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(provider80);
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05495");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.ErrorHandler errorHandler1 = restAdapter0.errorHandler;
        retrofit.ErrorHandler errorHandler2 = restAdapter0.errorHandler;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.client.Client.Provider provider6 = restAdapter0.clientProvider;
        java.lang.Throwable throwable7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable7, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05496");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        java.util.concurrent.Executor executor12 = null;
        restAdapter10.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.converter.Converter converter15 = restAdapter10.converter;
        retrofit.Profiler profiler16 = null;
        restAdapter10.profiler = profiler16;
        retrofit.client.Header[] headerArray26 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList27 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList27, headerArray26);
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList27, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList27, typedOutput31);
        java.util.List<retrofit.client.Header> headerList33 = request32.getHeaders();
        java.util.List<retrofit.client.Header> headerList34 = request32.getHeaders();
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList34, typedOutput35);
        java.util.List<retrofit.client.Header> headerList37 = request36.getHeaders();
        java.util.List<retrofit.client.Header> headerList38 = request36.getHeaders();
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("hi!", "", headerList38, typedOutput39);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request41 = restAdapter10.logAndReplaceRequest(request40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNotNull(headerArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05497");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler6 = null;
        builder4.profiler = profiler6;
        retrofit.Server server8 = null;
        builder4.server = server8;
        java.util.concurrent.Executor executor10 = builder4.callbackExecutor;
        builder0.callbackExecutor = executor10;
        retrofit.Server server12 = builder0.server;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel22);
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        java.util.concurrent.Executor executor25 = null;
        restAdapter23.httpExecutor = executor25;
        retrofit.converter.Converter converter27 = restAdapter23.converter;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider29 = null;
        builder28.clientProvider = provider29;
        retrofit.converter.Converter converter31 = null;
        builder28.converter = converter31;
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider35 = null;
        builder34.clientProvider = provider35;
        java.util.concurrent.Executor executor37 = builder34.httpExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.Profiler profiler40 = null;
        builder38.profiler = profiler40;
        retrofit.Server server42 = null;
        builder38.server = server42;
        java.util.concurrent.Executor executor44 = builder38.callbackExecutor;
        builder34.httpExecutor = executor44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider48 = null;
        builder47.clientProvider = provider48;
        java.util.concurrent.Executor executor50 = builder47.httpExecutor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.Profiler profiler53 = null;
        builder51.profiler = profiler53;
        retrofit.Server server55 = null;
        builder51.server = server55;
        java.util.concurrent.Executor executor57 = builder51.callbackExecutor;
        builder47.httpExecutor = executor57;
        builder46.callbackExecutor = executor57;
        builder34.callbackExecutor = executor57;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider62 = null;
        builder61.clientProvider = provider62;
        java.util.concurrent.Executor executor64 = builder61.httpExecutor;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.Profiler profiler67 = null;
        builder65.profiler = profiler67;
        retrofit.Server server69 = null;
        builder65.server = server69;
        java.util.concurrent.Executor executor71 = builder65.callbackExecutor;
        builder61.httpExecutor = executor71;
        java.util.concurrent.Executor executor73 = builder61.httpExecutor;
        retrofit.RestAdapter.Builder builder74 = builder28.setExecutors(executor57, executor73);
        restAdapter23.callbackExecutor = executor73;
        builder0.httpExecutor = executor73;
        java.util.concurrent.Executor executor77 = builder0.httpExecutor;
        java.util.concurrent.Executor executor78 = null;
        builder0.httpExecutor = executor78;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter80 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(executor77);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05498");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean13 = logLevel12.log();
        restAdapter10.logLevel = logLevel12;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter10.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        restAdapter10.requestInterceptor = requestInterceptor19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean31 = logLevel30.log();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel30);
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter32.new RestHandler();
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean44 = logLevel43.log();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel43);
        restAdapter32.logLevel = logLevel43;
        retrofit.converter.Converter converter47 = restAdapter32.converter;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter32.getLogLevel();
        restAdapter10.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider50 = null;
        restAdapter10.clientProvider = provider50;
        retrofit.RequestInterceptor requestInterceptor52 = restAdapter10.requestInterceptor;
        retrofit.converter.Converter converter53 = restAdapter10.converter;
        java.util.concurrent.Executor executor54 = restAdapter10.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor52);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(executor54);
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05499");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        java.lang.String str13 = request12.getMethod();
        java.lang.String str14 = request12.getMethod();
        java.lang.String str15 = request12.getUrl();
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        java.lang.String str17 = request12.getUrl();
        java.lang.String str18 = request12.getUrl();
        java.util.List<retrofit.client.Header> headerList19 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "hi!", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList19, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05500");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler12 = restAdapter10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        java.util.concurrent.Executor executor14 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor15 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor18 = restAdapter10.callbackExecutor;
        retrofit.ErrorHandler errorHandler19 = restAdapter10.errorHandler;
        retrofit.client.Response response21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response23 = restAdapter10.logAndReplaceResponse("", response21, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(errorHandler19);
    }
}

